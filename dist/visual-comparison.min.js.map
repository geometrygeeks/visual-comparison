{"version":3,"sources":["webpack:///webpack/bootstrap 49e1477cf87629c11fe7","webpack:///./node_modules/snapsvg/dist/snap.svg.js","webpack:///./src/visual-bike.js","webpack:///./node_modules/snap.svg.zpd/snap.svg.zpd.js","webpack:///./src/default-settings.js","webpack:///./src/default-input-bikes.js","webpack:///./src/parse-geometry.js","webpack:///./src/draw-bike-snapsvg.js","webpack:///./src/test-comparisons.js"],"names":["__webpack_require__","moduleId","installedModules","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","glob","current_event","stop","has","separator","comaseparator","numsort","a","b","events","firstDefined","ii","this","length","lastDefined","objtos","toString","Str","String","isArray","Array","ar","eve","scope","oldstop","args","slice","arguments","listeners","z","indexed","queue","out","ce","push","zIndex","sort","apply","_events","item","items","k","j","jj","nes","names","split","e","es","concat","f","sep","replace","RegExp","on","exist","event","attrs","nt","subname","cur","join","test","nts","off","unbind","key","splice","inodes","unshift","funcs","prune","once","f2","version","__WEBPACK_LOCAL_MODULE_0__","factory","undefined","window","mina","requestID","animations","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","setTimeout","Date","getTime","idgen","idprefix","timer","now","sta","val","ds","dur","B","speed","spd","duration","stopit","id","update","pause","pdif","resume","frame","res","start","end","easing","set","timeStamp","len","A","anim","linear","status","time","getById","easeout","Math","pow","easein","easeinout","q","Q","sqrt","x","y","t","abs","backin","backout","elastic","sin","PI","bounce","Snap","root","w","h","nodeType","wrap","is","Element","doc","querySelector","Paper","$","el","attr","createTextNode","text","createComment","substring","getAttributeNS","xlink","xmlns","getAttribute","nodeValue","setAttributeNS","setAttribute","removeAttribute","createElementNS","type","toLowerCase","isFinite","objectToString","clone","obj","constructor","cacher","postprocessor","newf","arg","cache","count","array","repush","shift","angle","x1","y1","x2","y2","x3","y3","math","atan2","rad","deg","getSomeSVG","node","ownerSVGElement","select","add2group","list","forEach","appendChild","children","childNodes","snap","hub","svg","paper","tagName","nodeName","ID","anims","_","transform","add","g","mask","pattern","symbol","method","Fragment","frag","make","parent","desc","defs","proto","ownerDocument","getElementsByTagName","body","height","width","dom","contentDocument","jsonFiller","win","document","toFloat","parseFloat","toInt","parseInt","mmax","max","mmin","min","E","round","colourRegExp","commaSpaces","hsrg","hs","rg","pathCommand","tCommand","pathValues","url","format","tokenRegex","objNotationRegex","str","all","quote","quotedName","isFunc","replacer","tan","cos","asin","num","acos","atan","len2","closestPoint","path","distance2","dx","dy","best","bestLength","scan","scanDistance","pathNode","pathLength","getTotalLength","precision","pathSegList","numberOfItems","bestDistance","Infinity","scanLength","getPointAtLength","before","after","beforeLength","afterLength","beforeDistance","afterDistance","distance","snapTo","values","value","tolerance","rem","getRGB","colour","indexOf","r","hex","error","rgbtoString","charAt","toHex","red","green","blue","opacity","rgb","match","hsb2rgb","hsl2rgb","hsb","hsl","toFixed","color","style","defaultView","getComputedStyle","getPropertyValue","hsbtoString","hsltoString","prepareRGB","string","clr","packageRGB","rgb2hsl","rgb2hsb","v","R","G","X","C","H","S","V","L","M","parsePathString","pathString","pth","arr","paramCounts","u","data","params","parseTransformString","TString","svgTransform2string","tstr","rgTransform","transform2matrix","bbox","tdata","Matrix","bb","tlen","command","absolute","inver","invert","translate","rotate","scale","_unit2px","getW","mgr","getBBox","getH","nam","class","fill","removeChild","contains","compareDocumentPosition","getSomeDefs","parentNode","pdefs","query","selectAll","nodelist","querySelectorAll","setInterval","attributes","json","att","parse","createDocumentFragment","full","div","createElement","innerHTML","firstChild","fragment","ch","toJSON","css","lastIndexOf","letter","cssAttr","alignment-baseline","baseline-shift","clip","clip-path","clip-rule","color-interpolation","color-interpolation-filters","color-profile","color-rendering","cursor","direction","display","dominant-baseline","enable-background","fill-opacity","fill-rule","filter","flood-color","flood-opacity","font","font-family","font-size","font-size-adjust","font-stretch","font-style","font-variant","font-weight","glyph-orientation-horizontal","glyph-orientation-vertical","image-rendering","kerning","letter-spacing","lighting-color","marker","marker-end","marker-mid","marker-start","overflow","pointer-events","shape-rendering","stop-color","stop-opacity","stroke","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-anchor","text-decoration","text-rendering","unicode-bidi","visibility","word-spacing","writing-mode","toUpperCase","ajax","postData","req","XMLHttpRequest","pd","encodeURIComponent","open","setRequestHeader","onreadystatechange","readyState","send","load","responseText","getElementByPoint","canvas","target","elementFromPoint","opera","so","elem","box","getBoundingClientRect","docElem","documentElement","clientTop","clientLeft","top","pageYOffset","scrollTop","left","pageXOffset","scrollLeft","getOffset","sr","createSVGRect","hits","getIntersectionList","plugin","extractTransform","doReturn","matrix","chld","elproto","unit2px","isWithoutTransform","getClientRects","removed","localMatrix","original","href","getElementById","pathfinder","deflt","bboxwt","realPath","map","propString","papa","global","getCTM","local","ms","localString","toTransformString","globalMatrix","totalMatrix","diffMatrix","total","gradientTransform","patternTransform","append","it","appendTo","prepend","first","insertBefore","prependTo","nextSibling","insertAfter","remove","asPX","use","xlink:href","cloneNode","urltest","uses","linktest","els","ids","oldid","old","fs","fixids","toDefs","toPattern","patternUnits","viewBox","refX","refY","cx","cy","markerWidth","markerHeight","orient","eldata","removeData","outerSVG","innerSVG","toDataURL","btoa","contents","unescape","from","to","Animation","animation","inAnim","_attrs","_callback","curStatus","animate","setter","eq","fkeys","tkeys","keys","equal","matrixproto","norm","normalize","mag","aNew","bNew","multLeft","cNew","eNew","skewX","skew","skewY","fromCharCode","offset","determinant","row","scalex","shear","scaley","isSimple","isSuperSimple","noRotation","shorter","fillStroke","URL","grad","gradient","setFontSize","fontSize","textExtract","chi","getFontSize","reURLValue","deurl","clipIt","gradrg","seed","step","stops","tokens","toAbsolute","txt","className","baseVal","vb","rx","ry","tp","textPath","tuner","chunk","tuned","textContent","internal","rgNotSpace","addClass","clazz","finalValue","classes","curClasses","removeClass","pos","hasClass","toggleClass","flag","getNumber","operators","+","-","/","*","reUnit","reAddon","plus","evnt","atr","unit","aUnit","op","isNaN","bplus","getUnit","rect","circle","preload","onerror","src","img","cssText","onload","image","preserveAspectRatio","offsetWidth","offsetHeight","ellipse","group","vbx","vby","vbw","vbh","ptrn","vx","vy","vw","vh","line","polyline","points","polygon","Gstops","GaddStop","inserted","GgetBBox","GsetStops","addStop","gradientLinear","setStops","gradientRadial","fx","fy","gradientUnits","clear","next","paths","ps","sleep","r1","r2","r0","rectPath","p2s","pathClone","pathArray","getPointAtSegmentLength","p1x","p1y","c1x","c1y","c2x","c2y","p2x","p2y","bezlen","findDotsAtSegment","x4","y4","ll","t2","getTotLen","getLengthFactory","istotal","subpath","O","onlystart","point","sp","subpaths","path2curve","t1","t13","t12","t3","mx","my","nx","ny","alpha","bezierBBox","curveDim","isPointInsideBBox","isBBoxIntersect","bbox1","bbox2","base3","p1","p2","p3","p4","z2","Tvalues","Cvalues","sum","ct","xbase","ybase","comb","intersect","denominator","px","py","px2","py2","interHelper","bez1","bez2","justCount","n1","n2","dots1","dots2","xy","di","di1","dj","dj1","ci","cj","interPathHelper","path1","path2","x1m","y1m","x2m","y2m","pi","pj","intr","kk","segment1","segment2","pathBBox","Y","dim","xmin","ymin","ellipsePath","pathToAbsolute","pa0","pa","crz","dots","pop","catmullRom2bezier","l2c","q2c","ax","ay","a2c","large_arc_flag","sweep_flag","recursive","_120","f1","rx2","ry2","df","f2old","x2old","y2old","c1","s1","c2","s2","hx","hy","m1","m2","m3","m4","newres","x0","y0","b2ac","sqrtb2ac","tvalues","bounds","mt","jlen","curve","bx","by","qx","qy","attrs2","processPath","pcom","T","fixArc","pp","pcoms1","pcoms2","fixM","a1","a2","pfirst","seg","seg2","seglen","seg2len","crp","iLen","getSubpathsAtLength","getPath","getSubpath","closest","inside","found","intersection","intersectionNumber","isPointInside","toRelative","lowerCase","rel","toCubic","pathi","Set","bindings","setproto","thisArg","each","begin","handler","cb","callbacker","bind","aname","unbound","index","insertion","tail","todel","arglen","exclude","getEmpty","getViewBox","getColour","Function","path2array","isNumeric","Number","tt1","tt2","maxlength","equaliseTransform","bUnit","arr1","arr2","arrayEqual","supportsTouch","touchMap","mousedown","mousemove","mouseup","getScroll","preventTouch","originalEvent","preventDefault","stopTouch","stopPropagation","addEvent","fn","element","realName","scrollY","scrollX","targetTouches","olde","clientX","clientY","addEventListener","removeEventListener","drag","dragMove","dragi","touch","touches","identifier","_drag","move_scope","dragUp","unmousemove","unmouseup","end_scope","start_scope","eventName","hover","f_in","f_out","scope_in","scope_out","mouseover","mouseout","unhover","unmouseover","unmouseout","draggable","onmove","onstart","onend","init","origTransform","undrag","unmousedown","pproto","rgurl","filstr","filterUnits","blur","def","shadow","grayscale","amount","sepia","saturate","hueRotate","amount2","brightness","contrast","firstLetter","getAlign","way","align","saveColor","colors","A100","A200","A400","A700","mui","flat","pink","purple","deeppurple","indigo","lightblue","cyan","teal","lightgreen","lime","yellow","amber","orange","deeporange","brown","grey","bluegrey","turquoise","greensea","sunflower","emerland","nephritis","carrot","pumpkin","peterriver","belizehole","alizarin","pomegranate","amethyst","wisteria","clouds","silver","wetasphalt","midnightblue","concrete","asbestos","importMUIColors","__WEBPACK_IMPORTED_MODULE_5__draw_bike_snapsvg_js__","__webpack_exports__","bike_geometries","settings","drawSettings","__WEBPACK_IMPORTED_MODULE_2__default_settings_js__","__WEBPACK_IMPORTED_MODULE_3__default_input_bikes_js__","start_zoom","bikecanvas","bikeGeometries","bikeDrawings","x_min","x_max","y_min","y_max","rawGeometryData","bike","__WEBPACK_IMPORTED_MODULE_4__parse_geometry_js__","drawing","draw","resolvedPoint","min_y","min_x","max_x","max_y","start_x","start_y","inputMeasurements","title","drawNames","zpd","err","console","log","zoomTo","SVGElement","getTransformToElement","getScreenCTM","inverse","multiply","rootSvgObject","snapsvgzpd","uniqueIdPrefix","dataStore","enable","_increaseDecreaseOrNumber","defaultValue","input","_setCTM","threshold","oldMatrix","_getEventPoint","svgNode","createSVGPoint","svgPos","curleft","curtop","offsetParent","offsetLeft","offsetTop","_findPos","_getHandlerFunctions","zpdElement","mouseUp","returnValue","state","mouseDown","options","stateTarget","stateTf","stateOrigin","matrixTransform","mouseMove","pan","zoomThreshold","dragPoint","createSVGMatrix","mouseWheel","zoom","delta","wheelDelta","detail","zoomScale","callbackFunc","situation","zpdOptions","situationState","prop","prop2","svgObject","rootChildNodes","gElement","gNode","matrixString","noOfChildNodes","handlerFunctions","_initZpdElement","svgElement","navigator","userAgent","_setupHandlers","_tearDownHandlers","_removeNodeKeepChildren","interval","ease","callbackFunction","currentTransformMatrix","currentZoom","originX","originY","boundingBox","deltaX","deltaY","deltaZoom","_getSvgMatrixAsString","panTo","gMatrix","matrixX","matrixY","scale_factor","colours","reach","stack","top_tube","seat_tube_length","head_angle","seat_angle","head_tube","chainstay","wheelbase","standover","bb_drop","rake","trail","wheel_size","tire_width","head_tube_top_cap","head_tube_spacer","stem_height","stem_angle","stem_length","crank","bb_height","fork_length","seatpost_length","initMeasurements","attrname","bb_cx","bb_cy","stack_reach_x","stack_reach_y","virtual_top_tube_rear_x","virtual_top_tube_rear_y","seat_tube_top_x","seat_tube_top_y","seat_stays_top_x","seat_stays_top_y","virtual_steer_axis_bottom_y","virtual_steer_axis_bottom_x","head_tube_bottom_x","head_tube_bottom_y","top_tube_front_x","top_tube_front_y","down_tube_front_x","down_tube_front_y","steerer_tube_top_x","steerer_tube_top_y","stem_rear_x","stem_rear_y","stem_forward_x","stem_forward_y","crank_length","crank_forward_x","crank_forward_y","wheel_r","backwheel_cy","frontwheel_cy","backwheel_cx","frontwheel_cx","seatpost_top_x","seatpost_top_y","bikeGeometry","frameColour","x_offset","y_offset","frameSettings","strokeWidth","wheelSeetings","drawObjs","mid-travel-mtbs","seatpost_diameter","axle_to_crown","year","bb_type","slug","axle_spacing","bike_slug","fork_rake","front_centre","front_sus_travel","rear_sus_travel","handlebar_width","endurance-road","racy-road","tri-tt-bikes","chameleon_evolution-2008-2017","recommended_height_manuf"],"mappings":"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","file":"visual-comparison.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 49e1477cf87629c11fe7","/*** IMPORTS FROM imports-loader ***/\n(function() {\nvar fix = module.exports=0;\n\n// Snap.svg 0.5.0\n//\n// Copyright (c) 2013 – 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// build: 2017-02-06\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// ┌────────────────────────────────────────────────────────────┐ \\\\\n// │ Eve 0.5.0 - JavaScript Events Library                      │ \\\\\n// ├────────────────────────────────────────────────────────────┤ \\\\\n// │ Author Dmitry Baranovskiy (http://dmitry.baranovskiy.com/) │ \\\\\n// └────────────────────────────────────────────────────────────┘ \\\\\n\n(function (glob) {\n    var version = \"0.5.0\",\n        has = \"hasOwnProperty\",\n        separator = /[\\.\\/]/,\n        comaseparator = /\\s*,\\s*/,\n        wildcard = \"*\",\n        fun = function () {},\n        numsort = function (a, b) {\n            return a - b;\n        },\n        current_event,\n        stop,\n        events = {n: {}},\n        firstDefined = function () {\n            for (var i = 0, ii = this.length; i < ii; i++) {\n                if (typeof this[i] != \"undefined\") {\n                    return this[i];\n                }\n            }\n        },\n        lastDefined = function () {\n            var i = this.length;\n            while (--i) {\n                if (typeof this[i] != \"undefined\") {\n                    return this[i];\n                }\n            }\n        },\n        objtos = Object.prototype.toString,\n        Str = String,\n        isArray = Array.isArray || function (ar) {\n            return ar instanceof Array || objtos.call(ar) == \"[object Array]\";\n        };\n    /*\\\n     * eve\n     [ method ]\n\n     * Fires event with given `name`, given scope and other parameters.\n\n     > Arguments\n\n     - name (string) name of the *event*, dot (`.`) or slash (`/`) separated\n     - scope (object) context for the event handlers\n     - varargs (...) the rest of arguments will be sent to event handlers\n\n     = (object) array of returned values from the listeners. Array has two methods `.firstDefined()` and `.lastDefined()` to get first or last not `undefined` value.\n    \\*/\n        eve = function (name, scope) {\n            var e = events,\n                oldstop = stop,\n                args = Array.prototype.slice.call(arguments, 2),\n                listeners = eve.listeners(name),\n                z = 0,\n                f = false,\n                l,\n                indexed = [],\n                queue = {},\n                out = [],\n                ce = current_event,\n                errors = [];\n            out.firstDefined = firstDefined;\n            out.lastDefined = lastDefined;\n            current_event = name;\n            stop = 0;\n            for (var i = 0, ii = listeners.length; i < ii; i++) if (\"zIndex\" in listeners[i]) {\n                indexed.push(listeners[i].zIndex);\n                if (listeners[i].zIndex < 0) {\n                    queue[listeners[i].zIndex] = listeners[i];\n                }\n            }\n            indexed.sort(numsort);\n            while (indexed[z] < 0) {\n                l = queue[indexed[z++]];\n                out.push(l.apply(scope, args));\n                if (stop) {\n                    stop = oldstop;\n                    return out;\n                }\n            }\n            for (i = 0; i < ii; i++) {\n                l = listeners[i];\n                if (\"zIndex\" in l) {\n                    if (l.zIndex == indexed[z]) {\n                        out.push(l.apply(scope, args));\n                        if (stop) {\n                            break;\n                        }\n                        do {\n                            z++;\n                            l = queue[indexed[z]];\n                            l && out.push(l.apply(scope, args));\n                            if (stop) {\n                                break;\n                            }\n                        } while (l)\n                    } else {\n                        queue[l.zIndex] = l;\n                    }\n                } else {\n                    out.push(l.apply(scope, args));\n                    if (stop) {\n                        break;\n                    }\n                }\n            }\n            stop = oldstop;\n            current_event = ce;\n            return out;\n        };\n        // Undocumented. Debug only.\n        eve._events = events;\n    /*\\\n     * eve.listeners\n     [ method ]\n\n     * Internal method which gives you array of all event handlers that will be triggered by the given `name`.\n\n     > Arguments\n\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated\n\n     = (array) array of event handlers\n    \\*/\n    eve.listeners = function (name) {\n        var names = isArray(name) ? name : name.split(separator),\n            e = events,\n            item,\n            items,\n            k,\n            i,\n            ii,\n            j,\n            jj,\n            nes,\n            es = [e],\n            out = [];\n        for (i = 0, ii = names.length; i < ii; i++) {\n            nes = [];\n            for (j = 0, jj = es.length; j < jj; j++) {\n                e = es[j].n;\n                items = [e[names[i]], e[wildcard]];\n                k = 2;\n                while (k--) {\n                    item = items[k];\n                    if (item) {\n                        nes.push(item);\n                        out = out.concat(item.f || []);\n                    }\n                }\n            }\n            es = nes;\n        }\n        return out;\n    };\n    /*\\\n     * eve.separator\n     [ method ]\n\n     * If for some reasons you don’t like default separators (`.` or `/`) you can specify yours\n     * here. Be aware that if you pass a string longer than one character it will be treated as\n     * a list of characters.\n\n     - separator (string) new separator. Empty string resets to default: `.` or `/`.\n    \\*/\n    eve.separator = function (sep) {\n        if (sep) {\n            sep = Str(sep).replace(/(?=[\\.\\^\\]\\[\\-])/g, \"\\\\\");\n            sep = \"[\" + sep + \"]\";\n            separator = new RegExp(sep);\n        } else {\n            separator = /[\\.\\/]/;\n        }\n    };\n    /*\\\n     * eve.on\n     [ method ]\n     **\n     * Binds given event handler with a given name. You can use wildcards “`*`” for the names:\n     | eve.on(\"*.under.*\", f);\n     | eve(\"mouse.under.floor\"); // triggers f\n     * Use @eve to trigger the listener.\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n     **\n     - name (array) if you don’t want to use separators, you can use array of strings\n     - f (function) event handler function\n     **\n     = (function) returned function accepts a single numeric parameter that represents z-index of the handler. It is an optional feature and only used when you need to ensure that some subset of handlers will be invoked in a given order, despite of the order of assignment. \n     > Example:\n     | eve.on(\"mouse\", eatIt)(2);\n     | eve.on(\"mouse\", scream);\n     | eve.on(\"mouse\", catchIt)(1);\n     * This will ensure that `catchIt` function will be called before `eatIt`.\n     *\n     * If you want to put your handler before non-indexed handlers, specify a negative value.\n     * Note: I assume most of the time you don’t need to worry about z-index, but it’s nice to have this feature “just in case”.\n    \\*/\n    eve.on = function (name, f) {\n        if (typeof f != \"function\") {\n            return function () {};\n        }\n        var names = isArray(name) ? (isArray(name[0]) ? name : [name]) : Str(name).split(comaseparator);\n        for (var i = 0, ii = names.length; i < ii; i++) {\n            (function (name) {\n                var names = isArray(name) ? name : Str(name).split(separator),\n                    e = events,\n                    exist;\n                for (var i = 0, ii = names.length; i < ii; i++) {\n                    e = e.n;\n                    e = e.hasOwnProperty(names[i]) && e[names[i]] || (e[names[i]] = {n: {}});\n                }\n                e.f = e.f || [];\n                for (i = 0, ii = e.f.length; i < ii; i++) if (e.f[i] == f) {\n                    exist = true;\n                    break;\n                }\n                !exist && e.f.push(f);\n            }(names[i]));\n        }\n        return function (zIndex) {\n            if (+zIndex == +zIndex) {\n                f.zIndex = +zIndex;\n            }\n        };\n    };\n    /*\\\n     * eve.f\n     [ method ]\n     **\n     * Returns function that will fire given event with optional arguments.\n     * Arguments that will be passed to the result function will be also\n     * concated to the list of final arguments.\n     | el.onclick = eve.f(\"click\", 1, 2);\n     | eve.on(\"click\", function (a, b, c) {\n     |     console.log(a, b, c); // 1, 2, [event object]\n     | });\n     > Arguments\n     - event (string) event name\n     - varargs (…) and any other arguments\n     = (function) possible event handler function\n    \\*/\n    eve.f = function (event) {\n        var attrs = [].slice.call(arguments, 1);\n        return function () {\n            eve.apply(null, [event, null].concat(attrs).concat([].slice.call(arguments, 0)));\n        };\n    };\n    /*\\\n     * eve.stop\n     [ method ]\n     **\n     * Is used inside an event handler to stop the event, preventing any subsequent listeners from firing.\n    \\*/\n    eve.stop = function () {\n        stop = 1;\n    };\n    /*\\\n     * eve.nt\n     [ method ]\n     **\n     * Could be used inside event handler to figure out actual name of the event.\n     **\n     > Arguments\n     **\n     - subname (string) #optional subname of the event\n     **\n     = (string) name of the event, if `subname` is not specified\n     * or\n     = (boolean) `true`, if current event’s name contains `subname`\n    \\*/\n    eve.nt = function (subname) {\n        var cur = isArray(current_event) ? current_event.join(\".\") : current_event;\n        if (subname) {\n            return new RegExp(\"(?:\\\\.|\\\\/|^)\" + subname + \"(?:\\\\.|\\\\/|$)\").test(cur);\n        }\n        return cur;\n    };\n    /*\\\n     * eve.nts\n     [ method ]\n     **\n     * Could be used inside event handler to figure out actual name of the event.\n     **\n     **\n     = (array) names of the event\n    \\*/\n    eve.nts = function () {\n        return isArray(current_event) ? current_event : current_event.split(separator);\n    };\n    /*\\\n     * eve.off\n     [ method ]\n     **\n     * Removes given function from the list of event listeners assigned to given name.\n     * If no arguments specified all the events will be cleared.\n     **\n     > Arguments\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n    \\*/\n    /*\\\n     * eve.unbind\n     [ method ]\n     **\n     * See @eve.off\n    \\*/\n    eve.off = eve.unbind = function (name, f) {\n        if (!name) {\n            eve._events = events = {n: {}};\n            return;\n        }\n        var names = isArray(name) ? (isArray(name[0]) ? name : [name]) : Str(name).split(comaseparator);\n        if (names.length > 1) {\n            for (var i = 0, ii = names.length; i < ii; i++) {\n                eve.off(names[i], f);\n            }\n            return;\n        }\n        names = isArray(name) ? name : Str(name).split(separator);\n        var e,\n            key,\n            splice,\n            i, ii, j, jj,\n            cur = [events],\n            inodes = [];\n        for (i = 0, ii = names.length; i < ii; i++) {\n            for (j = 0; j < cur.length; j += splice.length - 2) {\n                splice = [j, 1];\n                e = cur[j].n;\n                if (names[i] != wildcard) {\n                    if (e[names[i]]) {\n                        splice.push(e[names[i]]);\n                        inodes.unshift({\n                            n: e,\n                            name: names[i]\n                        });\n                    }\n                } else {\n                    for (key in e) if (e[has](key)) {\n                        splice.push(e[key]);\n                        inodes.unshift({\n                            n: e,\n                            name: key\n                        });\n                    }\n                }\n                cur.splice.apply(cur, splice);\n            }\n        }\n        for (i = 0, ii = cur.length; i < ii; i++) {\n            e = cur[i];\n            while (e.n) {\n                if (f) {\n                    if (e.f) {\n                        for (j = 0, jj = e.f.length; j < jj; j++) if (e.f[j] == f) {\n                            e.f.splice(j, 1);\n                            break;\n                        }\n                        !e.f.length && delete e.f;\n                    }\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n                        var funcs = e.n[key].f;\n                        for (j = 0, jj = funcs.length; j < jj; j++) if (funcs[j] == f) {\n                            funcs.splice(j, 1);\n                            break;\n                        }\n                        !funcs.length && delete e.n[key].f;\n                    }\n                } else {\n                    delete e.f;\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n                        delete e.n[key].f;\n                    }\n                }\n                e = e.n;\n            }\n        }\n        // prune inner nodes in path\n        prune: for (i = 0, ii = inodes.length; i < ii; i++) {\n            e = inodes[i];\n            for (key in e.n[e.name].f) {\n                // not empty (has listeners)\n                continue prune;\n            }\n            for (key in e.n[e.name].n) {\n                // not empty (has children)\n                continue prune;\n            }\n            // is empty\n            delete e.n[e.name];\n        }\n    };\n    /*\\\n     * eve.once\n     [ method ]\n     **\n     * Binds given event handler with a given name to only run once then unbind itself.\n     | eve.once(\"login\", f);\n     | eve(\"login\"); // triggers f\n     | eve(\"login\"); // no listeners\n     * Use @eve to trigger the listener.\n     **\n     > Arguments\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n     **\n     = (function) same return function as @eve.on\n    \\*/\n    eve.once = function (name, f) {\n        var f2 = function () {\n            eve.off(name, f2);\n            return f.apply(this, arguments);\n        };\n        return eve.on(name, f2);\n    };\n    /*\\\n     * eve.version\n     [ property (string) ]\n     **\n     * Current version of the library.\n    \\*/\n    eve.version = version;\n    eve.toString = function () {\n        return \"You are running Eve \" + version;\n    };\n    (typeof module != \"undefined\" && module.exports) ? (module.exports = eve) : (typeof define === \"function\" && define.amd ? (define(\"eve\", [], function() { return eve; })) : (glob.eve = eve));\n})(this);\n\n(function (glob, factory) {\n    // AMD support\n    if (typeof define == \"function\" && define.amd) {\n        // Define as an anonymous module\n        define([\"eve\"], function (eve) {\n            return factory(glob, eve);\n        });\n    } else if (typeof exports != \"undefined\") {\n        // Next for Node.js or CommonJS\n        var eve = require(\"eve\");\n        module.exports = factory(glob, eve);\n    } else {\n        // Browser globals (glob is window)\n        // Snap adds itself to window\n        factory(glob, glob.eve);\n    }\n}(window || this, function (window, eve) {\n\n// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar mina = (function (eve) {\n    var animations = {},\n    requestAnimFrame = window.requestAnimationFrame       ||\n                       window.webkitRequestAnimationFrame ||\n                       window.mozRequestAnimationFrame    ||\n                       window.oRequestAnimationFrame      ||\n                       window.msRequestAnimationFrame     ||\n                       function (callback) {\n                           setTimeout(callback, 16, new Date().getTime());\n                           return true;\n                       },\n    requestID,\n    isArray = Array.isArray || function (a) {\n        return a instanceof Array ||\n            Object.prototype.toString.call(a) == \"[object Array]\";\n    },\n    idgen = 0,\n    idprefix = \"M\" + (+new Date).toString(36),\n    ID = function () {\n        return idprefix + (idgen++).toString(36);\n    },\n    diff = function (a, b, A, B) {\n        if (isArray(a)) {\n            res = [];\n            for (var i = 0, ii = a.length; i < ii; i++) {\n                res[i] = diff(a[i], b, A[i], B);\n            }\n            return res;\n        }\n        var dif = (A - a) / (B - b);\n        return function (bb) {\n            return a + dif * (bb - b);\n        };\n    },\n    timer = Date.now || function () {\n        return +new Date;\n    },\n    sta = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.s;\n        }\n        var ds = a.s - val;\n        a.b += a.dur * ds;\n        a.B += a.dur * ds;\n        a.s = val;\n    },\n    speed = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.spd;\n        }\n        a.spd = val;\n    },\n    duration = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.dur;\n        }\n        a.s = a.s * val / a.dur;\n        a.dur = val;\n    },\n    stopit = function () {\n        var a = this;\n        delete animations[a.id];\n        a.update();\n        eve(\"mina.stop.\" + a.id, a);\n    },\n    pause = function () {\n        var a = this;\n        if (a.pdif) {\n            return;\n        }\n        delete animations[a.id];\n        a.update();\n        a.pdif = a.get() - a.b;\n    },\n    resume = function () {\n        var a = this;\n        if (!a.pdif) {\n            return;\n        }\n        a.b = a.get() - a.pdif;\n        delete a.pdif;\n        animations[a.id] = a;\n        frame();\n    },\n    update = function () {\n        var a = this,\n            res;\n        if (isArray(a.start)) {\n            res = [];\n            for (var j = 0, jj = a.start.length; j < jj; j++) {\n                res[j] = +a.start[j] +\n                    (a.end[j] - a.start[j]) * a.easing(a.s);\n            }\n        } else {\n            res = +a.start + (a.end - a.start) * a.easing(a.s);\n        }\n        a.set(res);\n    },\n    frame = function (timeStamp) {\n        // Manual invokation?\n        if (!timeStamp) {\n            // Frame loop stopped?\n            if (!requestID) {\n                // Start frame loop...\n                requestID = requestAnimFrame(frame);\n            }\n            return;\n        }\n        var len = 0;\n        for (var i in animations) if (animations.hasOwnProperty(i)) {\n            var a = animations[i],\n                b = a.get(),\n                res;\n            len++;\n            a.s = (b - a.b) / (a.dur / a.spd);\n            if (a.s >= 1) {\n                delete animations[i];\n                a.s = 1;\n                len--;\n                (function (a) {\n                    setTimeout(function () {\n                        eve(\"mina.finish.\" + a.id, a);\n                    });\n                }(a));\n            }\n            a.update();\n        }\n        requestID = len ? requestAnimFrame(frame) : false;\n    },\n    /*\\\n     * mina\n     [ method ]\n     **\n     * Generic animation of numbers\n     **\n     - a (number) start _slave_ number\n     - A (number) end _slave_ number\n     - b (number) start _master_ number (start time in general case)\n     - B (number) end _master_ number (end time in general case)\n     - get (function) getter of _master_ number (see @mina.time)\n     - set (function) setter of _slave_ number\n     - easing (function) #optional easing function, default is @mina.linear\n     = (object) animation descriptor\n     o {\n     o         id (string) animation id,\n     o         start (number) start _slave_ number,\n     o         end (number) end _slave_ number,\n     o         b (number) start _master_ number,\n     o         s (number) animation status (0..1),\n     o         dur (number) animation duration,\n     o         spd (number) animation speed,\n     o         get (function) getter of _master_ number (see @mina.time),\n     o         set (function) setter of _slave_ number,\n     o         easing (function) easing function, default is @mina.linear,\n     o         status (function) status getter/setter,\n     o         speed (function) speed getter/setter,\n     o         duration (function) duration getter/setter,\n     o         stop (function) animation stopper\n     o         pause (function) pauses the animation\n     o         resume (function) resumes the animation\n     o         update (function) calles setter with the right value of the animation\n     o }\n    \\*/\n    mina = function (a, A, b, B, get, set, easing) {\n        var anim = {\n            id: ID(),\n            start: a,\n            end: A,\n            b: b,\n            s: 0,\n            dur: B - b,\n            spd: 1,\n            get: get,\n            set: set,\n            easing: easing || mina.linear,\n            status: sta,\n            speed: speed,\n            duration: duration,\n            stop: stopit,\n            pause: pause,\n            resume: resume,\n            update: update\n        };\n        animations[anim.id] = anim;\n        var len = 0, i;\n        for (i in animations) if (animations.hasOwnProperty(i)) {\n            len++;\n            if (len == 2) {\n                break;\n            }\n        }\n        len == 1 && frame();\n        return anim;\n    };\n    /*\\\n     * mina.time\n     [ method ]\n     **\n     * Returns the current time. Equivalent to:\n     | function () {\n     |     return (new Date).getTime();\n     | }\n    \\*/\n    mina.time = timer;\n    /*\\\n     * mina.getById\n     [ method ]\n     **\n     * Returns an animation by its id\n     - id (string) animation's id\n     = (object) See @mina\n    \\*/\n    mina.getById = function (id) {\n        return animations[id] || null;\n    };\n\n    /*\\\n     * mina.linear\n     [ method ]\n     **\n     * Default linear easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.linear = function (n) {\n        return n;\n    };\n    /*\\\n     * mina.easeout\n     [ method ]\n     **\n     * Easeout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeout = function (n) {\n        return Math.pow(n, 1.7);\n    };\n    /*\\\n     * mina.easein\n     [ method ]\n     **\n     * Easein easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easein = function (n) {\n        return Math.pow(n, .48);\n    };\n    /*\\\n     * mina.easeinout\n     [ method ]\n     **\n     * Easeinout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeinout = function (n) {\n        if (n == 1) {\n            return 1;\n        }\n        if (n == 0) {\n            return 0;\n        }\n        var q = .48 - n / 1.04,\n            Q = Math.sqrt(.1734 + q * q),\n            x = Q - q,\n            X = Math.pow(Math.abs(x), 1 / 3) * (x < 0 ? -1 : 1),\n            y = -Q - q,\n            Y = Math.pow(Math.abs(y), 1 / 3) * (y < 0 ? -1 : 1),\n            t = X + Y + .5;\n        return (1 - t) * 3 * t * t + t * t * t;\n    };\n    /*\\\n     * mina.backin\n     [ method ]\n     **\n     * Backin easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backin = function (n) {\n        if (n == 1) {\n            return 1;\n        }\n        var s = 1.70158;\n        return n * n * ((s + 1) * n - s);\n    };\n    /*\\\n     * mina.backout\n     [ method ]\n     **\n     * Backout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backout = function (n) {\n        if (n == 0) {\n            return 0;\n        }\n        n = n - 1;\n        var s = 1.70158;\n        return n * n * ((s + 1) * n + s) + 1;\n    };\n    /*\\\n     * mina.elastic\n     [ method ]\n     **\n     * Elastic easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.elastic = function (n) {\n        if (n == !!n) {\n            return n;\n        }\n        return Math.pow(2, -10 * n) * Math.sin((n - .075) *\n            (2 * Math.PI) / .3) + 1;\n    };\n    /*\\\n     * mina.bounce\n     [ method ]\n     **\n     * Bounce easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.bounce = function (n) {\n        var s = 7.5625,\n            p = 2.75,\n            l;\n        if (n < 1 / p) {\n            l = s * n * n;\n        } else {\n            if (n < 2 / p) {\n                n -= 1.5 / p;\n                l = s * n * n + .75;\n            } else {\n                if (n < 2.5 / p) {\n                    n -= 2.25 / p;\n                    l = s * n * n + .9375;\n                } else {\n                    n -= 2.625 / p;\n                    l = s * n * n + .984375;\n                }\n            }\n        }\n        return l;\n    };\n    window.mina = mina;\n    return mina;\n})(typeof eve == \"undefined\" ? function () {} : eve);\n\n// Copyright (c) 2013 - 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar Snap = (function(root) {\nSnap.version = \"0.5.1\";\n/*\\\n * Snap\n [ method ]\n **\n * Creates a drawing surface or wraps existing SVG element.\n **\n - width (number|string) width of surface\n - height (number|string) height of surface\n * or\n - DOM (SVGElement) element to be wrapped into Snap structure\n * or\n - array (array) array of elements (will return set of elements)\n * or\n - query (string) CSS query selector\n = (object) @Element\n\\*/\nfunction Snap(w, h) {\n    if (w) {\n        if (w.nodeType) {\n            return wrap(w);\n        }\n        if (is(w, \"array\") && Snap.set) {\n            return Snap.set.apply(Snap, w);\n        }\n        if (w instanceof Element) {\n            return w;\n        }\n        if (h == null) {\n            // try {\n                w = glob.doc.querySelector(String(w));\n                return wrap(w);\n            // } catch (e) {\n                // return null;\n            // }\n        }\n    }\n    w = w == null ? \"100%\" : w;\n    h = h == null ? \"100%\" : h;\n    return new Paper(w, h);\n}\nSnap.toString = function () {\n    return \"Snap v\" + this.version;\n};\nSnap._ = {};\nvar glob = {\n    win: root.window,\n    doc: root.window.document\n};\nSnap._.glob = glob;\nvar has = \"hasOwnProperty\",\n    Str = String,\n    toFloat = parseFloat,\n    toInt = parseInt,\n    math = Math,\n    mmax = math.max,\n    mmin = math.min,\n    abs = math.abs,\n    pow = math.pow,\n    PI = math.PI,\n    round = math.round,\n    E = \"\",\n    S = \" \",\n    objectToString = Object.prototype.toString,\n    ISURL = /^url\\(['\"]?([^\\)]+?)['\"]?\\)$/i,\n    colourRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\))\\s*$/i,\n    bezierrg = /^(?:cubic-)?bezier\\(([^,]+),([^,]+),([^,]+),([^\\)]+)\\)/,\n    separator = Snap._.separator = /[,\\s]+/,\n    whitespace = /[\\s]/g,\n    commaSpaces = /[\\s]*,[\\s]*/,\n    hsrg = {hs: 1, rg: 1},\n    pathCommand = /([a-z])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    tCommand = /([rstm])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    pathValues = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\s]*,?[\\s]*/ig,\n    idgen = 0,\n    idprefix = \"S\" + (+new Date).toString(36),\n    ID = function (el) {\n        return (el && el.type ? el.type : E) + idprefix + (idgen++).toString(36);\n    },\n    xlink = \"http://www.w3.org/1999/xlink\",\n    xmlns = \"http://www.w3.org/2000/svg\",\n    hub = {},\n    /*\\\n     * Snap.url\n     [ method ]\n     **\n     * Wraps path into `\"url('<path>')\"`.\n     - value (string) path\n     = (string) wrapped path\n    \\*/\n    URL = Snap.url = function (url) {\n        return \"url('#\" + url + \"')\";\n    };\n\nfunction $(el, attr) {\n    if (attr) {\n        if (el == \"#text\") {\n            el = glob.doc.createTextNode(attr.text || attr[\"#text\"] || \"\");\n        }\n        if (el == \"#comment\") {\n            el = glob.doc.createComment(attr.text || attr[\"#text\"] || \"\");\n        }\n        if (typeof el == \"string\") {\n            el = $(el);\n        }\n        if (typeof attr == \"string\") {\n            if (el.nodeType == 1) {\n                if (attr.substring(0, 6) == \"xlink:\") {\n                    return el.getAttributeNS(xlink, attr.substring(6));\n                }\n                if (attr.substring(0, 4) == \"xml:\") {\n                    return el.getAttributeNS(xmlns, attr.substring(4));\n                }\n                return el.getAttribute(attr);\n            } else if (attr == \"text\") {\n                return el.nodeValue;\n            } else {\n                return null;\n            }\n        }\n        if (el.nodeType == 1) {\n            for (var key in attr) if (attr[has](key)) {\n                var val = Str(attr[key]);\n                if (val) {\n                    if (key.substring(0, 6) == \"xlink:\") {\n                        el.setAttributeNS(xlink, key.substring(6), val);\n                    } else if (key.substring(0, 4) == \"xml:\") {\n                        el.setAttributeNS(xmlns, key.substring(4), val);\n                    } else {\n                        el.setAttribute(key, val);\n                    }\n                } else {\n                    el.removeAttribute(key);\n                }\n            }\n        } else if (\"text\" in attr) {\n            el.nodeValue = attr.text;\n        }\n    } else {\n        el = glob.doc.createElementNS(xmlns, el);\n    }\n    return el;\n}\nSnap._.$ = $;\nSnap._.id = ID;\nfunction getAttrs(el) {\n    var attrs = el.attributes,\n        name,\n        out = {};\n    for (var i = 0; i < attrs.length; i++) {\n        if (attrs[i].namespaceURI == xlink) {\n            name = \"xlink:\";\n        } else {\n            name = \"\";\n        }\n        name += attrs[i].name;\n        out[name] = attrs[i].textContent;\n    }\n    return out;\n}\nfunction is(o, type) {\n    type = Str.prototype.toLowerCase.call(type);\n    if (type == \"finite\") {\n        return isFinite(o);\n    }\n    if (type == \"array\" &&\n        (o instanceof Array || Array.isArray && Array.isArray(o))) {\n        return true;\n    }\n    return  type == \"null\" && o === null ||\n            type == typeof o && o !== null ||\n            type == \"object\" && o === Object(o) ||\n            objectToString.call(o).slice(8, -1).toLowerCase() == type;\n}\n/*\\\n * Snap.format\n [ method ]\n **\n * Replaces construction of type `{<name>}` to the corresponding argument\n **\n - token (string) string to format\n - json (object) object which properties are used as a replacement\n = (string) formatted string\n > Usage\n | // this draws a rectangular shape equivalent to \"M10,20h40v50h-40z\"\n | paper.path(Snap.format(\"M{x},{y}h{dim.width}v{dim.height}h{dim['negative width']}z\", {\n |     x: 10,\n |     y: 20,\n |     dim: {\n |         width: 40,\n |         height: 50,\n |         \"negative width\": -40\n |     }\n | }));\n\\*/\nSnap.format = (function () {\n    var tokenRegex = /\\{([^\\}]+)\\}/g,\n        objNotationRegex = /(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g, // matches .xxxxx or [\"xxxxx\"] to run over object properties\n        replacer = function (all, key, obj) {\n            var res = obj;\n            key.replace(objNotationRegex, function (all, name, quote, quotedName, isFunc) {\n                name = name || quotedName;\n                if (res) {\n                    if (name in res) {\n                        res = res[name];\n                    }\n                    typeof res == \"function\" && isFunc && (res = res());\n                }\n            });\n            res = (res == null || res == obj ? all : res) + \"\";\n            return res;\n        };\n    return function (str, obj) {\n        return Str(str).replace(tokenRegex, function (all, key) {\n            return replacer(all, key, obj);\n        });\n    };\n})();\nfunction clone(obj) {\n    if (typeof obj == \"function\" || Object(obj) !== obj) {\n        return obj;\n    }\n    var res = new obj.constructor;\n    for (var key in obj) if (obj[has](key)) {\n        res[key] = clone(obj[key]);\n    }\n    return res;\n}\nSnap._.clone = clone;\nfunction repush(array, item) {\n    for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\n        return array.push(array.splice(i, 1)[0]);\n    }\n}\nfunction cacher(f, scope, postprocessor) {\n    function newf() {\n        var arg = Array.prototype.slice.call(arguments, 0),\n            args = arg.join(\"\\u2400\"),\n            cache = newf.cache = newf.cache || {},\n            count = newf.count = newf.count || [];\n        if (cache[has](args)) {\n            repush(count, args);\n            return postprocessor ? postprocessor(cache[args]) : cache[args];\n        }\n        count.length >= 1e3 && delete cache[count.shift()];\n        count.push(args);\n        cache[args] = f.apply(scope, arg);\n        return postprocessor ? postprocessor(cache[args]) : cache[args];\n    }\n    return newf;\n}\nSnap._.cacher = cacher;\nfunction angle(x1, y1, x2, y2, x3, y3) {\n    if (x3 == null) {\n        var x = x1 - x2,\n            y = y1 - y2;\n        if (!x && !y) {\n            return 0;\n        }\n        return (180 + math.atan2(-y, -x) * 180 / PI + 360) % 360;\n    } else {\n        return angle(x1, y1, x3, y3) - angle(x2, y2, x3, y3);\n    }\n}\nfunction rad(deg) {\n    return deg % 360 * PI / 180;\n}\nfunction deg(rad) {\n    return rad * 180 / PI % 360;\n}\nfunction x_y() {\n    return this.x + S + this.y;\n}\nfunction x_y_w_h() {\n    return this.x + S + this.y + S + this.width + \" \\xd7 \" + this.height;\n}\n\n/*\\\n * Snap.rad\n [ method ]\n **\n * Transform angle to radians\n - deg (number) angle in degrees\n = (number) angle in radians\n\\*/\nSnap.rad = rad;\n/*\\\n * Snap.deg\n [ method ]\n **\n * Transform angle to degrees\n - rad (number) angle in radians\n = (number) angle in degrees\n\\*/\nSnap.deg = deg;\n/*\\\n * Snap.sin\n [ method ]\n **\n * Equivalent to `Math.sin()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) sin\n\\*/\nSnap.sin = function (angle) {\n    return math.sin(Snap.rad(angle));\n};\n/*\\\n * Snap.tan\n [ method ]\n **\n * Equivalent to `Math.tan()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) tan\n\\*/\nSnap.tan = function (angle) {\n    return math.tan(Snap.rad(angle));\n};\n/*\\\n * Snap.cos\n [ method ]\n **\n * Equivalent to `Math.cos()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) cos\n\\*/\nSnap.cos = function (angle) {\n    return math.cos(Snap.rad(angle));\n};\n/*\\\n * Snap.asin\n [ method ]\n **\n * Equivalent to `Math.asin()` only works with degrees, not radians.\n - num (number) value\n = (number) asin in degrees\n\\*/\nSnap.asin = function (num) {\n    return Snap.deg(math.asin(num));\n};\n/*\\\n * Snap.acos\n [ method ]\n **\n * Equivalent to `Math.acos()` only works with degrees, not radians.\n - num (number) value\n = (number) acos in degrees\n\\*/\nSnap.acos = function (num) {\n    return Snap.deg(math.acos(num));\n};\n/*\\\n * Snap.atan\n [ method ]\n **\n * Equivalent to `Math.atan()` only works with degrees, not radians.\n - num (number) value\n = (number) atan in degrees\n\\*/\nSnap.atan = function (num) {\n    return Snap.deg(math.atan(num));\n};\n/*\\\n * Snap.atan2\n [ method ]\n **\n * Equivalent to `Math.atan2()` only works with degrees, not radians.\n - num (number) value\n = (number) atan2 in degrees\n\\*/\nSnap.atan2 = function (num) {\n    return Snap.deg(math.atan2(num));\n};\n/*\\\n * Snap.angle\n [ method ]\n **\n * Returns an angle between two or three points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n - x3 (number) #optional x coord of third point\n - y3 (number) #optional y coord of third point\n = (number) angle in degrees\n\\*/\nSnap.angle = angle;\n/*\\\n * Snap.len\n [ method ]\n **\n * Returns distance between two points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n = (number) distance\n\\*/\nSnap.len = function (x1, y1, x2, y2) {\n    return Math.sqrt(Snap.len2(x1, y1, x2, y2));\n};\n/*\\\n * Snap.len2\n [ method ]\n **\n * Returns squared distance between two points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n = (number) distance\n\\*/\nSnap.len2 = function (x1, y1, x2, y2) {\n    return (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n};\n/*\\\n * Snap.closestPoint\n [ method ]\n **\n * Returns closest point to a given one on a given path.\n - path (Element) path element\n - x (number) x coord of a point\n - y (number) y coord of a point\n = (object) in format\n {\n    x (number) x coord of the point on the path\n    y (number) y coord of the point on the path\n    length (number) length of the path to the point\n    distance (number) distance from the given point to the path\n }\n\\*/\n// Copied from http://bl.ocks.org/mbostock/8027637\nSnap.closestPoint = function (path, x, y) {\n    function distance2(p) {\n        var dx = p.x - x,\n            dy = p.y - y;\n        return dx * dx + dy * dy;\n    }\n    var pathNode = path.node,\n        pathLength = pathNode.getTotalLength(),\n        precision = pathLength / pathNode.pathSegList.numberOfItems * .125,\n        best,\n        bestLength,\n        bestDistance = Infinity;\n\n    // linear scan for coarse approximation\n    for (var scan, scanLength = 0, scanDistance; scanLength <= pathLength; scanLength += precision) {\n        if ((scanDistance = distance2(scan = pathNode.getPointAtLength(scanLength))) < bestDistance) {\n            best = scan;\n            bestLength = scanLength;\n            bestDistance = scanDistance;\n        }\n    }\n\n    // binary search for precise estimate\n    precision *= .5;\n    while (precision > .5) {\n        var before,\n            after,\n            beforeLength,\n            afterLength,\n            beforeDistance,\n            afterDistance;\n        if ((beforeLength = bestLength - precision) >= 0 && (beforeDistance = distance2(before = pathNode.getPointAtLength(beforeLength))) < bestDistance) {\n            best = before;\n            bestLength = beforeLength;\n            bestDistance = beforeDistance;\n        } else if ((afterLength = bestLength + precision) <= pathLength && (afterDistance = distance2(after = pathNode.getPointAtLength(afterLength))) < bestDistance) {\n            best = after;\n            bestLength = afterLength;\n            bestDistance = afterDistance;\n        } else {\n            precision *= .5;\n        }\n    }\n\n    best = {\n        x: best.x,\n        y: best.y,\n        length: bestLength,\n        distance: Math.sqrt(bestDistance)\n    };\n    return best;\n}\n/*\\\n * Snap.is\n [ method ]\n **\n * Handy replacement for the `typeof` operator\n - o (…) any object or primitive\n - type (string) name of the type, e.g., `string`, `function`, `number`, etc.\n = (boolean) `true` if given value is of given type\n\\*/\nSnap.is = is;\n/*\\\n * Snap.snapTo\n [ method ]\n **\n * Snaps given value to given grid\n - values (array|number) given array of values or step of the grid\n - value (number) value to adjust\n - tolerance (number) #optional maximum distance to the target value that would trigger the snap. Default is `10`.\n = (number) adjusted value\n\\*/\nSnap.snapTo = function (values, value, tolerance) {\n    tolerance = is(tolerance, \"finite\") ? tolerance : 10;\n    if (is(values, \"array\")) {\n        var i = values.length;\n        while (i--) if (abs(values[i] - value) <= tolerance) {\n            return values[i];\n        }\n    } else {\n        values = +values;\n        var rem = value % values;\n        if (rem < tolerance) {\n            return value - rem;\n        }\n        if (rem > values - tolerance) {\n            return value - rem + values;\n        }\n    }\n    return value;\n};\n// Colour\n/*\\\n * Snap.getRGB\n [ method ]\n **\n * Parses color string as RGB object\n - color (string) color string in one of the following formats:\n # <ul>\n #     <li>Color name (<code>red</code>, <code>green</code>, <code>cornflowerblue</code>, etc)</li>\n #     <li>#••• — shortened HTML color: (<code>#000</code>, <code>#fc0</code>, etc.)</li>\n #     <li>#•••••• — full length HTML color: (<code>#000000</code>, <code>#bd2300</code>)</li>\n #     <li>rgb(•••, •••, •••) — red, green and blue channels values: (<code>rgb(200,&nbsp;100,&nbsp;0)</code>)</li>\n #     <li>rgba(•••, •••, •••, •••) — also with opacity</li>\n #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>)</li>\n #     <li>rgba(•••%, •••%, •••%, •••%) — also with opacity</li>\n #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>)</li>\n #     <li>hsba(•••, •••, •••, •••) — also with opacity</li>\n #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\n #     <li>hsba(•••%, •••%, •••%, •••%) — also with opacity</li>\n #     <li>hsl(•••, •••, •••) — hue, saturation and luminosity values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;0.5)</code>)</li>\n #     <li>hsla(•••, •••, •••, •••) — also with opacity</li>\n #     <li>hsl(•••%, •••%, •••%) — same as above, but in %</li>\n #     <li>hsla(•••%, •••%, •••%, •••%) — also with opacity</li>\n # </ul>\n * Note that `%` can be used any time: `rgb(20%, 255, 50%)`.\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••,\n o     error (boolean) true if string can't be parsed\n o }\n\\*/\nSnap.getRGB = cacher(function (colour) {\n    if (!colour || !!((colour = Str(colour)).indexOf(\"-\") + 1)) {\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n    }\n    if (colour == \"none\") {\n        return {r: -1, g: -1, b: -1, hex: \"none\", toString: rgbtoString};\n    }\n    !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == \"#\") && (colour = toHex(colour));\n    if (!colour) {\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n    }\n    var res,\n        red,\n        green,\n        blue,\n        opacity,\n        t,\n        values,\n        rgb = colour.match(colourRegExp);\n    if (rgb) {\n        if (rgb[2]) {\n            blue = toInt(rgb[2].substring(5), 16);\n            green = toInt(rgb[2].substring(3, 5), 16);\n            red = toInt(rgb[2].substring(1, 3), 16);\n        }\n        if (rgb[3]) {\n            blue = toInt((t = rgb[3].charAt(3)) + t, 16);\n            green = toInt((t = rgb[3].charAt(2)) + t, 16);\n            red = toInt((t = rgb[3].charAt(1)) + t, 16);\n        }\n        if (rgb[4]) {\n            values = rgb[4].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red *= 2.55);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green *= 2.55);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue *= 2.55);\n            rgb[1].toLowerCase().slice(0, 4) == \"rgba\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n        }\n        if (rgb[5]) {\n            values = rgb[5].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red /= 100);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green /= 100);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue /= 100);\n            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n            rgb[1].toLowerCase().slice(0, 4) == \"hsba\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            return Snap.hsb2rgb(red, green, blue, opacity);\n        }\n        if (rgb[6]) {\n            values = rgb[6].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red /= 100);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green /= 100);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue /= 100);\n            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n            rgb[1].toLowerCase().slice(0, 4) == \"hsla\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            return Snap.hsl2rgb(red, green, blue, opacity);\n        }\n        red = mmin(math.round(red), 255);\n        green = mmin(math.round(green), 255);\n        blue = mmin(math.round(blue), 255);\n        opacity = mmin(mmax(opacity, 0), 1);\n        rgb = {r: red, g: green, b: blue, toString: rgbtoString};\n        rgb.hex = \"#\" + (16777216 | blue | green << 8 | red << 16).toString(16).slice(1);\n        rgb.opacity = is(opacity, \"finite\") ? opacity : 1;\n        return rgb;\n    }\n    return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n}, Snap);\n/*\\\n * Snap.hsb\n [ method ]\n **\n * Converts HSB values to a hex representation of the color\n - h (number) hue\n - s (number) saturation\n - b (number) value or brightness\n = (string) hex representation of the color\n\\*/\nSnap.hsb = cacher(function (h, s, b) {\n    return Snap.hsb2rgb(h, s, b).hex;\n});\n/*\\\n * Snap.hsl\n [ method ]\n **\n * Converts HSL values to a hex representation of the color\n - h (number) hue\n - s (number) saturation\n - l (number) luminosity\n = (string) hex representation of the color\n\\*/\nSnap.hsl = cacher(function (h, s, l) {\n    return Snap.hsl2rgb(h, s, l).hex;\n});\n/*\\\n * Snap.rgb\n [ method ]\n **\n * Converts RGB values to a hex representation of the color\n - r (number) red\n - g (number) green\n - b (number) blue\n = (string) hex representation of the color\n\\*/\nSnap.rgb = cacher(function (r, g, b, o) {\n    if (is(o, \"finite\")) {\n        var round = math.round;\n        return \"rgba(\" + [round(r), round(g), round(b), +o.toFixed(2)] + \")\";\n    }\n    return \"#\" + (16777216 | b | g << 8 | r << 16).toString(16).slice(1);\n});\nvar toHex = function (color) {\n    var i = glob.doc.getElementsByTagName(\"head\")[0] || glob.doc.getElementsByTagName(\"svg\")[0],\n        red = \"rgb(255, 0, 0)\";\n    toHex = cacher(function (color) {\n        if (color.toLowerCase() == \"red\") {\n            return red;\n        }\n        i.style.color = red;\n        i.style.color = color;\n        var out = glob.doc.defaultView.getComputedStyle(i, E).getPropertyValue(\"color\");\n        return out == red ? null : out;\n    });\n    return toHex(color);\n},\nhsbtoString = function () {\n    return \"hsb(\" + [this.h, this.s, this.b] + \")\";\n},\nhsltoString = function () {\n    return \"hsl(\" + [this.h, this.s, this.l] + \")\";\n},\nrgbtoString = function () {\n    return this.opacity == 1 || this.opacity == null ?\n            this.hex :\n            \"rgba(\" + [this.r, this.g, this.b, this.opacity] + \")\";\n},\nprepareRGB = function (r, g, b) {\n    if (g == null && is(r, \"object\") && \"r\" in r && \"g\" in r && \"b\" in r) {\n        b = r.b;\n        g = r.g;\n        r = r.r;\n    }\n    if (g == null && is(r, string)) {\n        var clr = Snap.getRGB(r);\n        r = clr.r;\n        g = clr.g;\n        b = clr.b;\n    }\n    if (r > 1 || g > 1 || b > 1) {\n        r /= 255;\n        g /= 255;\n        b /= 255;\n    }\n\n    return [r, g, b];\n},\npackageRGB = function (r, g, b, o) {\n    r = math.round(r * 255);\n    g = math.round(g * 255);\n    b = math.round(b * 255);\n    var rgb = {\n        r: r,\n        g: g,\n        b: b,\n        opacity: is(o, \"finite\") ? o : 1,\n        hex: Snap.rgb(r, g, b),\n        toString: rgbtoString\n    };\n    is(o, \"finite\") && (rgb.opacity = o);\n    return rgb;\n};\n/*\\\n * Snap.color\n [ method ]\n **\n * Parses the color string and returns an object featuring the color's component values\n - clr (string) color string in one of the supported formats (see @Snap.getRGB)\n = (object) Combined RGB/HSB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••,\n o     error (boolean) `true` if string can't be parsed,\n o     h (number) hue,\n o     s (number) saturation,\n o     v (number) value (brightness),\n o     l (number) lightness\n o }\n\\*/\nSnap.color = function (clr) {\n    var rgb;\n    if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"b\" in clr) {\n        rgb = Snap.hsb2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n    } else if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"l\" in clr) {\n        rgb = Snap.hsl2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n    } else {\n        if (is(clr, \"string\")) {\n            clr = Snap.getRGB(clr);\n        }\n        if (is(clr, \"object\") && \"r\" in clr && \"g\" in clr && \"b\" in clr && !(\"error\" in clr)) {\n            rgb = Snap.rgb2hsl(clr);\n            clr.h = rgb.h;\n            clr.s = rgb.s;\n            clr.l = rgb.l;\n            rgb = Snap.rgb2hsb(clr);\n            clr.v = rgb.b;\n        } else {\n            clr = {hex: \"none\"};\n            clr.r = clr.g = clr.b = clr.h = clr.s = clr.v = clr.l = -1;\n            clr.error = 1;\n        }\n    }\n    clr.toString = rgbtoString;\n    return clr;\n};\n/*\\\n * Snap.hsb2rgb\n [ method ]\n **\n * Converts HSB values to an RGB object\n - h (number) hue\n - s (number) saturation\n - v (number) value or brightness\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••\n o }\n\\*/\nSnap.hsb2rgb = function (h, s, v, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"b\" in h) {\n        v = h.b;\n        s = h.s;\n        o = h.o;\n        h = h.h;\n    }\n    h *= 360;\n    var R, G, B, X, C;\n    h = h % 360 / 60;\n    C = v * s;\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = v - C;\n\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n};\n/*\\\n * Snap.hsl2rgb\n [ method ]\n **\n * Converts HSL values to an RGB object\n - h (number) hue\n - s (number) saturation\n - l (number) luminosity\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••\n o }\n\\*/\nSnap.hsl2rgb = function (h, s, l, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"l\" in h) {\n        l = h.l;\n        s = h.s;\n        h = h.h;\n    }\n    if (h > 1 || s > 1 || l > 1) {\n        h /= 360;\n        s /= 100;\n        l /= 100;\n    }\n    h *= 360;\n    var R, G, B, X, C;\n    h = h % 360 / 60;\n    C = 2 * s * (l < .5 ? l : 1 - l);\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = l - C / 2;\n\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n};\n/*\\\n * Snap.rgb2hsb\n [ method ]\n **\n * Converts RGB values to an HSB object\n - r (number) red\n - g (number) green\n - b (number) blue\n = (object) HSB object in the following format:\n o {\n o     h (number) hue,\n o     s (number) saturation,\n o     b (number) brightness\n o }\n\\*/\nSnap.rgb2hsb = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n\n    var H, S, V, C;\n    V = mmax(r, g, b);\n    C = V - mmin(r, g, b);\n    H = C == 0 ? null :\n        V == r ? (g - b) / C :\n        V == g ? (b - r) / C + 2 :\n                 (r - g) / C + 4;\n    H = (H + 360) % 6 * 60 / 360;\n    S = C == 0 ? 0 : C / V;\n    return {h: H, s: S, b: V, toString: hsbtoString};\n};\n/*\\\n * Snap.rgb2hsl\n [ method ]\n **\n * Converts RGB values to an HSL object\n - r (number) red\n - g (number) green\n - b (number) blue\n = (object) HSL object in the following format:\n o {\n o     h (number) hue,\n o     s (number) saturation,\n o     l (number) luminosity\n o }\n\\*/\nSnap.rgb2hsl = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n\n    var H, S, L, M, m, C;\n    M = mmax(r, g, b);\n    m = mmin(r, g, b);\n    C = M - m;\n    H = C == 0 ? null :\n        M == r ? (g - b) / C :\n        M == g ? (b - r) / C + 2 :\n                 (r - g) / C + 4;\n    H = (H + 360) % 6 * 60 / 360;\n    L = (M + m) / 2;\n    S = C == 0 ? 0 :\n         L < .5 ? C / (2 * L) :\n                  C / (2 - 2 * L);\n    return {h: H, s: S, l: L, toString: hsltoString};\n};\n\n// Transformations\n/*\\\n * Snap.parsePathString\n [ method ]\n **\n * Utility method\n **\n * Parses given path string into an array of arrays of path segments\n - pathString (string|array) path string or array of segments (in the last case it is returned straight away)\n = (array) array of segments\n\\*/\nSnap.parsePathString = function (pathString) {\n    if (!pathString) {\n        return null;\n    }\n    var pth = Snap.path(pathString);\n    if (pth.arr) {\n        return Snap.path.clone(pth.arr);\n    }\n\n    var paramCounts = {a: 7, c: 6, o: 2, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, u: 3, z: 0},\n        data = [];\n    if (is(pathString, \"array\") && is(pathString[0], \"array\")) { // rough assumption\n        data = Snap.path.clone(pathString);\n    }\n    if (!data.length) {\n        Str(pathString).replace(pathCommand, function (a, b, c) {\n            var params = [],\n                name = b.toLowerCase();\n            c.replace(pathValues, function (a, b) {\n                b && params.push(+b);\n            });\n            if (name == \"m\" && params.length > 2) {\n                data.push([b].concat(params.splice(0, 2)));\n                name = \"l\";\n                b = b == \"m\" ? \"l\" : \"L\";\n            }\n            if (name == \"o\" && params.length == 1) {\n                data.push([b, params[0]]);\n            }\n            if (name == \"r\") {\n                data.push([b].concat(params));\n            } else while (params.length >= paramCounts[name]) {\n                data.push([b].concat(params.splice(0, paramCounts[name])));\n                if (!paramCounts[name]) {\n                    break;\n                }\n            }\n        });\n    }\n    data.toString = Snap.path.toString;\n    pth.arr = Snap.path.clone(data);\n    return data;\n};\n/*\\\n * Snap.parseTransformString\n [ method ]\n **\n * Utility method\n **\n * Parses given transform string into an array of transformations\n - TString (string|array) transform string or array of transformations (in the last case it is returned straight away)\n = (array) array of transformations\n\\*/\nvar parseTransformString = Snap.parseTransformString = function (TString) {\n    if (!TString) {\n        return null;\n    }\n    var paramCounts = {r: 3, s: 4, t: 2, m: 6},\n        data = [];\n    if (is(TString, \"array\") && is(TString[0], \"array\")) { // rough assumption\n        data = Snap.path.clone(TString);\n    }\n    if (!data.length) {\n        Str(TString).replace(tCommand, function (a, b, c) {\n            var params = [],\n                name = b.toLowerCase();\n            c.replace(pathValues, function (a, b) {\n                b && params.push(+b);\n            });\n            data.push([b].concat(params));\n        });\n    }\n    data.toString = Snap.path.toString;\n    return data;\n};\nfunction svgTransform2string(tstr) {\n    var res = [];\n    tstr = tstr.replace(/(?:^|\\s)(\\w+)\\(([^)]+)\\)/g, function (all, name, params) {\n        params = params.split(/\\s*,\\s*|\\s+/);\n        if (name == \"rotate\" && params.length == 1) {\n            params.push(0, 0);\n        }\n        if (name == \"scale\") {\n            if (params.length > 2) {\n                params = params.slice(0, 2);\n            } else if (params.length == 2) {\n                params.push(0, 0);\n            }\n            if (params.length == 1) {\n                params.push(params[0], 0, 0);\n            }\n        }\n        if (name == \"skewX\") {\n            res.push([\"m\", 1, 0, math.tan(rad(params[0])), 1, 0, 0]);\n        } else if (name == \"skewY\") {\n            res.push([\"m\", 1, math.tan(rad(params[0])), 0, 1, 0, 0]);\n        } else {\n            res.push([name.charAt(0)].concat(params));\n        }\n        return all;\n    });\n    return res;\n}\nSnap._.svgTransform2string = svgTransform2string;\nSnap._.rgTransform = /^[a-z][\\s]*-?\\.?\\d/i;\nfunction transform2matrix(tstr, bbox) {\n    var tdata = parseTransformString(tstr),\n        m = new Snap.Matrix;\n    if (tdata) {\n        for (var i = 0, ii = tdata.length; i < ii; i++) {\n            var t = tdata[i],\n                tlen = t.length,\n                command = Str(t[0]).toLowerCase(),\n                absolute = t[0] != command,\n                inver = absolute ? m.invert() : 0,\n                x1,\n                y1,\n                x2,\n                y2,\n                bb;\n            if (command == \"t\" && tlen == 2){\n                m.translate(t[1], 0);\n            } else if (command == \"t\" && tlen == 3) {\n                if (absolute) {\n                    x1 = inver.x(0, 0);\n                    y1 = inver.y(0, 0);\n                    x2 = inver.x(t[1], t[2]);\n                    y2 = inver.y(t[1], t[2]);\n                    m.translate(x2 - x1, y2 - y1);\n                } else {\n                    m.translate(t[1], t[2]);\n                }\n            } else if (command == \"r\") {\n                if (tlen == 2) {\n                    bb = bb || bbox;\n                    m.rotate(t[1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                } else if (tlen == 4) {\n                    if (absolute) {\n                        x2 = inver.x(t[2], t[3]);\n                        y2 = inver.y(t[2], t[3]);\n                        m.rotate(t[1], x2, y2);\n                    } else {\n                        m.rotate(t[1], t[2], t[3]);\n                    }\n                }\n            } else if (command == \"s\") {\n                if (tlen == 2 || tlen == 3) {\n                    bb = bb || bbox;\n                    m.scale(t[1], t[tlen - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                } else if (tlen == 4) {\n                    if (absolute) {\n                        x2 = inver.x(t[2], t[3]);\n                        y2 = inver.y(t[2], t[3]);\n                        m.scale(t[1], t[1], x2, y2);\n                    } else {\n                        m.scale(t[1], t[1], t[2], t[3]);\n                    }\n                } else if (tlen == 5) {\n                    if (absolute) {\n                        x2 = inver.x(t[3], t[4]);\n                        y2 = inver.y(t[3], t[4]);\n                        m.scale(t[1], t[2], x2, y2);\n                    } else {\n                        m.scale(t[1], t[2], t[3], t[4]);\n                    }\n                }\n            } else if (command == \"m\" && tlen == 7) {\n                m.add(t[1], t[2], t[3], t[4], t[5], t[6]);\n            }\n        }\n    }\n    return m;\n}\nSnap._.transform2matrix = transform2matrix;\nSnap._unit2px = unit2px;\nvar contains = glob.doc.contains || glob.doc.compareDocumentPosition ?\n    function (a, b) {\n        var adown = a.nodeType == 9 ? a.documentElement : a,\n            bup = b && b.parentNode;\n            return a == bup || !!(bup && bup.nodeType == 1 && (\n                adown.contains ?\n                    adown.contains(bup) :\n                    a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16\n            ));\n    } :\n    function (a, b) {\n        if (b) {\n            while (b) {\n                b = b.parentNode;\n                if (b == a) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\nfunction getSomeDefs(el) {\n    var p = el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) ||\n            el.node.parentNode && wrap(el.node.parentNode) ||\n            Snap.select(\"svg\") ||\n            Snap(0, 0),\n        pdefs = p.select(\"defs\"),\n        defs  = pdefs == null ? false : pdefs.node;\n    if (!defs) {\n        defs = make(\"defs\", p.node).node;\n    }\n    return defs;\n}\nfunction getSomeSVG(el) {\n    return el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) || Snap.select(\"svg\");\n}\nSnap._.getSomeDefs = getSomeDefs;\nSnap._.getSomeSVG = getSomeSVG;\nfunction unit2px(el, name, value) {\n    var svg = getSomeSVG(el).node,\n        out = {},\n        mgr = svg.querySelector(\".svg---mgr\");\n    if (!mgr) {\n        mgr = $(\"rect\");\n        $(mgr, {x: -9e9, y: -9e9, width: 10, height: 10, \"class\": \"svg---mgr\", fill: \"none\"});\n        svg.appendChild(mgr);\n    }\n    function getW(val) {\n        if (val == null) {\n            return E;\n        }\n        if (val == +val) {\n            return val;\n        }\n        $(mgr, {width: val});\n        try {\n            return mgr.getBBox().width;\n        } catch (e) {\n            return 0;\n        }\n    }\n    function getH(val) {\n        if (val == null) {\n            return E;\n        }\n        if (val == +val) {\n            return val;\n        }\n        $(mgr, {height: val});\n        try {\n            return mgr.getBBox().height;\n        } catch (e) {\n            return 0;\n        }\n    }\n    function set(nam, f) {\n        if (name == null) {\n            out[nam] = f(el.attr(nam) || 0);\n        } else if (nam == name) {\n            out = f(value == null ? el.attr(nam) || 0 : value);\n        }\n    }\n    switch (el.type) {\n        case \"rect\":\n            set(\"rx\", getW);\n            set(\"ry\", getH);\n        case \"image\":\n            set(\"width\", getW);\n            set(\"height\", getH);\n        case \"text\":\n            set(\"x\", getW);\n            set(\"y\", getH);\n        break;\n        case \"circle\":\n            set(\"cx\", getW);\n            set(\"cy\", getH);\n            set(\"r\", getW);\n        break;\n        case \"ellipse\":\n            set(\"cx\", getW);\n            set(\"cy\", getH);\n            set(\"rx\", getW);\n            set(\"ry\", getH);\n        break;\n        case \"line\":\n            set(\"x1\", getW);\n            set(\"x2\", getW);\n            set(\"y1\", getH);\n            set(\"y2\", getH);\n        break;\n        case \"marker\":\n            set(\"refX\", getW);\n            set(\"markerWidth\", getW);\n            set(\"refY\", getH);\n            set(\"markerHeight\", getH);\n        break;\n        case \"radialGradient\":\n            set(\"fx\", getW);\n            set(\"fy\", getH);\n        break;\n        case \"tspan\":\n            set(\"dx\", getW);\n            set(\"dy\", getH);\n        break;\n        default:\n            set(name, getW);\n    }\n    svg.removeChild(mgr);\n    return out;\n}\n/*\\\n * Snap.select\n [ method ]\n **\n * Wraps a DOM element specified by CSS selector as @Element\n - query (string) CSS selector of the element\n = (Element) the current element\n\\*/\nSnap.select = function (query) {\n    query = Str(query).replace(/([^\\\\]):/g, \"$1\\\\:\");\n    return wrap(glob.doc.querySelector(query));\n};\n/*\\\n * Snap.selectAll\n [ method ]\n **\n * Wraps DOM elements specified by CSS selector as set or array of @Element\n - query (string) CSS selector of the element\n = (Element) the current element\n\\*/\nSnap.selectAll = function (query) {\n    var nodelist = glob.doc.querySelectorAll(query),\n        set = (Snap.set || Array)();\n    for (var i = 0; i < nodelist.length; i++) {\n        set.push(wrap(nodelist[i]));\n    }\n    return set;\n};\n\nfunction add2group(list) {\n    if (!is(list, \"array\")) {\n        list = Array.prototype.slice.call(arguments, 0);\n    }\n    var i = 0,\n        j = 0,\n        node = this.node;\n    while (this[i]) delete this[i++];\n    for (i = 0; i < list.length; i++) {\n        if (list[i].type == \"set\") {\n            list[i].forEach(function (el) {\n                node.appendChild(el.node);\n            });\n        } else {\n            node.appendChild(list[i].node);\n        }\n    }\n    var children = node.childNodes;\n    for (i = 0; i < children.length; i++) {\n        this[j++] = wrap(children[i]);\n    }\n    return this;\n}\n// Hub garbage collector every 10s\nsetInterval(function () {\n    for (var key in hub) if (hub[has](key)) {\n        var el = hub[key],\n            node = el.node;\n        if (el.type != \"svg\" && !node.ownerSVGElement || el.type == \"svg\" && (!node.parentNode || \"ownerSVGElement\" in node.parentNode && !node.ownerSVGElement)) {\n            delete hub[key];\n        }\n    }\n}, 1e4);\nfunction Element(el) {\n    if (el.snap in hub) {\n        return hub[el.snap];\n    }\n    var svg;\n    try {\n        svg = el.ownerSVGElement;\n    } catch(e) {}\n    /*\\\n     * Element.node\n     [ property (object) ]\n     **\n     * Gives you a reference to the DOM object, so you can assign event handlers or just mess around.\n     > Usage\n     | // draw a circle at coordinate 10,10 with radius of 10\n     | var c = paper.circle(10, 10, 10);\n     | c.node.onclick = function () {\n     |     c.attr(\"fill\", \"red\");\n     | };\n    \\*/\n    this.node = el;\n    if (svg) {\n        this.paper = new Paper(svg);\n    }\n    /*\\\n     * Element.type\n     [ property (string) ]\n     **\n     * SVG tag name of the given element.\n    \\*/\n    this.type = el.tagName || el.nodeName;\n    var id = this.id = ID(this);\n    this.anims = {};\n    this._ = {\n        transform: []\n    };\n    el.snap = id;\n    hub[id] = this;\n    if (this.type == \"g\") {\n        this.add = add2group;\n    }\n    if (this.type in {g: 1, mask: 1, pattern: 1, symbol: 1}) {\n        for (var method in Paper.prototype) if (Paper.prototype[has](method)) {\n            this[method] = Paper.prototype[method];\n        }\n    }\n}\n   /*\\\n     * Element.attr\n     [ method ]\n     **\n     * Gets or sets given attributes of the element.\n     **\n     - params (object) contains key-value pairs of attributes you want to set\n     * or\n     - param (string) name of the attribute\n     = (Element) the current element\n     * or\n     = (string) value of attribute\n     > Usage\n     | el.attr({\n     |     fill: \"#fc0\",\n     |     stroke: \"#000\",\n     |     strokeWidth: 2, // CamelCase...\n     |     \"fill-opacity\": 0.5, // or dash-separated names\n     |     width: \"*=2\" // prefixed values\n     | });\n     | console.log(el.attr(\"fill\")); // #fc0\n     * Prefixed values in format `\"+=10\"` supported. All four operations\n     * (`+`, `-`, `*` and `/`) could be used. Optionally you can use units for `+`\n     * and `-`: `\"+=2em\"`.\n    \\*/\n    Element.prototype.attr = function (params, value) {\n        var el = this,\n            node = el.node;\n        if (!params) {\n            if (node.nodeType != 1) {\n                return {\n                    text: node.nodeValue\n                };\n            }\n            var attr = node.attributes,\n                out = {};\n            for (var i = 0, ii = attr.length; i < ii; i++) {\n                out[attr[i].nodeName] = attr[i].nodeValue;\n            }\n            return out;\n        }\n        if (is(params, \"string\")) {\n            if (arguments.length > 1) {\n                var json = {};\n                json[params] = value;\n                params = json;\n            } else {\n                return eve(\"snap.util.getattr.\" + params, el).firstDefined();\n            }\n        }\n        for (var att in params) {\n            if (params[has](att)) {\n                eve(\"snap.util.attr.\" + att, el, params[att]);\n            }\n        }\n        return el;\n    };\n/*\\\n * Snap.parse\n [ method ]\n **\n * Parses SVG fragment and converts it into a @Fragment\n **\n - svg (string) SVG string\n = (Fragment) the @Fragment\n\\*/\nSnap.parse = function (svg) {\n    var f = glob.doc.createDocumentFragment(),\n        full = true,\n        div = glob.doc.createElement(\"div\");\n    svg = Str(svg);\n    if (!svg.match(/^\\s*<\\s*svg(?:\\s|>)/)) {\n        svg = \"<svg>\" + svg + \"</svg>\";\n        full = false;\n    }\n    div.innerHTML = svg;\n    svg = div.getElementsByTagName(\"svg\")[0];\n    if (svg) {\n        if (full) {\n            f = svg;\n        } else {\n            while (svg.firstChild) {\n                f.appendChild(svg.firstChild);\n            }\n        }\n    }\n    return new Fragment(f);\n};\nfunction Fragment(frag) {\n    this.node = frag;\n}\n/*\\\n * Snap.fragment\n [ method ]\n **\n * Creates a DOM fragment from a given list of elements or strings\n **\n - varargs (…) SVG string\n = (Fragment) the @Fragment\n\\*/\nSnap.fragment = function () {\n    var args = Array.prototype.slice.call(arguments, 0),\n        f = glob.doc.createDocumentFragment();\n    for (var i = 0, ii = args.length; i < ii; i++) {\n        var item = args[i];\n        if (item.node && item.node.nodeType) {\n            f.appendChild(item.node);\n        }\n        if (item.nodeType) {\n            f.appendChild(item);\n        }\n        if (typeof item == \"string\") {\n            f.appendChild(Snap.parse(item).node);\n        }\n    }\n    return new Fragment(f);\n};\n\nfunction make(name, parent) {\n    var res = $(name);\n    parent.appendChild(res);\n    var el = wrap(res);\n    return el;\n}\nfunction Paper(w, h) {\n    var res,\n        desc,\n        defs,\n        proto = Paper.prototype;\n    if (w && w.tagName && w.tagName.toLowerCase() == \"svg\") {\n        if (w.snap in hub) {\n            return hub[w.snap];\n        }\n        var doc = w.ownerDocument;\n        res = new Element(w);\n        desc = w.getElementsByTagName(\"desc\")[0];\n        defs = w.getElementsByTagName(\"defs\")[0];\n        if (!desc) {\n            desc = $(\"desc\");\n            desc.appendChild(doc.createTextNode(\"Created with Snap\"));\n            res.node.appendChild(desc);\n        }\n        if (!defs) {\n            defs = $(\"defs\");\n            res.node.appendChild(defs);\n        }\n        res.defs = defs;\n        for (var key in proto) if (proto[has](key)) {\n            res[key] = proto[key];\n        }\n        res.paper = res.root = res;\n    } else {\n        res = make(\"svg\", glob.doc.body);\n        $(res.node, {\n            height: h,\n            version: 1.1,\n            width: w,\n            xmlns: xmlns\n        });\n    }\n    return res;\n}\nfunction wrap(dom) {\n    if (!dom) {\n        return dom;\n    }\n    if (dom instanceof Element || dom instanceof Fragment) {\n        return dom;\n    }\n    if (dom.tagName && dom.tagName.toLowerCase() == \"svg\") {\n        return new Paper(dom);\n    }\n    if (dom.tagName && dom.tagName.toLowerCase() == \"object\" && dom.type == \"image/svg+xml\") {\n        return new Paper(dom.contentDocument.getElementsByTagName(\"svg\")[0]);\n    }\n    return new Element(dom);\n}\n\nSnap._.make = make;\nSnap._.wrap = wrap;\n/*\\\n * Paper.el\n [ method ]\n **\n * Creates an element on paper with a given name and no attributes\n **\n - name (string) tag name\n - attr (object) attributes\n = (Element) the current element\n > Usage\n | var c = paper.circle(10, 10, 10); // is the same as...\n | var c = paper.el(\"circle\").attr({\n |     cx: 10,\n |     cy: 10,\n |     r: 10\n | });\n | // and the same as\n | var c = paper.el(\"circle\", {\n |     cx: 10,\n |     cy: 10,\n |     r: 10\n | });\n\\*/\nPaper.prototype.el = function (name, attr) {\n    var el = make(name, this.node);\n    attr && el.attr(attr);\n    return el;\n};\n/*\\\n * Element.children\n [ method ]\n **\n * Returns array of all the children of the element.\n = (array) array of Elements\n\\*/\nElement.prototype.children = function () {\n    var out = [],\n        ch = this.node.childNodes;\n    for (var i = 0, ii = ch.length; i < ii; i++) {\n        out[i] = Snap(ch[i]);\n    }\n    return out;\n};\nfunction jsonFiller(root, o) {\n    for (var i = 0, ii = root.length; i < ii; i++) {\n        var item = {\n                type: root[i].type,\n                attr: root[i].attr()\n            },\n            children = root[i].children();\n        o.push(item);\n        if (children.length) {\n            jsonFiller(children, item.childNodes = []);\n        }\n    }\n}\n/*\\\n * Element.toJSON\n [ method ]\n **\n * Returns object representation of the given element and all its children.\n = (object) in format\n o {\n o     type (string) this.type,\n o     attr (object) attributes map,\n o     childNodes (array) optional array of children in the same format\n o }\n\\*/\nElement.prototype.toJSON = function () {\n    var out = [];\n    jsonFiller([this], out);\n    return out[0];\n};\n// default\neve.on(\"snap.util.getattr\", function () {\n    var att = eve.nt();\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    var css = att.replace(/[A-Z]/g, function (letter) {\n        return \"-\" + letter.toLowerCase();\n    });\n    if (cssAttr[has](css)) {\n        return this.node.ownerDocument.defaultView.getComputedStyle(this.node, null).getPropertyValue(css);\n    } else {\n        return $(this.node, att);\n    }\n});\nvar cssAttr = {\n    \"alignment-baseline\": 0,\n    \"baseline-shift\": 0,\n    \"clip\": 0,\n    \"clip-path\": 0,\n    \"clip-rule\": 0,\n    \"color\": 0,\n    \"color-interpolation\": 0,\n    \"color-interpolation-filters\": 0,\n    \"color-profile\": 0,\n    \"color-rendering\": 0,\n    \"cursor\": 0,\n    \"direction\": 0,\n    \"display\": 0,\n    \"dominant-baseline\": 0,\n    \"enable-background\": 0,\n    \"fill\": 0,\n    \"fill-opacity\": 0,\n    \"fill-rule\": 0,\n    \"filter\": 0,\n    \"flood-color\": 0,\n    \"flood-opacity\": 0,\n    \"font\": 0,\n    \"font-family\": 0,\n    \"font-size\": 0,\n    \"font-size-adjust\": 0,\n    \"font-stretch\": 0,\n    \"font-style\": 0,\n    \"font-variant\": 0,\n    \"font-weight\": 0,\n    \"glyph-orientation-horizontal\": 0,\n    \"glyph-orientation-vertical\": 0,\n    \"image-rendering\": 0,\n    \"kerning\": 0,\n    \"letter-spacing\": 0,\n    \"lighting-color\": 0,\n    \"marker\": 0,\n    \"marker-end\": 0,\n    \"marker-mid\": 0,\n    \"marker-start\": 0,\n    \"mask\": 0,\n    \"opacity\": 0,\n    \"overflow\": 0,\n    \"pointer-events\": 0,\n    \"shape-rendering\": 0,\n    \"stop-color\": 0,\n    \"stop-opacity\": 0,\n    \"stroke\": 0,\n    \"stroke-dasharray\": 0,\n    \"stroke-dashoffset\": 0,\n    \"stroke-linecap\": 0,\n    \"stroke-linejoin\": 0,\n    \"stroke-miterlimit\": 0,\n    \"stroke-opacity\": 0,\n    \"stroke-width\": 0,\n    \"text-anchor\": 0,\n    \"text-decoration\": 0,\n    \"text-rendering\": 0,\n    \"unicode-bidi\": 0,\n    \"visibility\": 0,\n    \"word-spacing\": 0,\n    \"writing-mode\": 0\n};\n\neve.on(\"snap.util.attr\", function (value) {\n    var att = eve.nt(),\n        attr = {};\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    attr[att] = value;\n    var style = att.replace(/-(\\w)/gi, function (all, letter) {\n            return letter.toUpperCase();\n        }),\n        css = att.replace(/[A-Z]/g, function (letter) {\n            return \"-\" + letter.toLowerCase();\n        });\n    if (cssAttr[has](css)) {\n        this.node.style[style] = value == null ? E : value;\n    } else {\n        $(this.node, attr);\n    }\n});\n(function (proto) {}(Paper.prototype));\n\n// simple ajax\n/*\\\n * Snap.ajax\n [ method ]\n **\n * Simple implementation of Ajax\n **\n - url (string) URL\n - postData (object|string) data for post request\n - callback (function) callback\n - scope (object) #optional scope of callback\n * or\n - url (string) URL\n - callback (function) callback\n - scope (object) #optional scope of callback\n = (XMLHttpRequest) the XMLHttpRequest object, just in case\n\\*/\nSnap.ajax = function (url, postData, callback, scope){\n    var req = new XMLHttpRequest,\n        id = ID();\n    if (req) {\n        if (is(postData, \"function\")) {\n            scope = callback;\n            callback = postData;\n            postData = null;\n        } else if (is(postData, \"object\")) {\n            var pd = [];\n            for (var key in postData) if (postData.hasOwnProperty(key)) {\n                pd.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(postData[key]));\n            }\n            postData = pd.join(\"&\");\n        }\n        req.open(postData ? \"POST\" : \"GET\", url, true);\n        if (postData) {\n            req.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n            req.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n        }\n        if (callback) {\n            eve.once(\"snap.ajax.\" + id + \".0\", callback);\n            eve.once(\"snap.ajax.\" + id + \".200\", callback);\n            eve.once(\"snap.ajax.\" + id + \".304\", callback);\n        }\n        req.onreadystatechange = function() {\n            if (req.readyState != 4) return;\n            eve(\"snap.ajax.\" + id + \".\" + req.status, scope, req);\n        };\n        if (req.readyState == 4) {\n            return req;\n        }\n        req.send(postData);\n        return req;\n    }\n};\n/*\\\n * Snap.load\n [ method ]\n **\n * Loads external SVG file as a @Fragment (see @Snap.ajax for more advanced AJAX)\n **\n - url (string) URL\n - callback (function) callback\n - scope (object) #optional scope of callback\n\\*/\nSnap.load = function (url, callback, scope) {\n    Snap.ajax(url, function (req) {\n        var f = Snap.parse(req.responseText);\n        scope ? callback.call(scope, f) : callback(f);\n    });\n};\nvar getOffset = function (elem) {\n    var box = elem.getBoundingClientRect(),\n        doc = elem.ownerDocument,\n        body = doc.body,\n        docElem = doc.documentElement,\n        clientTop = docElem.clientTop || body.clientTop || 0, clientLeft = docElem.clientLeft || body.clientLeft || 0,\n        top  = box.top  + (g.win.pageYOffset || docElem.scrollTop || body.scrollTop ) - clientTop,\n        left = box.left + (g.win.pageXOffset || docElem.scrollLeft || body.scrollLeft) - clientLeft;\n    return {\n        y: top,\n        x: left\n    };\n};\n/*\\\n * Snap.getElementByPoint\n [ method ]\n **\n * Returns you topmost element under given point.\n **\n = (object) Snap element object\n - x (number) x coordinate from the top left corner of the window\n - y (number) y coordinate from the top left corner of the window\n > Usage\n | Snap.getElementByPoint(mouseX, mouseY).attr({stroke: \"#f00\"});\n\\*/\nSnap.getElementByPoint = function (x, y) {\n    var paper = this,\n        svg = paper.canvas,\n        target = glob.doc.elementFromPoint(x, y);\n    if (glob.win.opera && target.tagName == \"svg\") {\n        var so = getOffset(target),\n            sr = target.createSVGRect();\n        sr.x = x - so.x;\n        sr.y = y - so.y;\n        sr.width = sr.height = 1;\n        var hits = target.getIntersectionList(sr, null);\n        if (hits.length) {\n            target = hits[hits.length - 1];\n        }\n    }\n    if (!target) {\n        return null;\n    }\n    return wrap(target);\n};\n/*\\\n * Snap.plugin\n [ method ]\n **\n * Let you write plugins. You pass in a function with five arguments, like this:\n | Snap.plugin(function (Snap, Element, Paper, global, Fragment) {\n |     Snap.newmethod = function () {};\n |     Element.prototype.newmethod = function () {};\n |     Paper.prototype.newmethod = function () {};\n | });\n * Inside the function you have access to all main objects (and their\n * prototypes). This allow you to extend anything you want.\n **\n - f (function) your plugin body\n\\*/\nSnap.plugin = function (f) {\n    f(Snap, Element, Paper, glob, Fragment);\n};\nglob.win.Snap = Snap;\nreturn Snap;\n}(window || this));\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        Str = String,\n        unit2px = Snap._unit2px,\n        $ = Snap._.$,\n        make = Snap._.make,\n        getSomeDefs = Snap._.getSomeDefs,\n        has = \"hasOwnProperty\",\n        wrap = Snap._.wrap;\n    /*\\\n     * Element.getBBox\n     [ method ]\n     **\n     * Returns the bounding box descriptor for the given element\n     **\n     = (object) bounding box descriptor:\n     o {\n     o     cx: (number) x of the center,\n     o     cy: (number) x of the center,\n     o     h: (number) height,\n     o     height: (number) height,\n     o     path: (string) path command for the box,\n     o     r0: (number) radius of a circle that fully encloses the box,\n     o     r1: (number) radius of the smallest circle that can be enclosed,\n     o     r2: (number) radius of the largest circle that can be enclosed,\n     o     vb: (string) box as a viewbox command,\n     o     w: (number) width,\n     o     width: (number) width,\n     o     x2: (number) x of the right side,\n     o     x: (number) x of the left side,\n     o     y2: (number) y of the bottom edge,\n     o     y: (number) y of the top edge\n     o }\n    \\*/\n    elproto.getBBox = function (isWithoutTransform) {\n        if (this.type == \"tspan\") {\n            return Snap._.box(this.node.getClientRects().item(0));\n        }\n        if (!Snap.Matrix || !Snap.path) {\n            return this.node.getBBox();\n        }\n        var el = this,\n            m = new Snap.Matrix;\n        if (el.removed) {\n            return Snap._.box();\n        }\n        while (el.type == \"use\") {\n            if (!isWithoutTransform) {\n                m = m.add(el.transform().localMatrix.translate(el.attr(\"x\") || 0, el.attr(\"y\") || 0));\n            }\n            if (el.original) {\n                el = el.original;\n            } else {\n                var href = el.attr(\"xlink:href\");\n                el = el.original = el.node.ownerDocument.getElementById(href.substring(href.indexOf(\"#\") + 1));\n            }\n        }\n        var _ = el._,\n            pathfinder = Snap.path.get[el.type] || Snap.path.get.deflt;\n        try {\n            if (isWithoutTransform) {\n                _.bboxwt = pathfinder ? Snap.path.getBBox(el.realPath = pathfinder(el)) : Snap._.box(el.node.getBBox());\n                return Snap._.box(_.bboxwt);\n            } else {\n                el.realPath = pathfinder(el);\n                el.matrix = el.transform().localMatrix;\n                _.bbox = Snap.path.getBBox(Snap.path.map(el.realPath, m.add(el.matrix)));\n                return Snap._.box(_.bbox);\n            }\n        } catch (e) {\n            // Firefox doesn’t give you bbox of hidden element\n            return Snap._.box();\n        }\n    };\n    var propString = function () {\n        return this.string;\n    };\n    function extractTransform(el, tstr) {\n        if (tstr == null) {\n            var doReturn = true;\n            if (el.type == \"linearGradient\" || el.type == \"radialGradient\") {\n                tstr = el.node.getAttribute(\"gradientTransform\");\n            } else if (el.type == \"pattern\") {\n                tstr = el.node.getAttribute(\"patternTransform\");\n            } else {\n                tstr = el.node.getAttribute(\"transform\");\n            }\n            if (!tstr) {\n                return new Snap.Matrix;\n            }\n            tstr = Snap._.svgTransform2string(tstr);\n        } else {\n            if (!Snap._.rgTransform.test(tstr)) {\n                tstr = Snap._.svgTransform2string(tstr);\n            } else {\n                tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, el._.transform || \"\");\n            }\n            if (is(tstr, \"array\")) {\n                tstr = Snap.path ? Snap.path.toString.call(tstr) : Str(tstr);\n            }\n            el._.transform = tstr;\n        }\n        var m = Snap._.transform2matrix(tstr, el.getBBox(1));\n        if (doReturn) {\n            return m;\n        } else {\n            el.matrix = m;\n        }\n    }\n    /*\\\n     * Element.transform\n     [ method ]\n     **\n     * Gets or sets transformation of the element\n     **\n     - tstr (string) transform string in Snap or SVG format\n     = (Element) the current element\n     * or\n     = (object) transformation descriptor:\n     o {\n     o     string (string) transform string,\n     o     globalMatrix (Matrix) matrix of all transformations applied to element or its parents,\n     o     localMatrix (Matrix) matrix of transformations applied only to the element,\n     o     diffMatrix (Matrix) matrix of difference between global and local transformations,\n     o     global (string) global transformation as string,\n     o     local (string) local transformation as string,\n     o     toString (function) returns `string` property\n     o }\n    \\*/\n    elproto.transform = function (tstr) {\n        var _ = this._;\n        if (tstr == null) {\n            var papa = this,\n                global = new Snap.Matrix(this.node.getCTM()),\n                local = extractTransform(this),\n                ms = [local],\n                m = new Snap.Matrix,\n                i,\n                localString = local.toTransformString(),\n                string = Str(local) == Str(this.matrix) ?\n                            Str(_.transform) : localString;\n            while (papa.type != \"svg\" && (papa = papa.parent())) {\n                ms.push(extractTransform(papa));\n            }\n            i = ms.length;\n            while (i--) {\n                m.add(ms[i]);\n            }\n            return {\n                string: string,\n                globalMatrix: global,\n                totalMatrix: m,\n                localMatrix: local,\n                diffMatrix: global.clone().add(local.invert()),\n                global: global.toTransformString(),\n                total: m.toTransformString(),\n                local: localString,\n                toString: propString\n            };\n        }\n        if (tstr instanceof Snap.Matrix) {\n            this.matrix = tstr;\n            this._.transform = tstr.toTransformString();\n        } else {\n            extractTransform(this, tstr);\n        }\n\n        if (this.node) {\n            if (this.type == \"linearGradient\" || this.type == \"radialGradient\") {\n                $(this.node, {gradientTransform: this.matrix});\n            } else if (this.type == \"pattern\") {\n                $(this.node, {patternTransform: this.matrix});\n            } else {\n                $(this.node, {transform: this.matrix});\n            }\n        }\n\n        return this;\n    };\n    /*\\\n     * Element.parent\n     [ method ]\n     **\n     * Returns the element's parent\n     **\n     = (Element) the parent element\n    \\*/\n    elproto.parent = function () {\n        return wrap(this.node.parentNode);\n    };\n    /*\\\n     * Element.append\n     [ method ]\n     **\n     * Appends the given element to current one\n     **\n     - el (Element|Set) element to append\n     = (Element) the parent element\n    \\*/\n    /*\\\n     * Element.add\n     [ method ]\n     **\n     * See @Element.append\n    \\*/\n    elproto.append = elproto.add = function (el) {\n        if (el) {\n            if (el.type == \"set\") {\n                var it = this;\n                el.forEach(function (el) {\n                    it.add(el);\n                });\n                return this;\n            }\n            el = wrap(el);\n            this.node.appendChild(el.node);\n            el.paper = this.paper;\n        }\n        return this;\n    };\n    /*\\\n     * Element.appendTo\n     [ method ]\n     **\n     * Appends the current element to the given one\n     **\n     - el (Element) parent element to append to\n     = (Element) the child element\n    \\*/\n    elproto.appendTo = function (el) {\n        if (el) {\n            el = wrap(el);\n            el.append(this);\n        }\n        return this;\n    };\n    /*\\\n     * Element.prepend\n     [ method ]\n     **\n     * Prepends the given element to the current one\n     **\n     - el (Element) element to prepend\n     = (Element) the parent element\n    \\*/\n    elproto.prepend = function (el) {\n        if (el) {\n            if (el.type == \"set\") {\n                var it = this,\n                    first;\n                el.forEach(function (el) {\n                    if (first) {\n                        first.after(el);\n                    } else {\n                        it.prepend(el);\n                    }\n                    first = el;\n                });\n                return this;\n            }\n            el = wrap(el);\n            var parent = el.parent();\n            this.node.insertBefore(el.node, this.node.firstChild);\n            this.add && this.add();\n            el.paper = this.paper;\n            this.parent() && this.parent().add();\n            parent && parent.add();\n        }\n        return this;\n    };\n    /*\\\n     * Element.prependTo\n     [ method ]\n     **\n     * Prepends the current element to the given one\n     **\n     - el (Element) parent element to prepend to\n     = (Element) the child element\n    \\*/\n    elproto.prependTo = function (el) {\n        el = wrap(el);\n        el.prepend(this);\n        return this;\n    };\n    /*\\\n     * Element.before\n     [ method ]\n     **\n     * Inserts given element before the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.before = function (el) {\n        if (el.type == \"set\") {\n            var it = this;\n            el.forEach(function (el) {\n                var parent = el.parent();\n                it.node.parentNode.insertBefore(el.node, it.node);\n                parent && parent.add();\n            });\n            this.parent().add();\n            return this;\n        }\n        el = wrap(el);\n        var parent = el.parent();\n        this.node.parentNode.insertBefore(el.node, this.node);\n        this.parent() && this.parent().add();\n        parent && parent.add();\n        el.paper = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.after\n     [ method ]\n     **\n     * Inserts given element after the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.after = function (el) {\n        el = wrap(el);\n        var parent = el.parent();\n        if (this.node.nextSibling) {\n            this.node.parentNode.insertBefore(el.node, this.node.nextSibling);\n        } else {\n            this.node.parentNode.appendChild(el.node);\n        }\n        this.parent() && this.parent().add();\n        parent && parent.add();\n        el.paper = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.insertBefore\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertBefore = function (el) {\n        el = wrap(el);\n        var parent = this.parent();\n        el.node.parentNode.insertBefore(this.node, el.node);\n        this.paper = el.paper;\n        parent && parent.add();\n        el.parent() && el.parent().add();\n        return this;\n    };\n    /*\\\n     * Element.insertAfter\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertAfter = function (el) {\n        el = wrap(el);\n        var parent = this.parent();\n        el.node.parentNode.insertBefore(this.node, el.node.nextSibling);\n        this.paper = el.paper;\n        parent && parent.add();\n        el.parent() && el.parent().add();\n        return this;\n    };\n    /*\\\n     * Element.remove\n     [ method ]\n     **\n     * Removes element from the DOM\n     = (Element) the detached element\n    \\*/\n    elproto.remove = function () {\n        var parent = this.parent();\n        this.node.parentNode && this.node.parentNode.removeChild(this.node);\n        delete this.paper;\n        this.removed = true;\n        parent && parent.add();\n        return this;\n    };\n    /*\\\n     * Element.select\n     [ method ]\n     **\n     * Gathers the nested @Element matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Element) result of query selection\n    \\*/\n    elproto.select = function (query) {\n        return wrap(this.node.querySelector(query));\n    };\n    /*\\\n     * Element.selectAll\n     [ method ]\n     **\n     * Gathers nested @Element objects matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Set|array) result of query selection\n    \\*/\n    elproto.selectAll = function (query) {\n        var nodelist = this.node.querySelectorAll(query),\n            set = (Snap.set || Array)();\n        for (var i = 0; i < nodelist.length; i++) {\n            set.push(wrap(nodelist[i]));\n        }\n        return set;\n    };\n    /*\\\n     * Element.asPX\n     [ method ]\n     **\n     * Returns given attribute of the element as a `px` value (not %, em, etc.)\n     **\n     - attr (string) attribute name\n     - value (string) #optional attribute value\n     = (Element) result of query selection\n    \\*/\n    elproto.asPX = function (attr, value) {\n        if (value == null) {\n            value = this.attr(attr);\n        }\n        return +unit2px(this, attr, value);\n    };\n    // SIERRA Element.use(): I suggest adding a note about how to access the original element the returned <use> instantiates. It's a part of SVG with which ordinary web developers may be least familiar.\n    /*\\\n     * Element.use\n     [ method ]\n     **\n     * Creates a `<use>` element linked to the current element\n     **\n     = (Element) the `<use>` element\n    \\*/\n    elproto.use = function () {\n        var use,\n            id = this.node.id;\n        if (!id) {\n            id = this.id;\n            $(this.node, {\n                id: id\n            });\n        }\n        if (this.type == \"linearGradient\" || this.type == \"radialGradient\" ||\n            this.type == \"pattern\") {\n            use = make(this.type, this.node.parentNode);\n        } else {\n            use = make(\"use\", this.node.parentNode);\n        }\n        $(use.node, {\n            \"xlink:href\": \"#\" + id\n        });\n        use.original = this;\n        return use;\n    };\n    function fixids(el) {\n        var els = el.selectAll(\"*\"),\n            it,\n            url = /^\\s*url\\((\"|'|)(.*)\\1\\)\\s*$/,\n            ids = [],\n            uses = {};\n        function urltest(it, name) {\n            var val = $(it.node, name);\n            val = val && val.match(url);\n            val = val && val[2];\n            if (val && val.charAt() == \"#\") {\n                val = val.substring(1);\n            } else {\n                return;\n            }\n            if (val) {\n                uses[val] = (uses[val] || []).concat(function (id) {\n                    var attr = {};\n                    attr[name] = Snap.url(id);\n                    $(it.node, attr);\n                });\n            }\n        }\n        function linktest(it) {\n            var val = $(it.node, \"xlink:href\");\n            if (val && val.charAt() == \"#\") {\n                val = val.substring(1);\n            } else {\n                return;\n            }\n            if (val) {\n                uses[val] = (uses[val] || []).concat(function (id) {\n                    it.attr(\"xlink:href\", \"#\" + id);\n                });\n            }\n        }\n        for (var i = 0, ii = els.length; i < ii; i++) {\n            it = els[i];\n            urltest(it, \"fill\");\n            urltest(it, \"stroke\");\n            urltest(it, \"filter\");\n            urltest(it, \"mask\");\n            urltest(it, \"clip-path\");\n            linktest(it);\n            var oldid = $(it.node, \"id\");\n            if (oldid) {\n                $(it.node, {id: it.id});\n                ids.push({\n                    old: oldid,\n                    id: it.id\n                });\n            }\n        }\n        for (i = 0, ii = ids.length; i < ii; i++) {\n            var fs = uses[ids[i].old];\n            if (fs) {\n                for (var j = 0, jj = fs.length; j < jj; j++) {\n                    fs[j](ids[i].id);\n                }\n            }\n        }\n    }\n    /*\\\n     * Element.clone\n     [ method ]\n     **\n     * Creates a clone of the element and inserts it after the element\n     **\n     = (Element) the clone\n    \\*/\n    elproto.clone = function () {\n        var clone = wrap(this.node.cloneNode(true));\n        if ($(clone.node, \"id\")) {\n            $(clone.node, {id: clone.id});\n        }\n        fixids(clone);\n        clone.insertAfter(this);\n        return clone;\n    };\n    /*\\\n     * Element.toDefs\n     [ method ]\n     **\n     * Moves element to the shared `<defs>` area\n     **\n     = (Element) the element\n    \\*/\n    elproto.toDefs = function () {\n        var defs = getSomeDefs(this);\n        defs.appendChild(this.node);\n        return this;\n    };\n    /*\\\n     * Element.toPattern\n     [ method ]\n     **\n     * Creates a `<pattern>` element from the current element\n     **\n     * To create a pattern you have to specify the pattern rect:\n     - x (string|number)\n     - y (string|number)\n     - width (string|number)\n     - height (string|number)\n     = (Element) the `<pattern>` element\n     * You can use pattern later on as an argument for `fill` attribute:\n     | var p = paper.path(\"M10-5-10,15M15,0,0,15M0-5-20,15\").attr({\n     |         fill: \"none\",\n     |         stroke: \"#bada55\",\n     |         strokeWidth: 5\n     |     }).pattern(0, 0, 10, 10),\n     |     c = paper.circle(200, 200, 100);\n     | c.attr({\n     |     fill: p\n     | });\n    \\*/\n    elproto.pattern = elproto.toPattern = function (x, y, width, height) {\n        var p = make(\"pattern\", getSomeDefs(this));\n        if (x == null) {\n            x = this.getBBox();\n        }\n        if (is(x, \"object\") && \"x\" in x) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            x = x.x;\n        }\n        $(p.node, {\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            patternUnits: \"userSpaceOnUse\",\n            id: p.id,\n            viewBox: [x, y, width, height].join(\" \")\n        });\n        p.node.appendChild(this.node);\n        return p;\n    };\n// SIERRA Element.marker(): clarify what a reference point is. E.g., helps you offset the object from its edge such as when centering it over a path.\n// SIERRA Element.marker(): I suggest the method should accept default reference point values.  Perhaps centered with (refX = width/2) and (refY = height/2)? Also, couldn't it assume the element's current _width_ and _height_? And please specify what _x_ and _y_ mean: offsets? If so, from where?  Couldn't they also be assigned default values?\n    /*\\\n     * Element.marker\n     [ method ]\n     **\n     * Creates a `<marker>` element from the current element\n     **\n     * To create a marker you have to specify the bounding rect and reference point:\n     - x (number)\n     - y (number)\n     - width (number)\n     - height (number)\n     - refX (number)\n     - refY (number)\n     = (Element) the `<marker>` element\n     * You can specify the marker later as an argument for `marker-start`, `marker-end`, `marker-mid`, and `marker` attributes. The `marker` attribute places the marker at every point along the path, and `marker-mid` places them at every point except the start and end.\n    \\*/\n    // TODO add usage for markers\n    elproto.marker = function (x, y, width, height, refX, refY) {\n        var p = make(\"marker\", getSomeDefs(this));\n        if (x == null) {\n            x = this.getBBox();\n        }\n        if (is(x, \"object\") && \"x\" in x) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            refX = x.refX || x.cx;\n            refY = x.refY || x.cy;\n            x = x.x;\n        }\n        $(p.node, {\n            viewBox: [x, y, width, height].join(\" \"),\n            markerWidth: width,\n            markerHeight: height,\n            orient: \"auto\",\n            refX: refX || 0,\n            refY: refY || 0,\n            id: p.id\n        });\n        p.node.appendChild(this.node);\n        return p;\n    };\n    var eldata = {};\n    /*\\\n     * Element.data\n     [ method ]\n     **\n     * Adds or retrieves given value associated with given key. (Don’t confuse\n     * with `data-` attributes)\n     *\n     * See also @Element.removeData\n     - key (string) key to store data\n     - value (any) #optional value to store\n     = (object) @Element\n     * or, if value is not specified:\n     = (any) value\n     > Usage\n     | for (var i = 0, i < 5, i++) {\n     |     paper.circle(10 + 15 * i, 10, 10)\n     |          .attr({fill: \"#000\"})\n     |          .data(\"i\", i)\n     |          .click(function () {\n     |             alert(this.data(\"i\"));\n     |          });\n     | }\n    \\*/\n    elproto.data = function (key, value) {\n        var data = eldata[this.id] = eldata[this.id] || {};\n        if (arguments.length == 0){\n            eve(\"snap.data.get.\" + this.id, this, data, null);\n            return data;\n        }\n        if (arguments.length == 1) {\n            if (Snap.is(key, \"object\")) {\n                for (var i in key) if (key[has](i)) {\n                    this.data(i, key[i]);\n                }\n                return this;\n            }\n            eve(\"snap.data.get.\" + this.id, this, data[key], key);\n            return data[key];\n        }\n        data[key] = value;\n        eve(\"snap.data.set.\" + this.id, this, value, key);\n        return this;\n    };\n    /*\\\n     * Element.removeData\n     [ method ]\n     **\n     * Removes value associated with an element by given key.\n     * If key is not provided, removes all the data of the element.\n     - key (string) #optional key\n     = (object) @Element\n    \\*/\n    elproto.removeData = function (key) {\n        if (key == null) {\n            eldata[this.id] = {};\n        } else {\n            eldata[this.id] && delete eldata[this.id][key];\n        }\n        return this;\n    };\n    /*\\\n     * Element.outerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element, equivalent to HTML's `outerHTML`.\n     *\n     * See also @Element.innerSVG\n     = (string) SVG code for the element\n    \\*/\n    /*\\\n     * Element.toString\n     [ method ]\n     **\n     * See @Element.outerSVG\n    \\*/\n    elproto.outerSVG = elproto.toString = toString(1);\n    /*\\\n     * Element.innerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element's contents, equivalent to HTML's `innerHTML`\n     = (string) SVG code for the element\n    \\*/\n    elproto.innerSVG = toString();\n    function toString(type) {\n        return function () {\n            var res = type ? \"<\" + this.type : \"\",\n                attr = this.node.attributes,\n                chld = this.node.childNodes;\n            if (type) {\n                for (var i = 0, ii = attr.length; i < ii; i++) {\n                    res += \" \" + attr[i].name + '=\"' +\n                            attr[i].value.replace(/\"/g, '\\\\\"') + '\"';\n                }\n            }\n            if (chld.length) {\n                type && (res += \">\");\n                for (i = 0, ii = chld.length; i < ii; i++) {\n                    if (chld[i].nodeType == 3) {\n                        res += chld[i].nodeValue;\n                    } else if (chld[i].nodeType == 1) {\n                        res += wrap(chld[i]).toString();\n                    }\n                }\n                type && (res += \"</\" + this.type + \">\");\n            } else {\n                type && (res += \"/>\");\n            }\n            return res;\n        };\n    }\n    elproto.toDataURL = function () {\n        if (window && window.btoa) {\n            var bb = this.getBBox(),\n                svg = Snap.format('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"{width}\" height=\"{height}\" viewBox=\"{x} {y} {width} {height}\">{contents}</svg>', {\n                x: +bb.x.toFixed(3),\n                y: +bb.y.toFixed(3),\n                width: +bb.width.toFixed(3),\n                height: +bb.height.toFixed(3),\n                contents: this.outerSVG()\n            });\n            return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(svg)));\n        }\n    };\n    /*\\\n     * Fragment.select\n     [ method ]\n     **\n     * See @Element.select\n    \\*/\n    Fragment.prototype.select = elproto.select;\n    /*\\\n     * Fragment.selectAll\n     [ method ]\n     **\n     * See @Element.selectAll\n    \\*/\n    Fragment.prototype.selectAll = elproto.selectAll;\n});\n\n// Copyright (c) 2016 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        Str = String,\n        has = \"hasOwnProperty\";\n    function slice(from, to, f) {\n        return function (arr) {\n            var res = arr.slice(from, to);\n            if (res.length == 1) {\n                res = res[0];\n            }\n            return f ? f(res) : res;\n        };\n    }\n    var Animation = function (attr, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        this.attr = attr;\n        this.dur = ms;\n        easing && (this.easing = easing);\n        callback && (this.callback = callback);\n    };\n    Snap._.Animation = Animation;\n    /*\\\n     * Snap.animation\n     [ method ]\n     **\n     * Creates an animation object\n     **\n     - attr (object) attributes of final destination\n     - duration (number) duration of the animation, in milliseconds\n     - easing (function) #optional one of easing functions of @mina or custom one\n     - callback (function) #optional callback function that fires when animation ends\n     = (object) animation object\n    \\*/\n    Snap.animation = function (attr, ms, easing, callback) {\n        return new Animation(attr, ms, easing, callback);\n    };\n    /*\\\n     * Element.inAnim\n     [ method ]\n     **\n     * Returns a set of animations that may be able to manipulate the current element\n     **\n     = (object) in format:\n     o {\n     o     anim (object) animation object,\n     o     mina (object) @mina object,\n     o     curStatus (number) 0..1 — status of the animation: 0 — just started, 1 — just finished,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n    \\*/\n    elproto.inAnim = function () {\n        var el = this,\n            res = [];\n        for (var id in el.anims) if (el.anims[has](id)) {\n            (function (a) {\n                res.push({\n                    anim: new Animation(a._attrs, a.dur, a.easing, a._callback),\n                    mina: a,\n                    curStatus: a.status(),\n                    status: function (val) {\n                        return a.status(val);\n                    },\n                    stop: function () {\n                        a.stop();\n                    }\n                });\n            }(el.anims[id]));\n        }\n        return res;\n    };\n    /*\\\n     * Snap.animate\n     [ method ]\n     **\n     * Runs generic animation of one number into another with a caring function\n     **\n     - from (number|array) number or array of numbers\n     - to (number|array) number or array of numbers\n     - setter (function) caring function that accepts one number argument\n     - duration (number) duration, in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function to execute when animation ends\n     = (object) animation object in @mina format\n     o {\n     o     id (string) animation id, consider it read-only,\n     o     duration (function) gets or sets the duration of the animation,\n     o     easing (function) easing,\n     o     speed (function) gets or sets the speed of the animation,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n     | var rect = Snap().rect(0, 0, 10, 10);\n     | Snap.animate(0, 10, function (val) {\n     |     rect.attr({\n     |         x: val\n     |     });\n     | }, 1000);\n     | // in given context is equivalent to\n     | rect.animate({x: 10}, 1000);\n    \\*/\n    Snap.animate = function (from, to, setter, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        var now = mina.time(),\n            anim = mina(from, to, now, now + ms, mina.time, setter, easing);\n        callback && eve.once(\"mina.finish.\" + anim.id, callback);\n        return anim;\n    };\n    /*\\\n     * Element.stop\n     [ method ]\n     **\n     * Stops all the animations for the current element\n     **\n     = (Element) the current element\n    \\*/\n    elproto.stop = function () {\n        var anims = this.inAnim();\n        for (var i = 0, ii = anims.length; i < ii; i++) {\n            anims[i].stop();\n        }\n        return this;\n    };\n    /*\\\n     * Element.animate\n     [ method ]\n     **\n     * Animates the given attributes of the element\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     = (Element) the current element\n    \\*/\n    elproto.animate = function (attrs, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        if (attrs instanceof Animation) {\n            callback = attrs.callback;\n            easing = attrs.easing;\n            ms = attrs.dur;\n            attrs = attrs.attr;\n        }\n        var fkeys = [], tkeys = [], keys = {}, from, to, f, eq,\n            el = this;\n        for (var key in attrs) if (attrs[has](key)) {\n            if (el.equal) {\n                eq = el.equal(key, Str(attrs[key]));\n                from = eq.from;\n                to = eq.to;\n                f = eq.f;\n            } else {\n                from = +el.attr(key);\n                to = +attrs[key];\n            }\n            var len = is(from, \"array\") ? from.length : 1;\n            keys[key] = slice(fkeys.length, fkeys.length + len, f);\n            fkeys = fkeys.concat(from);\n            tkeys = tkeys.concat(to);\n        }\n        var now = mina.time(),\n            anim = mina(fkeys, tkeys, now, now + ms, mina.time, function (val) {\n                var attr = {};\n                for (var key in keys) if (keys[has](key)) {\n                    attr[key] = keys[key](val);\n                }\n                el.attr(attr);\n            }, easing);\n        el.anims[anim.id] = anim;\n        anim._attrs = attrs;\n        anim._callback = callback;\n        eve(\"snap.animcreated.\" + el.id, anim);\n        eve.once(\"mina.finish.\" + anim.id, function () {\n            eve.off(\"mina.*.\" + anim.id);\n            delete el.anims[anim.id];\n            callback && callback.call(el);\n        });\n        eve.once(\"mina.stop.\" + anim.id, function () {\n            eve.off(\"mina.*.\" + anim.id);\n            delete el.anims[anim.id];\n        });\n        return el;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var objectToString = Object.prototype.toString,\n        Str = String,\n        math = Math,\n        E = \"\";\n    function Matrix(a, b, c, d, e, f) {\n        if (b == null && objectToString.call(a) == \"[object SVGMatrix]\") {\n            this.a = a.a;\n            this.b = a.b;\n            this.c = a.c;\n            this.d = a.d;\n            this.e = a.e;\n            this.f = a.f;\n            return;\n        }\n        if (a != null) {\n            this.a = +a;\n            this.b = +b;\n            this.c = +c;\n            this.d = +d;\n            this.e = +e;\n            this.f = +f;\n        } else {\n            this.a = 1;\n            this.b = 0;\n            this.c = 0;\n            this.d = 1;\n            this.e = 0;\n            this.f = 0;\n        }\n    }\n    (function (matrixproto) {\n        /*\\\n         * Matrix.add\n         [ method ]\n         **\n         * Adds the given matrix to existing one\n         - a (number)\n         - b (number)\n         - c (number)\n         - d (number)\n         - e (number)\n         - f (number)\n         * or\n         - matrix (object) @Matrix\n        \\*/\n        matrixproto.add = function (a, b, c, d, e, f) {\n            if (a && a instanceof Matrix) {\n                return this.add(a.a, a.b, a.c, a.d, a.e, a.f);\n            }\n            var aNew = a * this.a + b * this.c,\n                bNew = a * this.b + b * this.d;\n            this.e += e * this.a + f * this.c;\n            this.f += e * this.b + f * this.d;\n            this.c = c * this.a + d * this.c;\n            this.d = c * this.b + d * this.d;\n\n            this.a = aNew;\n            this.b = bNew;\n            return this;\n        };\n        /*\\\n         * Matrix.multLeft\n         [ method ]\n         **\n         * Multiplies a passed affine transform to the left: M * this.\n         - a (number)\n         - b (number)\n         - c (number)\n         - d (number)\n         - e (number)\n         - f (number)\n         * or\n         - matrix (object) @Matrix\n        \\*/\n        Matrix.prototype.multLeft = function (a, b, c, d, e, f) {\n            if (a && a instanceof Matrix) {\n                return this.multLeft(a.a, a.b, a.c, a.d, a.e, a.f);\n            }\n            var aNew = a * this.a + c * this.b,\n                cNew = a * this.c + c * this.d,\n                eNew = a * this.e + c * this.f + e;\n            this.b = b * this.a + d * this.b;\n            this.d = b * this.c + d * this.d;\n            this.f = b * this.e + d * this.f + f;\n\n            this.a = aNew;\n            this.c = cNew;\n            this.e = eNew;\n            return this;\n        };\n        /*\\\n         * Matrix.invert\n         [ method ]\n         **\n         * Returns an inverted version of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.invert = function () {\n            var me = this,\n                x = me.a * me.d - me.b * me.c;\n            return new Matrix(me.d / x, -me.b / x, -me.c / x, me.a / x, (me.c * me.f - me.d * me.e) / x, (me.b * me.e - me.a * me.f) / x);\n        };\n        /*\\\n         * Matrix.clone\n         [ method ]\n         **\n         * Returns a copy of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.clone = function () {\n            return new Matrix(this.a, this.b, this.c, this.d, this.e, this.f);\n        };\n        /*\\\n         * Matrix.translate\n         [ method ]\n         **\n         * Translate the matrix\n         - x (number) horizontal offset distance\n         - y (number) vertical offset distance\n        \\*/\n        matrixproto.translate = function (x, y) {\n            this.e += x * this.a + y * this.c;\n            this.f += x * this.b + y * this.d;\n            return this;\n        };\n        /*\\\n         * Matrix.scale\n         [ method ]\n         **\n         * Scales the matrix\n         - x (number) amount to be scaled, with `1` resulting in no change\n         - y (number) #optional amount to scale along the vertical axis. (Otherwise `x` applies to both axes.)\n         - cx (number) #optional horizontal origin point from which to scale\n         - cy (number) #optional vertical origin point from which to scale\n         * Default cx, cy is the middle point of the element.\n        \\*/\n        matrixproto.scale = function (x, y, cx, cy) {\n            y == null && (y = x);\n            (cx || cy) && this.translate(cx, cy);\n            this.a *= x;\n            this.b *= x;\n            this.c *= y;\n            this.d *= y;\n            (cx || cy) && this.translate(-cx, -cy);\n            return this;\n        };\n        /*\\\n         * Matrix.rotate\n         [ method ]\n         **\n         * Rotates the matrix\n         - a (number) angle of rotation, in degrees\n         - x (number) horizontal origin point from which to rotate\n         - y (number) vertical origin point from which to rotate\n        \\*/\n        matrixproto.rotate = function (a, x, y) {\n            a = Snap.rad(a);\n            x = x || 0;\n            y = y || 0;\n            var cos = +math.cos(a).toFixed(9),\n                sin = +math.sin(a).toFixed(9);\n            this.add(cos, sin, -sin, cos, x, y);\n            return this.add(1, 0, 0, 1, -x, -y);\n        };\n        /*\\\n         * Matrix.skewX\n         [ method ]\n         **\n         * Skews the matrix along the x-axis\n         - x (number) Angle to skew along the x-axis (in degrees).\n        \\*/\n        matrixproto.skewX = function (x) {\n            return this.skew(x, 0);\n        };\n        /*\\\n         * Matrix.skewY\n         [ method ]\n         **\n         * Skews the matrix along the y-axis\n         - y (number) Angle to skew along the y-axis (in degrees).\n        \\*/\n        matrixproto.skewY = function (y) {\n            return this.skew(0, y);\n        };\n        /*\\\n         * Matrix.skew\n         [ method ]\n         **\n         * Skews the matrix\n         - y (number) Angle to skew along the y-axis (in degrees).\n         - x (number) Angle to skew along the x-axis (in degrees).\n        \\*/\n        matrixproto.skew = function (x, y) {\n            x = x || 0;\n            y = y || 0;\n            x = Snap.rad(x);\n            y = Snap.rad(y);\n            var c = math.tan(x).toFixed(9);\n            var b = math.tan(y).toFixed(9);\n            return this.add(1, b, c, 1, 0, 0);\n        };\n        /*\\\n         * Matrix.x\n         [ method ]\n         **\n         * Returns x coordinate for given point after transformation described by the matrix. See also @Matrix.y\n         - x (number)\n         - y (number)\n         = (number) x\n        \\*/\n        matrixproto.x = function (x, y) {\n            return x * this.a + y * this.c + this.e;\n        };\n        /*\\\n         * Matrix.y\n         [ method ]\n         **\n         * Returns y coordinate for given point after transformation described by the matrix. See also @Matrix.x\n         - x (number)\n         - y (number)\n         = (number) y\n        \\*/\n        matrixproto.y = function (x, y) {\n            return x * this.b + y * this.d + this.f;\n        };\n        matrixproto.get = function (i) {\n            return +this[Str.fromCharCode(97 + i)].toFixed(4);\n        };\n        matrixproto.toString = function () {\n            return \"matrix(\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + \")\";\n        };\n        matrixproto.offset = function () {\n            return [this.e.toFixed(4), this.f.toFixed(4)];\n        };\n        function norm(a) {\n            return a[0] * a[0] + a[1] * a[1];\n        }\n        function normalize(a) {\n            var mag = math.sqrt(norm(a));\n            a[0] && (a[0] /= mag);\n            a[1] && (a[1] /= mag);\n        }\n        /*\\\n         * Matrix.determinant\n         [ method ]\n         **\n         * Finds determinant of the given matrix.\n         = (number) determinant\n        \\*/\n        matrixproto.determinant = function () {\n            return this.a * this.d - this.b * this.c;\n        };\n        /*\\\n         * Matrix.split\n         [ method ]\n         **\n         * Splits matrix into primitive transformations\n         = (object) in format:\n         o dx (number) translation by x\n         o dy (number) translation by y\n         o scalex (number) scale by x\n         o scaley (number) scale by y\n         o shear (number) shear\n         o rotate (number) rotation in deg\n         o isSimple (boolean) could it be represented via simple transformations\n        \\*/\n        matrixproto.split = function () {\n            var out = {};\n            // translation\n            out.dx = this.e;\n            out.dy = this.f;\n\n            // scale and shear\n            var row = [[this.a, this.b], [this.c, this.d]];\n            out.scalex = math.sqrt(norm(row[0]));\n            normalize(row[0]);\n\n            out.shear = row[0][0] * row[1][0] + row[0][1] * row[1][1];\n            row[1] = [row[1][0] - row[0][0] * out.shear, row[1][1] - row[0][1] * out.shear];\n\n            out.scaley = math.sqrt(norm(row[1]));\n            normalize(row[1]);\n            out.shear /= out.scaley;\n\n            if (this.determinant() < 0) {\n                out.scalex = -out.scalex;\n            }\n\n            // rotation\n            var sin = row[0][1],\n                cos = row[1][1];\n            if (cos < 0) {\n                out.rotate = Snap.deg(math.acos(cos));\n                if (sin < 0) {\n                    out.rotate = 360 - out.rotate;\n                }\n            } else {\n                out.rotate = Snap.deg(math.asin(sin));\n            }\n\n            out.isSimple = !+out.shear.toFixed(9) && (out.scalex.toFixed(9) == out.scaley.toFixed(9) || !out.rotate);\n            out.isSuperSimple = !+out.shear.toFixed(9) && out.scalex.toFixed(9) == out.scaley.toFixed(9) && !out.rotate;\n            out.noRotation = !+out.shear.toFixed(9) && !out.rotate;\n            return out;\n        };\n        /*\\\n         * Matrix.toTransformString\n         [ method ]\n         **\n         * Returns transform string that represents given matrix\n         = (string) transform string\n        \\*/\n        matrixproto.toTransformString = function (shorter) {\n            var s = shorter || this.split();\n            if (!+s.shear.toFixed(9)) {\n                s.scalex = +s.scalex.toFixed(4);\n                s.scaley = +s.scaley.toFixed(4);\n                s.rotate = +s.rotate.toFixed(4);\n                return  (s.dx || s.dy ? \"t\" + [+s.dx.toFixed(4), +s.dy.toFixed(4)] : E) +\n                        (s.rotate ? \"r\" + [+s.rotate.toFixed(4), 0, 0] : E) +\n                        (s.scalex != 1 || s.scaley != 1 ? \"s\" + [s.scalex, s.scaley, 0, 0] : E);\n            } else {\n                return \"m\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)];\n            }\n        };\n    })(Matrix.prototype);\n    /*\\\n     * Snap.Matrix\n     [ method ]\n     **\n     * Matrix constructor, extend on your own risk.\n     * To create matrices use @Snap.matrix.\n    \\*/\n    Snap.Matrix = Matrix;\n    /*\\\n     * Snap.matrix\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns a matrix based on the given parameters\n     - a (number)\n     - b (number)\n     - c (number)\n     - d (number)\n     - e (number)\n     - f (number)\n     * or\n     - svgMatrix (SVGMatrix)\n     = (object) @Matrix\n    \\*/\n    Snap.matrix = function (a, b, c, d, e, f) {\n        return new Matrix(a, b, c, d, e, f);\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var has = \"hasOwnProperty\",\n        make = Snap._.make,\n        wrap = Snap._.wrap,\n        is = Snap.is,\n        getSomeDefs = Snap._.getSomeDefs,\n        reURLValue = /^url\\((['\"]?)([^)]+)\\1\\)$/,\n        $ = Snap._.$,\n        URL = Snap.url,\n        Str = String,\n        separator = Snap._.separator,\n        E = \"\";\n    /*\\\n     * Snap.deurl\n     [ method ]\n     **\n     * Unwraps path from `\"url(<path>)\"`.\n     - value (string) url path\n     = (string) unwrapped path\n    \\*/\n    Snap.deurl = function (value) {\n        var res = String(value).match(reURLValue);\n        return res ? res[2] : value;\n    }\n    // Attributes event handlers\n    eve.on(\"snap.util.attr.mask\", function (value) {\n        if (value instanceof Element || value instanceof Fragment) {\n            eve.stop();\n            if (value instanceof Fragment && value.node.childNodes.length == 1) {\n                value = value.node.firstChild;\n                getSomeDefs(this).appendChild(value);\n                value = wrap(value);\n            }\n            if (value.type == \"mask\") {\n                var mask = value;\n            } else {\n                mask = make(\"mask\", getSomeDefs(this));\n                mask.node.appendChild(value.node);\n            }\n            !mask.node.id && $(mask.node, {\n                id: mask.id\n            });\n            $(this.node, {\n                mask: URL(mask.id)\n            });\n        }\n    });\n    (function (clipIt) {\n        eve.on(\"snap.util.attr.clip\", clipIt);\n        eve.on(\"snap.util.attr.clip-path\", clipIt);\n        eve.on(\"snap.util.attr.clipPath\", clipIt);\n    }(function (value) {\n        if (value instanceof Element || value instanceof Fragment) {\n            eve.stop();\n            var clip,\n                node = value.node;\n            while (node) {\n                if (node.nodeName === \"clipPath\") {\n                    clip = new Element(node);\n                    break;\n                }\n                if (node.nodeName === \"svg\") {\n                    clip = undefined;\n                    break;\n                }\n                node = node.parentNode;\n            }\n            if (!clip) {\n                clip = make(\"clipPath\", getSomeDefs(this));\n                clip.node.appendChild(value.node);\n                !clip.node.id && $(clip.node, {\n                    id: clip.id\n                });\n            }\n            $(this.node, {\n                \"clip-path\": URL(clip.node.id || clip.id)\n            });\n        }\n    }));\n    function fillStroke(name) {\n        return function (value) {\n            eve.stop();\n            if (value instanceof Fragment && value.node.childNodes.length == 1 &&\n                (value.node.firstChild.tagName == \"radialGradient\" ||\n                value.node.firstChild.tagName == \"linearGradient\" ||\n                value.node.firstChild.tagName == \"pattern\")) {\n                value = value.node.firstChild;\n                getSomeDefs(this).appendChild(value);\n                value = wrap(value);\n            }\n            if (value instanceof Element) {\n                if (value.type == \"radialGradient\" || value.type == \"linearGradient\"\n                   || value.type == \"pattern\") {\n                    if (!value.node.id) {\n                        $(value.node, {\n                            id: value.id\n                        });\n                    }\n                    var fill = URL(value.node.id);\n                } else {\n                    fill = value.attr(name);\n                }\n            } else {\n                fill = Snap.color(value);\n                if (fill.error) {\n                    var grad = Snap(getSomeDefs(this).ownerSVGElement).gradient(value);\n                    if (grad) {\n                        if (!grad.node.id) {\n                            $(grad.node, {\n                                id: grad.id\n                            });\n                        }\n                        fill = URL(grad.node.id);\n                    } else {\n                        fill = value;\n                    }\n                } else {\n                    fill = Str(fill);\n                }\n            }\n            var attrs = {};\n            attrs[name] = fill;\n            $(this.node, attrs);\n            this.node.style[name] = E;\n        };\n    }\n    eve.on(\"snap.util.attr.fill\", fillStroke(\"fill\"));\n    eve.on(\"snap.util.attr.stroke\", fillStroke(\"stroke\"));\n    var gradrg = /^([lr])(?:\\(([^)]*)\\))?(.*)$/i;\n    eve.on(\"snap.util.grad.parse\", function parseGrad(string) {\n        string = Str(string);\n        var tokens = string.match(gradrg);\n        if (!tokens) {\n            return null;\n        }\n        var type = tokens[1],\n            params = tokens[2],\n            stops = tokens[3];\n        params = params.split(/\\s*,\\s*/).map(function (el) {\n            return +el == el ? +el : el;\n        });\n        if (params.length == 1 && params[0] == 0) {\n            params = [];\n        }\n        stops = stops.split(\"-\");\n        stops = stops.map(function (el) {\n            el = el.split(\":\");\n            var out = {\n                color: el[0]\n            };\n            if (el[1]) {\n                out.offset = parseFloat(el[1]);\n            }\n            return out;\n        });\n        var len = stops.length,\n            start = 0,\n            j = 0;\n        function seed(i, end) {\n            var step = (end - start) / (i - j);\n            for (var k = j; k < i; k++) {\n                stops[k].offset = +(+start + step * (k - j)).toFixed(2);\n            }\n            j = i;\n            start = end;\n        }\n        len--;\n        for (var i = 0; i < len; i++) if (\"offset\" in stops[i]) {\n            seed(i, stops[i].offset);\n        }\n        stops[len].offset = stops[len].offset || 100;\n        seed(len, stops[len].offset);\n        return {\n            type: type,\n            params: params,\n            stops: stops\n        };\n    });\n\n    eve.on(\"snap.util.attr.d\", function (value) {\n        eve.stop();\n        if (is(value, \"array\") && is(value[0], \"array\")) {\n            value = Snap.path.toString.call(value);\n        }\n        value = Str(value);\n        if (value.match(/[ruo]/i)) {\n            value = Snap.path.toAbsolute(value);\n        }\n        $(this.node, {d: value});\n    })(-1);\n    eve.on(\"snap.util.attr.#text\", function (value) {\n        eve.stop();\n        value = Str(value);\n        var txt = glob.doc.createTextNode(value);\n        while (this.node.firstChild) {\n            this.node.removeChild(this.node.firstChild);\n        }\n        this.node.appendChild(txt);\n    })(-1);\n    eve.on(\"snap.util.attr.path\", function (value) {\n        eve.stop();\n        this.attr({d: value});\n    })(-1);\n    eve.on(\"snap.util.attr.class\", function (value) {\n        eve.stop();\n        this.node.className.baseVal = value;\n    })(-1);\n    eve.on(\"snap.util.attr.viewBox\", function (value) {\n        var vb;\n        if (is(value, \"object\") && \"x\" in value) {\n            vb = [value.x, value.y, value.width, value.height].join(\" \");\n        } else if (is(value, \"array\")) {\n            vb = value.join(\" \");\n        } else {\n            vb = value;\n        }\n        $(this.node, {\n            viewBox: vb\n        });\n        eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.transform\", function (value) {\n        this.transform(value);\n        eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.r\", function (value) {\n        if (this.type == \"rect\") {\n            eve.stop();\n            $(this.node, {\n                rx: value,\n                ry: value\n            });\n        }\n    })(-1);\n    eve.on(\"snap.util.attr.textpath\", function (value) {\n        eve.stop();\n        if (this.type == \"text\") {\n            var id, tp, node;\n            if (!value && this.textPath) {\n                tp = this.textPath;\n                while (tp.node.firstChild) {\n                    this.node.appendChild(tp.node.firstChild);\n                }\n                tp.remove();\n                delete this.textPath;\n                return;\n            }\n            if (is(value, \"string\")) {\n                var defs = getSomeDefs(this),\n                    path = wrap(defs.parentNode).path(value);\n                defs.appendChild(path.node);\n                id = path.id;\n                path.attr({id: id});\n            } else {\n                value = wrap(value);\n                if (value instanceof Element) {\n                    id = value.attr(\"id\");\n                    if (!id) {\n                        id = value.id;\n                        value.attr({id: id});\n                    }\n                }\n            }\n            if (id) {\n                tp = this.textPath;\n                node = this.node;\n                if (tp) {\n                    tp.attr({\"xlink:href\": \"#\" + id});\n                } else {\n                    tp = $(\"textPath\", {\n                        \"xlink:href\": \"#\" + id\n                    });\n                    while (node.firstChild) {\n                        tp.appendChild(node.firstChild);\n                    }\n                    node.appendChild(tp);\n                    this.textPath = wrap(tp);\n                }\n            }\n        }\n    })(-1);\n    eve.on(\"snap.util.attr.text\", function (value) {\n        if (this.type == \"text\") {\n            var i = 0,\n                node = this.node,\n                tuner = function (chunk) {\n                    var out = $(\"tspan\");\n                    if (is(chunk, \"array\")) {\n                        for (var i = 0; i < chunk.length; i++) {\n                            out.appendChild(tuner(chunk[i]));\n                        }\n                    } else {\n                        out.appendChild(glob.doc.createTextNode(chunk));\n                    }\n                    out.normalize && out.normalize();\n                    return out;\n                };\n            while (node.firstChild) {\n                node.removeChild(node.firstChild);\n            }\n            var tuned = tuner(value);\n            while (tuned.firstChild) {\n                node.appendChild(tuned.firstChild);\n            }\n        }\n        eve.stop();\n    })(-1);\n    function setFontSize(value) {\n        eve.stop();\n        if (value == +value) {\n            value += \"px\";\n        }\n        this.node.style.fontSize = value;\n    }\n    eve.on(\"snap.util.attr.fontSize\", setFontSize)(-1);\n    eve.on(\"snap.util.attr.font-size\", setFontSize)(-1);\n\n\n    eve.on(\"snap.util.getattr.transform\", function () {\n        eve.stop();\n        return this.transform();\n    })(-1);\n    eve.on(\"snap.util.getattr.textpath\", function () {\n        eve.stop();\n        return this.textPath;\n    })(-1);\n    // Markers\n    (function () {\n        function getter(end) {\n            return function () {\n                eve.stop();\n                var style = glob.doc.defaultView.getComputedStyle(this.node, null).getPropertyValue(\"marker-\" + end);\n                if (style == \"none\") {\n                    return style;\n                } else {\n                    return Snap(glob.doc.getElementById(style.match(reURLValue)[1]));\n                }\n            };\n        }\n        function setter(end) {\n            return function (value) {\n                eve.stop();\n                var name = \"marker\" + end.charAt(0).toUpperCase() + end.substring(1);\n                if (value == \"\" || !value) {\n                    this.node.style[name] = \"none\";\n                    return;\n                }\n                if (value.type == \"marker\") {\n                    var id = value.node.id;\n                    if (!id) {\n                        $(value.node, {id: value.id});\n                    }\n                    this.node.style[name] = URL(id);\n                    return;\n                }\n            };\n        }\n        eve.on(\"snap.util.getattr.marker-end\", getter(\"end\"))(-1);\n        eve.on(\"snap.util.getattr.markerEnd\", getter(\"end\"))(-1);\n        eve.on(\"snap.util.getattr.marker-start\", getter(\"start\"))(-1);\n        eve.on(\"snap.util.getattr.markerStart\", getter(\"start\"))(-1);\n        eve.on(\"snap.util.getattr.marker-mid\", getter(\"mid\"))(-1);\n        eve.on(\"snap.util.getattr.markerMid\", getter(\"mid\"))(-1);\n        eve.on(\"snap.util.attr.marker-end\", setter(\"end\"))(-1);\n        eve.on(\"snap.util.attr.markerEnd\", setter(\"end\"))(-1);\n        eve.on(\"snap.util.attr.marker-start\", setter(\"start\"))(-1);\n        eve.on(\"snap.util.attr.markerStart\", setter(\"start\"))(-1);\n        eve.on(\"snap.util.attr.marker-mid\", setter(\"mid\"))(-1);\n        eve.on(\"snap.util.attr.markerMid\", setter(\"mid\"))(-1);\n    }());\n    eve.on(\"snap.util.getattr.r\", function () {\n        if (this.type == \"rect\" && $(this.node, \"rx\") == $(this.node, \"ry\")) {\n            eve.stop();\n            return $(this.node, \"rx\");\n        }\n    })(-1);\n    function textExtract(node) {\n        var out = [];\n        var children = node.childNodes;\n        for (var i = 0, ii = children.length; i < ii; i++) {\n            var chi = children[i];\n            if (chi.nodeType == 3) {\n                out.push(chi.nodeValue);\n            }\n            if (chi.tagName == \"tspan\") {\n                if (chi.childNodes.length == 1 && chi.firstChild.nodeType == 3) {\n                    out.push(chi.firstChild.nodeValue);\n                } else {\n                    out.push(textExtract(chi));\n                }\n            }\n        }\n        return out;\n    }\n    eve.on(\"snap.util.getattr.text\", function () {\n        if (this.type == \"text\" || this.type == \"tspan\") {\n            eve.stop();\n            var out = textExtract(this.node);\n            return out.length == 1 ? out[0] : out;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.#text\", function () {\n        return this.node.textContent;\n    })(-1);\n    eve.on(\"snap.util.getattr.fill\", function (internal) {\n        if (internal) {\n            return;\n        }\n        eve.stop();\n        var value = eve(\"snap.util.getattr.fill\", this, true).firstDefined();\n        return Snap(Snap.deurl(value)) || value;\n    })(-1);\n    eve.on(\"snap.util.getattr.stroke\", function (internal) {\n        if (internal) {\n            return;\n        }\n        eve.stop();\n        var value = eve(\"snap.util.getattr.stroke\", this, true).firstDefined();\n        return Snap(Snap.deurl(value)) || value;\n    })(-1);\n    eve.on(\"snap.util.getattr.viewBox\", function () {\n        eve.stop();\n        var vb = $(this.node, \"viewBox\");\n        if (vb) {\n            vb = vb.split(separator);\n            return Snap._.box(+vb[0], +vb[1], +vb[2], +vb[3]);\n        } else {\n            return;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.points\", function () {\n        var p = $(this.node, \"points\");\n        eve.stop();\n        if (p) {\n            return p.split(separator);\n        } else {\n            return;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.path\", function () {\n        var p = $(this.node, \"d\");\n        eve.stop();\n        return p;\n    })(-1);\n    eve.on(\"snap.util.getattr.class\", function () {\n        return this.node.className.baseVal;\n    })(-1);\n    function getFontSize() {\n        eve.stop();\n        return this.node.style.fontSize;\n    }\n    eve.on(\"snap.util.getattr.fontSize\", getFontSize)(-1);\n    eve.on(\"snap.util.getattr.font-size\", getFontSize)(-1);\n});\n\n// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var rgNotSpace = /\\S+/g,\n        rgBadSpace = /[\\t\\r\\n\\f]/g,\n        rgTrim = /(^\\s+|\\s+$)/g,\n        Str = String,\n        elproto = Element.prototype;\n    /*\\\n     * Element.addClass\n     [ method ]\n     **\n     * Adds given class name or list of class names to the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.addClass = function (value) {\n        var classes = Str(value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n\n        if (classes.length) {\n            j = 0;\n            while (clazz = classes[j++]) {\n                pos = curClasses.indexOf(clazz);\n                if (!~pos) {\n                    curClasses.push(clazz);\n                }\n            }\n\n            finalValue = curClasses.join(\" \");\n            if (className != finalValue) {\n                elem.className.baseVal = finalValue;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.removeClass\n     [ method ]\n     **\n     * Removes given class name or list of class names from the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.removeClass = function (value) {\n        var classes = Str(value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n        if (curClasses.length) {\n            j = 0;\n            while (clazz = classes[j++]) {\n                pos = curClasses.indexOf(clazz);\n                if (~pos) {\n                    curClasses.splice(pos, 1);\n                }\n            }\n\n            finalValue = curClasses.join(\" \");\n            if (className != finalValue) {\n                elem.className.baseVal = finalValue;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.hasClass\n     [ method ]\n     **\n     * Checks if the element has a given class name in the list of class names applied to it.\n     - value (string) class name\n     **\n     = (boolean) `true` if the element has given class\n    \\*/\n    elproto.hasClass = function (value) {\n        var elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [];\n        return !!~curClasses.indexOf(value);\n    };\n    /*\\\n     * Element.toggleClass\n     [ method ]\n     **\n     * Add or remove one or more classes from the element, depending on either\n     * the class’s presence or the value of the `flag` argument.\n     - value (string) class name or space separated list of class names\n     - flag (boolean) value to determine whether the class should be added or removed\n     **\n     = (Element) original element.\n    \\*/\n    elproto.toggleClass = function (value, flag) {\n        if (flag != null) {\n            if (flag) {\n                return this.addClass(value);\n            } else {\n                return this.removeClass(value);\n            }\n        }\n        var classes = (value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n        j = 0;\n        while (clazz = classes[j++]) {\n            pos = curClasses.indexOf(clazz);\n            if (~pos) {\n                curClasses.splice(pos, 1);\n            } else {\n                curClasses.push(clazz);\n            }\n        }\n\n        finalValue = curClasses.join(\" \");\n        if (className != finalValue) {\n            elem.className.baseVal = finalValue;\n        }\n        return this;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var operators = {\n            \"+\": function (x, y) {\n                    return x + y;\n                },\n            \"-\": function (x, y) {\n                    return x - y;\n                },\n            \"/\": function (x, y) {\n                    return x / y;\n                },\n            \"*\": function (x, y) {\n                    return x * y;\n                }\n        },\n        Str = String,\n        reUnit = /[a-z]+$/i,\n        reAddon = /^\\s*([+\\-\\/*])\\s*=\\s*([\\d.eE+\\-]+)\\s*([^\\d\\s]+)?\\s*$/;\n    function getNumber(val) {\n        return val;\n    }\n    function getUnit(unit) {\n        return function (val) {\n            return +val.toFixed(3) + unit;\n        };\n    }\n    eve.on(\"snap.util.attr\", function (val) {\n        var plus = Str(val).match(reAddon);\n        if (plus) {\n            var evnt = eve.nt(),\n                name = evnt.substring(evnt.lastIndexOf(\".\") + 1),\n                a = this.attr(name),\n                atr = {};\n            eve.stop();\n            var unit = plus[3] || \"\",\n                aUnit = a.match(reUnit),\n                op = operators[plus[1]];\n            if (aUnit && aUnit == unit) {\n                val = op(parseFloat(a), +plus[2]);\n            } else {\n                a = this.asPX(name);\n                val = op(this.asPX(name), this.asPX(name, plus[2] + unit));\n            }\n            if (isNaN(a) || isNaN(val)) {\n                return;\n            }\n            atr[name] = val;\n            this.attr(atr);\n        }\n    })(-10);\n    eve.on(\"snap.util.equal\", function (name, b) {\n        var A, B, a = Str(this.attr(name) || \"\"),\n            el = this,\n            bplus = Str(b).match(reAddon);\n        if (bplus) {\n            eve.stop();\n            var unit = bplus[3] || \"\",\n                aUnit = a.match(reUnit),\n                op = operators[bplus[1]];\n            if (aUnit && aUnit == unit) {\n                return {\n                    from: parseFloat(a),\n                    to: op(parseFloat(a), +bplus[2]),\n                    f: getUnit(aUnit)\n                };\n            } else {\n                a = this.asPX(name);\n                return {\n                    from: a,\n                    to: op(a, this.asPX(name, bplus[2] + unit)),\n                    f: getNumber\n                };\n            }\n        }\n    })(-10);\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var proto = Paper.prototype,\n        is = Snap.is;\n    /*\\\n     * Paper.rect\n     [ method ]\n     *\n     * Draws a rectangle\n     **\n     - x (number) x coordinate of the top left corner\n     - y (number) y coordinate of the top left corner\n     - width (number) width\n     - height (number) height\n     - rx (number) #optional horizontal radius for rounded corners, default is 0\n     - ry (number) #optional vertical radius for rounded corners, default is rx or 0\n     = (object) the `rect` element\n     **\n     > Usage\n     | // regular rectangle\n     | var c = paper.rect(10, 10, 50, 50);\n     | // rectangle with rounded corners\n     | var c = paper.rect(40, 40, 50, 50, 10);\n    \\*/\n    proto.rect = function (x, y, w, h, rx, ry) {\n        var attr;\n        if (ry == null) {\n            ry = rx;\n        }\n        if (is(x, \"object\") && x == \"[object Object]\") {\n            attr = x;\n        } else if (x != null) {\n            attr = {\n                x: x,\n                y: y,\n                width: w,\n                height: h\n            };\n            if (rx != null) {\n                attr.rx = rx;\n                attr.ry = ry;\n            }\n        }\n        return this.el(\"rect\", attr);\n    };\n    /*\\\n     * Paper.circle\n     [ method ]\n     **\n     * Draws a circle\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - r (number) radius\n     = (object) the `circle` element\n     **\n     > Usage\n     | var c = paper.circle(50, 50, 40);\n    \\*/\n    proto.circle = function (cx, cy, r) {\n        var attr;\n        if (is(cx, \"object\") && cx == \"[object Object]\") {\n            attr = cx;\n        } else if (cx != null) {\n            attr = {\n                cx: cx,\n                cy: cy,\n                r: r\n            };\n        }\n        return this.el(\"circle\", attr);\n    };\n\n    var preload = (function () {\n        function onerror() {\n            this.parentNode.removeChild(this);\n        }\n        return function (src, f) {\n            var img = glob.doc.createElement(\"img\"),\n                body = glob.doc.body;\n            img.style.cssText = \"position:absolute;left:-9999em;top:-9999em\";\n            img.onload = function () {\n                f.call(img);\n                img.onload = img.onerror = null;\n                body.removeChild(img);\n            };\n            img.onerror = onerror;\n            body.appendChild(img);\n            img.src = src;\n        };\n    }());\n\n    /*\\\n     * Paper.image\n     [ method ]\n     **\n     * Places an image on the surface\n     **\n     - src (string) URI of the source image\n     - x (number) x offset position\n     - y (number) y offset position\n     - width (number) width of the image\n     - height (number) height of the image\n     = (object) the `image` element\n     * or\n     = (object) Snap element object with type `image`\n     **\n     > Usage\n     | var c = paper.image(\"apple.png\", 10, 10, 80, 80);\n    \\*/\n    proto.image = function (src, x, y, width, height) {\n        var el = this.el(\"image\");\n        if (is(src, \"object\") && \"src\" in src) {\n            el.attr(src);\n        } else if (src != null) {\n            var set = {\n                \"xlink:href\": src,\n                preserveAspectRatio: \"none\"\n            };\n            if (x != null && y != null) {\n                set.x = x;\n                set.y = y;\n            }\n            if (width != null && height != null) {\n                set.width = width;\n                set.height = height;\n            } else {\n                preload(src, function () {\n                    Snap._.$(el.node, {\n                        width: this.offsetWidth,\n                        height: this.offsetHeight\n                    });\n                });\n            }\n            Snap._.$(el.node, set);\n        }\n        return el;\n    };\n    /*\\\n     * Paper.ellipse\n     [ method ]\n     **\n     * Draws an ellipse\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - rx (number) horizontal radius\n     - ry (number) vertical radius\n     = (object) the `ellipse` element\n     **\n     > Usage\n     | var c = paper.ellipse(50, 50, 40, 20);\n    \\*/\n    proto.ellipse = function (cx, cy, rx, ry) {\n        var attr;\n        if (is(cx, \"object\") && cx == \"[object Object]\") {\n            attr = cx;\n        } else if (cx != null) {\n            attr ={\n                cx: cx,\n                cy: cy,\n                rx: rx,\n                ry: ry\n            };\n        }\n        return this.el(\"ellipse\", attr);\n    };\n    // SIERRA Paper.path(): Unclear from the link what a Catmull-Rom curveto is, and why it would make life any easier.\n    /*\\\n     * Paper.path\n     [ method ]\n     **\n     * Creates a `<path>` element using the given string as the path's definition\n     - pathString (string) #optional path string in SVG format\n     * Path string consists of one-letter commands, followed by comma seprarated arguments in numerical form. Example:\n     | \"M10,20L30,40\"\n     * This example features two commands: `M`, with arguments `(10, 20)` and `L` with arguments `(30, 40)`. Uppercase letter commands express coordinates in absolute terms, while lowercase commands express them in relative terms from the most recently declared coordinates.\n     *\n     # <p>Here is short list of commands available, for more details see <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path's data attribute's format are described in the SVG specification.\">SVG path string format</a> or <a href=\"https://developer.mozilla.org/en/SVG/Tutorial/Paths\">article about path strings at MDN</a>.</p>\n     # <table><thead><tr><th>Command</th><th>Name</th><th>Parameters</th></tr></thead><tbody>\n     # <tr><td>M</td><td>moveto</td><td>(x y)+</td></tr>\n     # <tr><td>Z</td><td>closepath</td><td>(none)</td></tr>\n     # <tr><td>L</td><td>lineto</td><td>(x y)+</td></tr>\n     # <tr><td>H</td><td>horizontal lineto</td><td>x+</td></tr>\n     # <tr><td>V</td><td>vertical lineto</td><td>y+</td></tr>\n     # <tr><td>C</td><td>curveto</td><td>(x1 y1 x2 y2 x y)+</td></tr>\n     # <tr><td>S</td><td>smooth curveto</td><td>(x2 y2 x y)+</td></tr>\n     # <tr><td>Q</td><td>quadratic Bézier curveto</td><td>(x1 y1 x y)+</td></tr>\n     # <tr><td>T</td><td>smooth quadratic Bézier curveto</td><td>(x y)+</td></tr>\n     # <tr><td>A</td><td>elliptical arc</td><td>(rx ry x-axis-rotation large-arc-flag sweep-flag x y)+</td></tr>\n     # <tr><td>R</td><td><a href=\"http://en.wikipedia.org/wiki/Catmull–Rom_spline#Catmull.E2.80.93Rom_spline\">Catmull-Rom curveto</a>*</td><td>x1 y1 (x y)+</td></tr></tbody></table>\n     * * _Catmull-Rom curveto_ is a not standard SVG command and added to make life easier.\n     * Note: there is a special case when a path consists of only three commands: `M10,10R…z`. In this case the path connects back to its starting point.\n     > Usage\n     | var c = paper.path(\"M10 10L90 90\");\n     | // draw a diagonal line:\n     | // move to 10,10, line to 90,90\n    \\*/\n    proto.path = function (d) {\n        var attr;\n        if (is(d, \"object\") && !is(d, \"array\")) {\n            attr = d;\n        } else if (d) {\n            attr = {d: d};\n        }\n        return this.el(\"path\", attr);\n    };\n    /*\\\n     * Paper.g\n     [ method ]\n     **\n     * Creates a group element\n     **\n     - varargs (…) #optional elements to nest within the group\n     = (object) the `g` element\n     **\n     > Usage\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g(c2, c1); // note that the order of elements is different\n     * or\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g();\n     | g.add(c2, c1);\n    \\*/\n    /*\\\n     * Paper.group\n     [ method ]\n     **\n     * See @Paper.g\n    \\*/\n    proto.group = proto.g = function (first) {\n        var attr,\n            el = this.el(\"g\");\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n    /*\\\n     * Paper.svg\n     [ method ]\n     **\n     * Creates a nested SVG element.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `svg` element\n     **\n    \\*/\n    proto.svg = function (x, y, width, height, vbx, vby, vbw, vbh) {\n        var attrs = {};\n        if (is(x, \"object\") && y == null) {\n            attrs = x;\n        } else {\n            if (x != null) {\n                attrs.x = x;\n            }\n            if (y != null) {\n                attrs.y = y;\n            }\n            if (width != null) {\n                attrs.width = width;\n            }\n            if (height != null) {\n                attrs.height = height;\n            }\n            if (vbx != null && vby != null && vbw != null && vbh != null) {\n                attrs.viewBox = [vbx, vby, vbw, vbh];\n            }\n        }\n        return this.el(\"svg\", attrs);\n    };\n    /*\\\n     * Paper.mask\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a mask.\n     **\n     = (object) the `mask` element\n     **\n    \\*/\n    proto.mask = function (first) {\n        var attr,\n            el = this.el(\"mask\");\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n    /*\\\n     * Paper.ptrn\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a pattern.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `pattern` element\n     **\n    \\*/\n    proto.ptrn = function (x, y, width, height, vx, vy, vw, vh) {\n        if (is(x, \"object\")) {\n            var attr = x;\n        } else {\n            attr = {patternUnits: \"userSpaceOnUse\"};\n            if (x) {\n                attr.x = x;\n            }\n            if (y) {\n                attr.y = y;\n            }\n            if (width != null) {\n                attr.width = width;\n            }\n            if (height != null) {\n                attr.height = height;\n            }\n            if (vx != null && vy != null && vw != null && vh != null) {\n                attr.viewBox = [vx, vy, vw, vh];\n            } else {\n                attr.viewBox = [x || 0, y || 0, width || 0, height || 0];\n            }\n        }\n        return this.el(\"pattern\", attr);\n    };\n    /*\\\n     * Paper.use\n     [ method ]\n     **\n     * Creates a <use> element.\n     - id (string) @optional id of element to link\n     * or\n     - id (Element) @optional element to link\n     **\n     = (object) the `use` element\n     **\n    \\*/\n    proto.use = function (id) {\n        if (id != null) {\n            if (id instanceof Element) {\n                if (!id.attr(\"id\")) {\n                    id.attr({id: Snap._.id(id)});\n                }\n                id = id.attr(\"id\");\n            }\n            if (String(id).charAt() == \"#\") {\n                id = id.substring(1);\n            }\n            return this.el(\"use\", {\"xlink:href\": \"#\" + id});\n        } else {\n            return Element.prototype.use.call(this);\n        }\n    };\n    /*\\\n     * Paper.symbol\n     [ method ]\n     **\n     * Creates a <symbol> element.\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     = (object) the `symbol` element\n     **\n    \\*/\n    proto.symbol = function (vx, vy, vw, vh) {\n        var attr = {};\n        if (vx != null && vy != null && vw != null && vh != null) {\n            attr.viewBox = [vx, vy, vw, vh];\n        }\n\n        return this.el(\"symbol\", attr);\n    };\n    /*\\\n     * Paper.text\n     [ method ]\n     **\n     * Draws a text string\n     **\n     - x (number) x coordinate position\n     - y (number) y coordinate position\n     - text (string|array) The text string to draw or array of strings to nest within separate `<tspan>` elements\n     = (object) the `text` element\n     **\n     > Usage\n     | var t1 = paper.text(50, 50, \"Snap\");\n     | var t2 = paper.text(50, 50, [\"S\",\"n\",\"a\",\"p\"]);\n     | // Text path usage\n     | t1.attr({textpath: \"M10,10L100,100\"});\n     | // or\n     | var pth = paper.path(\"M10,10L100,100\");\n     | t1.attr({textpath: pth});\n    \\*/\n    proto.text = function (x, y, text) {\n        var attr = {};\n        if (is(x, \"object\")) {\n            attr = x;\n        } else if (x != null) {\n            attr = {\n                x: x,\n                y: y,\n                text: text || \"\"\n            };\n        }\n        return this.el(\"text\", attr);\n    };\n    /*\\\n     * Paper.line\n     [ method ]\n     **\n     * Draws a line\n     **\n     - x1 (number) x coordinate position of the start\n     - y1 (number) y coordinate position of the start\n     - x2 (number) x coordinate position of the end\n     - y2 (number) y coordinate position of the end\n     = (object) the `line` element\n     **\n     > Usage\n     | var t1 = paper.line(50, 50, 100, 100);\n    \\*/\n    proto.line = function (x1, y1, x2, y2) {\n        var attr = {};\n        if (is(x1, \"object\")) {\n            attr = x1;\n        } else if (x1 != null) {\n            attr = {\n                x1: x1,\n                x2: x2,\n                y1: y1,\n                y2: y2\n            };\n        }\n        return this.el(\"line\", attr);\n    };\n    /*\\\n     * Paper.polyline\n     [ method ]\n     **\n     * Draws a polyline\n     **\n     - points (array) array of points\n     * or\n     - varargs (…) points\n     = (object) the `polyline` element\n     **\n     > Usage\n     | var p1 = paper.polyline([10, 10, 100, 100]);\n     | var p2 = paper.polyline(10, 10, 100, 100);\n    \\*/\n    proto.polyline = function (points) {\n        if (arguments.length > 1) {\n            points = Array.prototype.slice.call(arguments, 0);\n        }\n        var attr = {};\n        if (is(points, \"object\") && !is(points, \"array\")) {\n            attr = points;\n        } else if (points != null) {\n            attr = {points: points};\n        }\n        return this.el(\"polyline\", attr);\n    };\n    /*\\\n     * Paper.polygon\n     [ method ]\n     **\n     * Draws a polygon. See @Paper.polyline\n    \\*/\n    proto.polygon = function (points) {\n        if (arguments.length > 1) {\n            points = Array.prototype.slice.call(arguments, 0);\n        }\n        var attr = {};\n        if (is(points, \"object\") && !is(points, \"array\")) {\n            attr = points;\n        } else if (points != null) {\n            attr = {points: points};\n        }\n        return this.el(\"polygon\", attr);\n    };\n    // gradients\n    (function () {\n        var $ = Snap._.$;\n        // gradients' helpers\n        /*\\\n         * Element.stops\n         [ method ]\n         **\n         * Only for gradients!\n         * Returns array of gradient stops elements.\n         = (array) the stops array.\n        \\*/\n        function Gstops() {\n            return this.selectAll(\"stop\");\n        }\n        /*\\\n         * Element.addStop\n         [ method ]\n         **\n         * Only for gradients!\n         * Adds another stop to the gradient.\n         - color (string) stops color\n         - offset (number) stops offset 0..100\n         = (object) gradient element\n        \\*/\n        function GaddStop(color, offset) {\n            var stop = $(\"stop\"),\n                attr = {\n                    offset: +offset + \"%\"\n                };\n            color = Snap.color(color);\n            attr[\"stop-color\"] = color.hex;\n            if (color.opacity < 1) {\n                attr[\"stop-opacity\"] = color.opacity;\n            }\n            $(stop, attr);\n            var stops = this.stops(),\n                inserted;\n            for (var i = 0; i < stops.length; i++) {\n                var stopOffset = parseFloat(stops[i].attr(\"offset\"));\n                if (stopOffset > offset) {\n                    this.node.insertBefore(stop, stops[i].node);\n                    inserted = true;\n                    break;\n                }\n            }\n            if (!inserted) {\n                this.node.appendChild(stop);\n            }\n            return this;\n        }\n        function GgetBBox() {\n            if (this.type == \"linearGradient\") {\n                var x1 = $(this.node, \"x1\") || 0,\n                    x2 = $(this.node, \"x2\") || 1,\n                    y1 = $(this.node, \"y1\") || 0,\n                    y2 = $(this.node, \"y2\") || 0;\n                return Snap._.box(x1, y1, math.abs(x2 - x1), math.abs(y2 - y1));\n            } else {\n                var cx = this.node.cx || .5,\n                    cy = this.node.cy || .5,\n                    r = this.node.r || 0;\n                return Snap._.box(cx - r, cy - r, r * 2, r * 2);\n            }\n        }\n        /*\\\n         * Element.setStops\n         [ method ]\n         **\n         * Only for gradients!\n         * Updates stops of the gradient based on passed gradient descriptor. See @Ppaer.gradient\n         - str (string) gradient descriptor part after `()`.\n         = (object) gradient element\n         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n         | g.setStops(\"#fff-#000-#f00-#fc0\");\n        \\*/\n        function GsetStops(str) {\n            var grad = str,\n                stops = this.stops();\n            if (typeof str == \"string\") {\n                grad = eve(\"snap.util.grad.parse\", null, \"l(0,0,0,1)\" + str).firstDefined().stops;\n            }\n            if (!Snap.is(grad, \"array\")) {\n                return;\n            }\n            for (var i = 0; i < stops.length; i++) {\n                if (grad[i]) {\n                    var color = Snap.color(grad[i].color),\n                        attr = {\"offset\": grad[i].offset + \"%\"};\n                    attr[\"stop-color\"] = color.hex;\n                    if (color.opacity < 1) {\n                        attr[\"stop-opacity\"] = color.opacity;\n                    }\n                    stops[i].attr(attr);\n                } else {\n                    stops[i].remove();\n                }\n            }\n            for (i = stops.length; i < grad.length; i++) {\n                this.addStop(grad[i].color, grad[i].offset);\n            }\n            return this;\n        }\n        function gradient(defs, str) {\n            var grad = eve(\"snap.util.grad.parse\", null, str).firstDefined(),\n                el;\n            if (!grad) {\n                return null;\n            }\n            grad.params.unshift(defs);\n            if (grad.type.toLowerCase() == \"l\") {\n                el = gradientLinear.apply(0, grad.params);\n            } else {\n                el = gradientRadial.apply(0, grad.params);\n            }\n            if (grad.type != grad.type.toLowerCase()) {\n                $(el.node, {\n                    gradientUnits: \"userSpaceOnUse\"\n                });\n            }\n            var stops = grad.stops,\n                len = stops.length;\n            for (var i = 0; i < len; i++) {\n                var stop = stops[i];\n                el.addStop(stop.color, stop.offset);\n            }\n            return el;\n        }\n        function gradientLinear(defs, x1, y1, x2, y2) {\n            var el = Snap._.make(\"linearGradient\", defs);\n            el.stops = Gstops;\n            el.addStop = GaddStop;\n            el.getBBox = GgetBBox;\n            el.setStops = GsetStops;\n            if (x1 != null) {\n                $(el.node, {\n                    x1: x1,\n                    y1: y1,\n                    x2: x2,\n                    y2: y2\n                });\n            }\n            return el;\n        }\n        function gradientRadial(defs, cx, cy, r, fx, fy) {\n            var el = Snap._.make(\"radialGradient\", defs);\n            el.stops = Gstops;\n            el.addStop = GaddStop;\n            el.getBBox = GgetBBox;\n            if (cx != null) {\n                $(el.node, {\n                    cx: cx,\n                    cy: cy,\n                    r: r\n                });\n            }\n            if (fx != null && fy != null) {\n                $(el.node, {\n                    fx: fx,\n                    fy: fy\n                });\n            }\n            return el;\n        }\n        /*\\\n         * Paper.gradient\n         [ method ]\n         **\n         * Creates a gradient element\n         **\n         - gradient (string) gradient descriptor\n         > Gradient Descriptor\n         * The gradient descriptor is an expression formatted as\n         * follows: `<type>(<coords>)<colors>`.  The `<type>` can be\n         * either linear or radial.  The uppercase `L` or `R` letters\n         * indicate absolute coordinates offset from the SVG surface.\n         * Lowercase `l` or `r` letters indicate coordinates\n         * calculated relative to the element to which the gradient is\n         * applied.  Coordinates specify a linear gradient vector as\n         * `x1`, `y1`, `x2`, `y2`, or a radial gradient as `cx`, `cy`,\n         * `r` and optional `fx`, `fy` specifying a focal point away\n         * from the center of the circle. Specify `<colors>` as a list\n         * of dash-separated CSS color values.  Each color may be\n         * followed by a custom offset value, separated with a colon\n         * character.\n         > Examples\n         * Linear gradient, relative from top-left corner to bottom-right\n         * corner, from black through red to white:\n         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n         * Linear gradient, absolute from (0, 0) to (100, 100), from black\n         * through red at 25% to white:\n         | var g = paper.gradient(\"L(0, 0, 100, 100)#000-#f00:25-#fff\");\n         * Radial gradient, relative from the center of the element with radius\n         * half the width, from black to white:\n         | var g = paper.gradient(\"r(0.5, 0.5, 0.5)#000-#fff\");\n         * To apply the gradient:\n         | paper.circle(50, 50, 40).attr({\n         |     fill: g\n         | });\n         = (object) the `gradient` element\n        \\*/\n        proto.gradient = function (str) {\n            return gradient(this.defs, str);\n        };\n        proto.gradientLinear = function (x1, y1, x2, y2) {\n            return gradientLinear(this.defs, x1, y1, x2, y2);\n        };\n        proto.gradientRadial = function (cx, cy, r, fx, fy) {\n            return gradientRadial(this.defs, cx, cy, r, fx, fy);\n        };\n        /*\\\n         * Paper.toString\n         [ method ]\n         **\n         * Returns SVG code for the @Paper\n         = (string) SVG code for the @Paper\n        \\*/\n        proto.toString = function () {\n            var doc = this.node.ownerDocument,\n                f = doc.createDocumentFragment(),\n                d = doc.createElement(\"div\"),\n                svg = this.node.cloneNode(true),\n                res;\n            f.appendChild(d);\n            d.appendChild(svg);\n            Snap._.$(svg, {xmlns: \"http://www.w3.org/2000/svg\"});\n            res = d.innerHTML;\n            f.removeChild(f.firstChild);\n            return res;\n        };\n        /*\\\n         * Paper.toDataURL\n         [ method ]\n         **\n         * Returns SVG code for the @Paper as Data URI string.\n         = (string) Data URI string\n        \\*/\n        proto.toDataURL = function () {\n            if (window && window.btoa) {\n                return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(this)));\n            }\n        };\n        /*\\\n         * Paper.clear\n         [ method ]\n         **\n         * Removes all child nodes of the paper, except <defs>.\n        \\*/\n        proto.clear = function () {\n            var node = this.node.firstChild,\n                next;\n            while (node) {\n                next = node.nextSibling;\n                if (node.tagName != \"defs\") {\n                    node.parentNode.removeChild(node);\n                } else {\n                    proto.clear.call({node: node});\n                }\n                node = next;\n            }\n        };\n    }());\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        clone = Snap._.clone,\n        has = \"hasOwnProperty\",\n        p2s = /,?([a-z]),?/gi,\n        toFloat = parseFloat,\n        math = Math,\n        PI = math.PI,\n        mmin = math.min,\n        mmax = math.max,\n        pow = math.pow,\n        abs = math.abs;\n    function paths(ps) {\n        var p = paths.ps = paths.ps || {};\n        if (p[ps]) {\n            p[ps].sleep = 100;\n        } else {\n            p[ps] = {\n                sleep: 100\n            };\n        }\n        setTimeout(function () {\n            for (var key in p) if (p[has](key) && key != ps) {\n                p[key].sleep--;\n                !p[key].sleep && delete p[key];\n            }\n        });\n        return p[ps];\n    }\n    function box(x, y, width, height) {\n        if (x == null) {\n            x = y = width = height = 0;\n        }\n        if (y == null) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            x = x.x;\n        }\n        return {\n            x: x,\n            y: y,\n            width: width,\n            w: width,\n            height: height,\n            h: height,\n            x2: x + width,\n            y2: y + height,\n            cx: x + width / 2,\n            cy: y + height / 2,\n            r1: math.min(width, height) / 2,\n            r2: math.max(width, height) / 2,\n            r0: math.sqrt(width * width + height * height) / 2,\n            path: rectPath(x, y, width, height),\n            vb: [x, y, width, height].join(\" \")\n        };\n    }\n    function toString() {\n        return this.join(\",\").replace(p2s, \"$1\");\n    }\n    function pathClone(pathArray) {\n        var res = clone(pathArray);\n        res.toString = toString;\n        return res;\n    }\n    function getPointAtSegmentLength(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length) {\n        if (length == null) {\n            return bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y);\n        } else {\n            return findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y,\n                getTotLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length));\n        }\n    }\n    function getLengthFactory(istotal, subpath) {\n        function O(val) {\n            return +(+val).toFixed(3);\n        }\n        return Snap._.cacher(function (path, length, onlystart) {\n            if (path instanceof Element) {\n                path = path.attr(\"d\");\n            }\n            path = path2curve(path);\n            var x, y, p, l, sp = \"\", subpaths = {}, point,\n                len = 0;\n            for (var i = 0, ii = path.length; i < ii; i++) {\n                p = path[i];\n                if (p[0] == \"M\") {\n                    x = +p[1];\n                    y = +p[2];\n                } else {\n                    l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                    if (len + l > length) {\n                        if (subpath && !subpaths.start) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            sp += [\n                                \"C\" + O(point.start.x),\n                                O(point.start.y),\n                                O(point.m.x),\n                                O(point.m.y),\n                                O(point.x),\n                                O(point.y)\n                            ];\n                            if (onlystart) {return sp;}\n                            subpaths.start = sp;\n                            sp = [\n                                \"M\" + O(point.x),\n                                O(point.y) + \"C\" + O(point.n.x),\n                                O(point.n.y),\n                                O(point.end.x),\n                                O(point.end.y),\n                                O(p[5]),\n                                O(p[6])\n                            ].join();\n                            len += l;\n                            x = +p[5];\n                            y = +p[6];\n                            continue;\n                        }\n                        if (!istotal && !subpath) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            return point;\n                        }\n                    }\n                    len += l;\n                    x = +p[5];\n                    y = +p[6];\n                }\n                sp += p.shift() + p;\n            }\n            subpaths.end = sp;\n            point = istotal ? len : subpath ? subpaths : findDotsAtSegment(x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);\n            return point;\n        }, null, Snap._.clone);\n    }\n    var getTotalLength = getLengthFactory(1),\n        getPointAtLength = getLengthFactory(),\n        getSubpathsAtLength = getLengthFactory(0, 1);\n    function findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t,\n            t13 = pow(t1, 3),\n            t12 = pow(t1, 2),\n            t2 = t * t,\n            t3 = t2 * t,\n            x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\n            y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\n            mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\n            my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\n            nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\n            ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\n            ax = t1 * p1x + t * c1x,\n            ay = t1 * p1y + t * c1y,\n            cx = t1 * c2x + t * p2x,\n            cy = t1 * c2y + t * p2y,\n            alpha = 90 - math.atan2(mx - nx, my - ny) * 180 / PI;\n        // (mx > nx || my < ny) && (alpha += 180);\n        return {\n            x: x,\n            y: y,\n            m: {x: mx, y: my},\n            n: {x: nx, y: ny},\n            start: {x: ax, y: ay},\n            end: {x: cx, y: cy},\n            alpha: alpha\n        };\n    }\n    function bezierBBox(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n        if (!Snap.is(p1x, \"array\")) {\n            p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\n        }\n        var bbox = curveDim.apply(null, p1x);\n        return box(\n            bbox.min.x,\n            bbox.min.y,\n            bbox.max.x - bbox.min.x,\n            bbox.max.y - bbox.min.y\n        );\n    }\n    function isPointInsideBBox(bbox, x, y) {\n        return  x >= bbox.x &&\n                x <= bbox.x + bbox.width &&\n                y >= bbox.y &&\n                y <= bbox.y + bbox.height;\n    }\n    function isBBoxIntersect(bbox1, bbox2) {\n        bbox1 = box(bbox1);\n        bbox2 = box(bbox2);\n        return isPointInsideBBox(bbox2, bbox1.x, bbox1.y)\n            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y)\n            || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2)\n            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2)\n            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y)\n            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y)\n            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2)\n            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2)\n            || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x\n                || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x)\n            && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y\n                || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n    }\n    function base3(t, p1, p2, p3, p4) {\n        var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\n            t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n        return t * t2 - 3 * p1 + 3 * p2;\n    }\n    function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n        if (z == null) {\n            z = 1;\n        }\n        z = z > 1 ? 1 : z < 0 ? 0 : z;\n        var z2 = z / 2,\n            n = 12,\n            Tvalues = [-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],\n            Cvalues = [0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],\n            sum = 0;\n        for (var i = 0; i < n; i++) {\n            var ct = z2 * Tvalues[i] + z2,\n                xbase = base3(ct, x1, x2, x3, x4),\n                ybase = base3(ct, y1, y2, y3, y4),\n                comb = xbase * xbase + ybase * ybase;\n            sum += Cvalues[i] * math.sqrt(comb);\n        }\n        return z2 * sum;\n    }\n    function getTotLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {\n        if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {\n            return;\n        }\n        var t = 1,\n            step = t / 2,\n            t2 = t - step,\n            l,\n            e = .01;\n        l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        while (abs(l - ll) > e) {\n            step /= 2;\n            t2 += (l < ll ? 1 : -1) * step;\n            l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        }\n        return t2;\n    }\n    function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n        if (\n            mmax(x1, x2) < mmin(x3, x4) ||\n            mmin(x1, x2) > mmax(x3, x4) ||\n            mmax(y1, y2) < mmin(y3, y4) ||\n            mmin(y1, y2) > mmax(y3, y4)\n        ) {\n            return;\n        }\n        var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n            ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n            denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n        if (!denominator) {\n            return;\n        }\n        var px = nx / denominator,\n            py = ny / denominator,\n            px2 = +px.toFixed(2),\n            py2 = +py.toFixed(2);\n        if (\n            px2 < +mmin(x1, x2).toFixed(2) ||\n            px2 > +mmax(x1, x2).toFixed(2) ||\n            px2 < +mmin(x3, x4).toFixed(2) ||\n            px2 > +mmax(x3, x4).toFixed(2) ||\n            py2 < +mmin(y1, y2).toFixed(2) ||\n            py2 > +mmax(y1, y2).toFixed(2) ||\n            py2 < +mmin(y3, y4).toFixed(2) ||\n            py2 > +mmax(y3, y4).toFixed(2)\n        ) {\n            return;\n        }\n        return {x: px, y: py};\n    }\n    function inter(bez1, bez2) {\n        return interHelper(bez1, bez2);\n    }\n    function interCount(bez1, bez2) {\n        return interHelper(bez1, bez2, 1);\n    }\n    function interHelper(bez1, bez2, justCount) {\n        var bbox1 = bezierBBox(bez1),\n            bbox2 = bezierBBox(bez2);\n        if (!isBBoxIntersect(bbox1, bbox2)) {\n            return justCount ? 0 : [];\n        }\n        var l1 = bezlen.apply(0, bez1),\n            l2 = bezlen.apply(0, bez2),\n            n1 = ~~(l1 / 8),\n            n2 = ~~(l2 / 8),\n            dots1 = [],\n            dots2 = [],\n            xy = {},\n            res = justCount ? 0 : [];\n        for (var i = 0; i < n1 + 1; i++) {\n            var p = findDotsAtSegment.apply(0, bez1.concat(i / n1));\n            dots1.push({x: p.x, y: p.y, t: i / n1});\n        }\n        for (i = 0; i < n2 + 1; i++) {\n            p = findDotsAtSegment.apply(0, bez2.concat(i / n2));\n            dots2.push({x: p.x, y: p.y, t: i / n2});\n        }\n        for (i = 0; i < n1; i++) {\n            for (var j = 0; j < n2; j++) {\n                var di = dots1[i],\n                    di1 = dots1[i + 1],\n                    dj = dots2[j],\n                    dj1 = dots2[j + 1],\n                    ci = abs(di1.x - di.x) < .001 ? \"y\" : \"x\",\n                    cj = abs(dj1.x - dj.x) < .001 ? \"y\" : \"x\",\n                    is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\n                if (is) {\n                    if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\n                        continue;\n                    }\n                    xy[is.x.toFixed(4)] = is.y.toFixed(4);\n                    var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\n                        t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n                    if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\n                        if (justCount) {\n                            res++;\n                        } else {\n                            res.push({\n                                x: is.x,\n                                y: is.y,\n                                t1: t1,\n                                t2: t2\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    function pathIntersection(path1, path2) {\n        return interPathHelper(path1, path2);\n    }\n    function pathIntersectionNumber(path1, path2) {\n        return interPathHelper(path1, path2, 1);\n    }\n    function interPathHelper(path1, path2, justCount) {\n        path1 = path2curve(path1);\n        path2 = path2curve(path2);\n        var x1, y1, x2, y2, x1m, y1m, x2m, y2m, bez1, bez2,\n            res = justCount ? 0 : [];\n        for (var i = 0, ii = path1.length; i < ii; i++) {\n            var pi = path1[i];\n            if (pi[0] == \"M\") {\n                x1 = x1m = pi[1];\n                y1 = y1m = pi[2];\n            } else {\n                if (pi[0] == \"C\") {\n                    bez1 = [x1, y1].concat(pi.slice(1));\n                    x1 = bez1[6];\n                    y1 = bez1[7];\n                } else {\n                    bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n                    x1 = x1m;\n                    y1 = y1m;\n                }\n                for (var j = 0, jj = path2.length; j < jj; j++) {\n                    var pj = path2[j];\n                    if (pj[0] == \"M\") {\n                        x2 = x2m = pj[1];\n                        y2 = y2m = pj[2];\n                    } else {\n                        if (pj[0] == \"C\") {\n                            bez2 = [x2, y2].concat(pj.slice(1));\n                            x2 = bez2[6];\n                            y2 = bez2[7];\n                        } else {\n                            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n                            x2 = x2m;\n                            y2 = y2m;\n                        }\n                        var intr = interHelper(bez1, bez2, justCount);\n                        if (justCount) {\n                            res += intr;\n                        } else {\n                            for (var k = 0, kk = intr.length; k < kk; k++) {\n                                intr[k].segment1 = i;\n                                intr[k].segment2 = j;\n                                intr[k].bez1 = bez1;\n                                intr[k].bez2 = bez2;\n                            }\n                            res = res.concat(intr);\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    function isPointInsidePath(path, x, y) {\n        var bbox = pathBBox(path);\n        return isPointInsideBBox(bbox, x, y) &&\n               interPathHelper(path, [[\"M\", x, y], [\"H\", bbox.x2 + 10]], 1) % 2 == 1;\n    }\n    function pathBBox(path) {\n        var pth = paths(path);\n        if (pth.bbox) {\n            return clone(pth.bbox);\n        }\n        if (!path) {\n            return box();\n        }\n        path = path2curve(path);\n        var x = 0,\n            y = 0,\n            X = [],\n            Y = [],\n            p;\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            p = path[i];\n            if (p[0] == \"M\") {\n                x = p[1];\n                y = p[2];\n                X.push(x);\n                Y.push(y);\n            } else {\n                var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                X = X.concat(dim.min.x, dim.max.x);\n                Y = Y.concat(dim.min.y, dim.max.y);\n                x = p[5];\n                y = p[6];\n            }\n        }\n        var xmin = mmin.apply(0, X),\n            ymin = mmin.apply(0, Y),\n            xmax = mmax.apply(0, X),\n            ymax = mmax.apply(0, Y),\n            bb = box(xmin, ymin, xmax - xmin, ymax - ymin);\n        pth.bbox = clone(bb);\n        return bb;\n    }\n    function rectPath(x, y, w, h, r) {\n        if (r) {\n            return [\n                [\"M\", +x + +r, y],\n                [\"l\", w - r * 2, 0],\n                [\"a\", r, r, 0, 0, 1, r, r],\n                [\"l\", 0, h - r * 2],\n                [\"a\", r, r, 0, 0, 1, -r, r],\n                [\"l\", r * 2 - w, 0],\n                [\"a\", r, r, 0, 0, 1, -r, -r],\n                [\"l\", 0, r * 2 - h],\n                [\"a\", r, r, 0, 0, 1, r, -r],\n                [\"z\"]\n            ];\n        }\n        var res = [[\"M\", x, y], [\"l\", w, 0], [\"l\", 0, h], [\"l\", -w, 0], [\"z\"]];\n        res.toString = toString;\n        return res;\n    }\n    function ellipsePath(x, y, rx, ry, a) {\n        if (a == null && ry == null) {\n            ry = rx;\n        }\n        x = +x;\n        y = +y;\n        rx = +rx;\n        ry = +ry;\n        if (a != null) {\n            var rad = Math.PI / 180,\n                x1 = x + rx * Math.cos(-ry * rad),\n                x2 = x + rx * Math.cos(-a * rad),\n                y1 = y + rx * Math.sin(-ry * rad),\n                y2 = y + rx * Math.sin(-a * rad),\n                res = [[\"M\", x1, y1], [\"A\", rx, rx, 0, +(a - ry > 180), 0, x2, y2]];\n        } else {\n            res = [\n                [\"M\", x, y],\n                [\"m\", 0, -ry],\n                [\"a\", rx, ry, 0, 1, 1, 0, 2 * ry],\n                [\"a\", rx, ry, 0, 1, 1, 0, -2 * ry],\n                [\"z\"]\n            ];\n        }\n        res.toString = toString;\n        return res;\n    }\n    var unit2px = Snap._unit2px,\n        getPath = {\n        path: function (el) {\n            return el.attr(\"path\");\n        },\n        circle: function (el) {\n            var attr = unit2px(el);\n            return ellipsePath(attr.cx, attr.cy, attr.r);\n        },\n        ellipse: function (el) {\n            var attr = unit2px(el);\n            return ellipsePath(attr.cx || 0, attr.cy || 0, attr.rx, attr.ry);\n        },\n        rect: function (el) {\n            var attr = unit2px(el);\n            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height, attr.rx, attr.ry);\n        },\n        image: function (el) {\n            var attr = unit2px(el);\n            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height);\n        },\n        line: function (el) {\n            return \"M\" + [el.attr(\"x1\") || 0, el.attr(\"y1\") || 0, el.attr(\"x2\"), el.attr(\"y2\")];\n        },\n        polyline: function (el) {\n            return \"M\" + el.attr(\"points\");\n        },\n        polygon: function (el) {\n            return \"M\" + el.attr(\"points\") + \"z\";\n        },\n        deflt: function (el) {\n            var bbox = el.node.getBBox();\n            return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\n        }\n    };\n    function pathToRelative(pathArray) {\n        var pth = paths(pathArray),\n            lowerCase = String.prototype.toLowerCase;\n        if (pth.rel) {\n            return pathClone(pth.rel);\n        }\n        if (!Snap.is(pathArray, \"array\") || !Snap.is(pathArray && pathArray[0], \"array\")) {\n            pathArray = Snap.parsePathString(pathArray);\n        }\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0;\n        if (pathArray[0][0] == \"M\") {\n            x = pathArray[0][1];\n            y = pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res.push([\"M\", x, y]);\n        }\n        for (var i = start, ii = pathArray.length; i < ii; i++) {\n            var r = res[i] = [],\n                pa = pathArray[i];\n            if (pa[0] != lowerCase.call(pa[0])) {\n                r[0] = lowerCase.call(pa[0]);\n                switch (r[0]) {\n                    case \"a\":\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +(pa[6] - x).toFixed(3);\n                        r[7] = +(pa[7] - y).toFixed(3);\n                        break;\n                    case \"v\":\n                        r[1] = +(pa[1] - y).toFixed(3);\n                        break;\n                    case \"m\":\n                        mx = pa[1];\n                        my = pa[2];\n                    default:\n                        for (var j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +(pa[j] - (j % 2 ? x : y)).toFixed(3);\n                        }\n                }\n            } else {\n                r = res[i] = [];\n                if (pa[0] == \"m\") {\n                    mx = pa[1] + x;\n                    my = pa[2] + y;\n                }\n                for (var k = 0, kk = pa.length; k < kk; k++) {\n                    res[i][k] = pa[k];\n                }\n            }\n            var len = res[i].length;\n            switch (res[i][0]) {\n                case \"z\":\n                    x = mx;\n                    y = my;\n                    break;\n                case \"h\":\n                    x += +res[i][len - 1];\n                    break;\n                case \"v\":\n                    y += +res[i][len - 1];\n                    break;\n                default:\n                    x += +res[i][len - 2];\n                    y += +res[i][len - 1];\n            }\n        }\n        res.toString = toString;\n        pth.rel = pathClone(res);\n        return res;\n    }\n    function pathToAbsolute(pathArray) {\n        var pth = paths(pathArray);\n        if (pth.abs) {\n            return pathClone(pth.abs);\n        }\n        if (!is(pathArray, \"array\") || !is(pathArray && pathArray[0], \"array\")) { // rough assumption\n            pathArray = Snap.parsePathString(pathArray);\n        }\n        if (!pathArray || !pathArray.length) {\n            return [[\"M\", 0, 0]];\n        }\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0,\n            pa0;\n        if (pathArray[0][0] == \"M\") {\n            x = +pathArray[0][1];\n            y = +pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res[0] = [\"M\", x, y];\n        }\n        var crz = pathArray.length == 3 &&\n            pathArray[0][0] == \"M\" &&\n            pathArray[1][0].toUpperCase() == \"R\" &&\n            pathArray[2][0].toUpperCase() == \"Z\";\n        for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n            res.push(r = []);\n            pa = pathArray[i];\n            pa0 = pa[0];\n            if (pa0 != pa0.toUpperCase()) {\n                r[0] = pa0.toUpperCase();\n                switch (r[0]) {\n                    case \"A\":\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +pa[6] + x;\n                        r[7] = +pa[7] + y;\n                        break;\n                    case \"V\":\n                        r[1] = +pa[1] + y;\n                        break;\n                    case \"H\":\n                        r[1] = +pa[1] + x;\n                        break;\n                    case \"R\":\n                        var dots = [x, y].concat(pa.slice(1));\n                        for (var j = 2, jj = dots.length; j < jj; j++) {\n                            dots[j] = +dots[j] + x;\n                            dots[++j] = +dots[j] + y;\n                        }\n                        res.pop();\n                        res = res.concat(catmullRom2bezier(dots, crz));\n                        break;\n                    case \"O\":\n                        res.pop();\n                        dots = ellipsePath(x, y, pa[1], pa[2]);\n                        dots.push(dots[0]);\n                        res = res.concat(dots);\n                        break;\n                    case \"U\":\n                        res.pop();\n                        res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                        r = [\"U\"].concat(res[res.length - 1].slice(-2));\n                        break;\n                    case \"M\":\n                        mx = +pa[1] + x;\n                        my = +pa[2] + y;\n                    default:\n                        for (j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +pa[j] + (j % 2 ? x : y);\n                        }\n                }\n            } else if (pa0 == \"R\") {\n                dots = [x, y].concat(pa.slice(1));\n                res.pop();\n                res = res.concat(catmullRom2bezier(dots, crz));\n                r = [\"R\"].concat(pa.slice(-2));\n            } else if (pa0 == \"O\") {\n                res.pop();\n                dots = ellipsePath(x, y, pa[1], pa[2]);\n                dots.push(dots[0]);\n                res = res.concat(dots);\n            } else if (pa0 == \"U\") {\n                res.pop();\n                res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                r = [\"U\"].concat(res[res.length - 1].slice(-2));\n            } else {\n                for (var k = 0, kk = pa.length; k < kk; k++) {\n                    r[k] = pa[k];\n                }\n            }\n            pa0 = pa0.toUpperCase();\n            if (pa0 != \"O\") {\n                switch (r[0]) {\n                    case \"Z\":\n                        x = +mx;\n                        y = +my;\n                        break;\n                    case \"H\":\n                        x = r[1];\n                        break;\n                    case \"V\":\n                        y = r[1];\n                        break;\n                    case \"M\":\n                        mx = r[r.length - 2];\n                        my = r[r.length - 1];\n                    default:\n                        x = r[r.length - 2];\n                        y = r[r.length - 1];\n                }\n            }\n        }\n        res.toString = toString;\n        pth.abs = pathClone(res);\n        return res;\n    }\n    function l2c(x1, y1, x2, y2) {\n        return [x1, y1, x2, y2, x2, y2];\n    }\n    function q2c(x1, y1, ax, ay, x2, y2) {\n        var _13 = 1 / 3,\n            _23 = 2 / 3;\n        return [\n                _13 * x1 + _23 * ax,\n                _13 * y1 + _23 * ay,\n                _13 * x2 + _23 * ax,\n                _13 * y2 + _23 * ay,\n                x2,\n                y2\n            ];\n    }\n    function a2c(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n        // for more information of where this math came from visit:\n        // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n        var _120 = PI * 120 / 180,\n            rad = PI / 180 * (+angle || 0),\n            res = [],\n            xy,\n            rotate = Snap._.cacher(function (x, y, rad) {\n                var X = x * math.cos(rad) - y * math.sin(rad),\n                    Y = x * math.sin(rad) + y * math.cos(rad);\n                return {x: X, y: Y};\n            });\n        if (!rx || !ry) {\n            return [x1, y1, x2, y2, x2, y2];\n        }\n        if (!recursive) {\n            xy = rotate(x1, y1, -rad);\n            x1 = xy.x;\n            y1 = xy.y;\n            xy = rotate(x2, y2, -rad);\n            x2 = xy.x;\n            y2 = xy.y;\n            var cos = math.cos(PI / 180 * angle),\n                sin = math.sin(PI / 180 * angle),\n                x = (x1 - x2) / 2,\n                y = (y1 - y2) / 2;\n            var h = x * x / (rx * rx) + y * y / (ry * ry);\n            if (h > 1) {\n                h = math.sqrt(h);\n                rx = h * rx;\n                ry = h * ry;\n            }\n            var rx2 = rx * rx,\n                ry2 = ry * ry,\n                k = (large_arc_flag == sweep_flag ? -1 : 1) *\n                    math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n                cx = k * rx * y / ry + (x1 + x2) / 2,\n                cy = k * -ry * x / rx + (y1 + y2) / 2,\n                f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\n                f2 = math.asin(((y2 - cy) / ry).toFixed(9));\n\n            f1 = x1 < cx ? PI - f1 : f1;\n            f2 = x2 < cx ? PI - f2 : f2;\n            f1 < 0 && (f1 = PI * 2 + f1);\n            f2 < 0 && (f2 = PI * 2 + f2);\n            if (sweep_flag && f1 > f2) {\n                f1 = f1 - PI * 2;\n            }\n            if (!sweep_flag && f2 > f1) {\n                f2 = f2 - PI * 2;\n            }\n        } else {\n            f1 = recursive[0];\n            f2 = recursive[1];\n            cx = recursive[2];\n            cy = recursive[3];\n        }\n        var df = f2 - f1;\n        if (abs(df) > _120) {\n            var f2old = f2,\n                x2old = x2,\n                y2old = y2;\n            f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n            x2 = cx + rx * math.cos(f2);\n            y2 = cy + ry * math.sin(f2);\n            res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n        }\n        df = f2 - f1;\n        var c1 = math.cos(f1),\n            s1 = math.sin(f1),\n            c2 = math.cos(f2),\n            s2 = math.sin(f2),\n            t = math.tan(df / 4),\n            hx = 4 / 3 * rx * t,\n            hy = 4 / 3 * ry * t,\n            m1 = [x1, y1],\n            m2 = [x1 + hx * s1, y1 - hy * c1],\n            m3 = [x2 + hx * s2, y2 - hy * c2],\n            m4 = [x2, y2];\n        m2[0] = 2 * m1[0] - m2[0];\n        m2[1] = 2 * m1[1] - m2[1];\n        if (recursive) {\n            return [m2, m3, m4].concat(res);\n        } else {\n            res = [m2, m3, m4].concat(res).join().split(\",\");\n            var newres = [];\n            for (var i = 0, ii = res.length; i < ii; i++) {\n                newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n            }\n            return newres;\n        }\n    }\n    function findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t;\n        return {\n            x: pow(t1, 3) * p1x + pow(t1, 2) * 3 * t * c1x + t1 * 3 * t * t * c2x + pow(t, 3) * p2x,\n            y: pow(t1, 3) * p1y + pow(t1, 2) * 3 * t * c1y + t1 * 3 * t * t * c2y + pow(t, 3) * p2y\n        };\n    }\n\n    // Returns bounding box of cubic bezier curve.\n    // Source: http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n    // Original version: NISHIO Hirokazu\n    // Modifications: https://github.com/timo22345\n    function curveDim(x0, y0, x1, y1, x2, y2, x3, y3) {\n        var tvalues = [],\n            bounds = [[], []],\n            a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n        for (var i = 0; i < 2; ++i) {\n            if (i == 0) {\n                b = 6 * x0 - 12 * x1 + 6 * x2;\n                a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n                c = 3 * x1 - 3 * x0;\n            } else {\n                b = 6 * y0 - 12 * y1 + 6 * y2;\n                a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n                c = 3 * y1 - 3 * y0;\n            }\n            if (abs(a) < 1e-12) {\n                if (abs(b) < 1e-12) {\n                    continue;\n                }\n                t = -c / b;\n                if (0 < t && t < 1) {\n                    tvalues.push(t);\n                }\n                continue;\n            }\n            b2ac = b * b - 4 * c * a;\n            sqrtb2ac = math.sqrt(b2ac);\n            if (b2ac < 0) {\n                continue;\n            }\n            t1 = (-b + sqrtb2ac) / (2 * a);\n            if (0 < t1 && t1 < 1) {\n                tvalues.push(t1);\n            }\n            t2 = (-b - sqrtb2ac) / (2 * a);\n            if (0 < t2 && t2 < 1) {\n                tvalues.push(t2);\n            }\n        }\n\n        var x, y, j = tvalues.length,\n            jlen = j,\n            mt;\n        while (j--) {\n            t = tvalues[j];\n            mt = 1 - t;\n            bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n            bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n        }\n\n        bounds[0][jlen] = x0;\n        bounds[1][jlen] = y0;\n        bounds[0][jlen + 1] = x3;\n        bounds[1][jlen + 1] = y3;\n        bounds[0].length = bounds[1].length = jlen + 2;\n\n\n        return {\n          min: {x: mmin.apply(0, bounds[0]), y: mmin.apply(0, bounds[1])},\n          max: {x: mmax.apply(0, bounds[0]), y: mmax.apply(0, bounds[1])}\n        };\n    }\n\n    function path2curve(path, path2) {\n        var pth = !path2 && paths(path);\n        if (!path2 && pth.curve) {\n            return pathClone(pth.curve);\n        }\n        var p = pathToAbsolute(path),\n            p2 = path2 && pathToAbsolute(path2),\n            attrs = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n            attrs2 = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n            processPath = function (path, d, pcom) {\n                var nx, ny;\n                if (!path) {\n                    return [\"C\", d.x, d.y, d.x, d.y, d.x, d.y];\n                }\n                !(path[0] in {T: 1, Q: 1}) && (d.qx = d.qy = null);\n                switch (path[0]) {\n                    case \"M\":\n                        d.X = path[1];\n                        d.Y = path[2];\n                        break;\n                    case \"A\":\n                        path = [\"C\"].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\n                        break;\n                    case \"S\":\n                        if (pcom == \"C\" || pcom == \"S\") { // In \"S\" case we have to take into account, if the previous command is C/S.\n                            nx = d.x * 2 - d.bx;          // And reflect the previous\n                            ny = d.y * 2 - d.by;          // command's control point relative to the current point.\n                        }\n                        else {                            // or some else or nothing\n                            nx = d.x;\n                            ny = d.y;\n                        }\n                        path = [\"C\", nx, ny].concat(path.slice(1));\n                        break;\n                    case \"T\":\n                        if (pcom == \"Q\" || pcom == \"T\") { // In \"T\" case we have to take into account, if the previous command is Q/T.\n                            d.qx = d.x * 2 - d.qx;        // And make a reflection similar\n                            d.qy = d.y * 2 - d.qy;        // to case \"S\".\n                        }\n                        else {                            // or something else or nothing\n                            d.qx = d.x;\n                            d.qy = d.y;\n                        }\n                        path = [\"C\"].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n                        break;\n                    case \"Q\":\n                        d.qx = path[1];\n                        d.qy = path[2];\n                        path = [\"C\"].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n                        break;\n                    case \"L\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], path[2]));\n                        break;\n                    case \"H\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], d.y));\n                        break;\n                    case \"V\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, d.x, path[1]));\n                        break;\n                    case \"Z\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, d.X, d.Y));\n                        break;\n                }\n                return path;\n            },\n            fixArc = function (pp, i) {\n                if (pp[i].length > 7) {\n                    pp[i].shift();\n                    var pi = pp[i];\n                    while (pi.length) {\n                        pcoms1[i] = \"A\"; // if created multiple C:s, their original seg is saved\n                        p2 && (pcoms2[i] = \"A\"); // the same as above\n                        pp.splice(i++, 0, [\"C\"].concat(pi.splice(0, 6)));\n                    }\n                    pp.splice(i, 1);\n                    ii = mmax(p.length, p2 && p2.length || 0);\n                }\n            },\n            fixM = function (path1, path2, a1, a2, i) {\n                if (path1 && path2 && path1[i][0] == \"M\" && path2[i][0] != \"M\") {\n                    path2.splice(i, 0, [\"M\", a2.x, a2.y]);\n                    a1.bx = 0;\n                    a1.by = 0;\n                    a1.x = path1[i][1];\n                    a1.y = path1[i][2];\n                    ii = mmax(p.length, p2 && p2.length || 0);\n                }\n            },\n            pcoms1 = [], // path commands of original path p\n            pcoms2 = [], // path commands of original path p2\n            pfirst = \"\", // temporary holder for original path command\n            pcom = \"\"; // holder for previous path command of original path\n        for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\n            p[i] && (pfirst = p[i][0]); // save current path command\n\n            if (pfirst != \"C\") // C is not saved yet, because it may be result of conversion\n            {\n                pcoms1[i] = pfirst; // Save current path command\n                i && ( pcom = pcoms1[i - 1]); // Get previous path command pcom\n            }\n            p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\n            if (pcoms1[i] != \"A\" && pfirst == \"C\") pcoms1[i] = \"C\"; // A is the only command\n            // which may produce multiple C:s\n            // so we have to make sure that C is also C in original path\n\n            fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\n            if (p2) { // the same procedures is done to p2\n                p2[i] && (pfirst = p2[i][0]);\n                if (pfirst != \"C\") {\n                    pcoms2[i] = pfirst;\n                    i && (pcom = pcoms2[i - 1]);\n                }\n                p2[i] = processPath(p2[i], attrs2, pcom);\n\n                if (pcoms2[i] != \"A\" && pfirst == \"C\") {\n                    pcoms2[i] = \"C\";\n                }\n\n                fixArc(p2, i);\n            }\n            fixM(p, p2, attrs, attrs2, i);\n            fixM(p2, p, attrs2, attrs, i);\n            var seg = p[i],\n                seg2 = p2 && p2[i],\n                seglen = seg.length,\n                seg2len = p2 && seg2.length;\n            attrs.x = seg[seglen - 2];\n            attrs.y = seg[seglen - 1];\n            attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\n            attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\n            attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\n            attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\n            attrs2.x = p2 && seg2[seg2len - 2];\n            attrs2.y = p2 && seg2[seg2len - 1];\n        }\n        if (!p2) {\n            pth.curve = pathClone(p);\n        }\n        return p2 ? [p, p2] : p;\n    }\n    function mapPath(path, matrix) {\n        if (!matrix) {\n            return path;\n        }\n        var x, y, i, j, ii, jj, pathi;\n        path = path2curve(path);\n        for (i = 0, ii = path.length; i < ii; i++) {\n            pathi = path[i];\n            for (j = 1, jj = pathi.length; j < jj; j += 2) {\n                x = matrix.x(pathi[j], pathi[j + 1]);\n                y = matrix.y(pathi[j], pathi[j + 1]);\n                pathi[j] = x;\n                pathi[j + 1] = y;\n            }\n        }\n        return path;\n    }\n\n    // http://schepers.cc/getting-to-the-point\n    function catmullRom2bezier(crp, z) {\n        var d = [];\n        for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n            var p = [\n                        {x: +crp[i - 2], y: +crp[i - 1]},\n                        {x: +crp[i],     y: +crp[i + 1]},\n                        {x: +crp[i + 2], y: +crp[i + 3]},\n                        {x: +crp[i + 4], y: +crp[i + 5]}\n                    ];\n            if (z) {\n                if (!i) {\n                    p[0] = {x: +crp[iLen - 2], y: +crp[iLen - 1]};\n                } else if (iLen - 4 == i) {\n                    p[3] = {x: +crp[0], y: +crp[1]};\n                } else if (iLen - 2 == i) {\n                    p[2] = {x: +crp[0], y: +crp[1]};\n                    p[3] = {x: +crp[2], y: +crp[3]};\n                }\n            } else {\n                if (iLen - 4 == i) {\n                    p[3] = p[2];\n                } else if (!i) {\n                    p[0] = {x: +crp[i], y: +crp[i + 1]};\n                }\n            }\n            d.push([\"C\",\n                  (-p[0].x + 6 * p[1].x + p[2].x) / 6,\n                  (-p[0].y + 6 * p[1].y + p[2].y) / 6,\n                  (p[1].x + 6 * p[2].x - p[3].x) / 6,\n                  (p[1].y + 6*p[2].y - p[3].y) / 6,\n                  p[2].x,\n                  p[2].y\n            ]);\n        }\n\n        return d;\n    }\n\n    // export\n    Snap.path = paths;\n\n    /*\\\n     * Snap.path.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the given path in pixels\n     **\n     - path (string) SVG path string\n     **\n     = (number) length\n    \\*/\n    Snap.path.getTotalLength = getTotalLength;\n    /*\\\n     * Snap.path.getPointAtLength\n     [ method ]\n     **\n     * Returns the coordinates of the point located at the given length along the given path\n     **\n     - path (string) SVG path string\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    Snap.path.getPointAtLength = getPointAtLength;\n    /*\\\n     * Snap.path.getSubpath\n     [ method ]\n     **\n     * Returns the subpath of a given path between given start and end lengths\n     **\n     - path (string) SVG path string\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    Snap.path.getSubpath = function (path, from, to) {\n        if (this.getTotalLength(path) - to < 1e-6) {\n            return getSubpathsAtLength(path, from).end;\n        }\n        var a = getSubpathsAtLength(path, to, 1);\n        return from ? getSubpathsAtLength(a, from).end : a;\n    };\n    /*\\\n     * Element.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the path in pixels (only works for `path` elements)\n     = (number) length\n    \\*/\n    elproto.getTotalLength = function () {\n        if (this.node.getTotalLength) {\n            return this.node.getTotalLength();\n        }\n    };\n    // SIERRA Element.getPointAtLength()/Element.getTotalLength(): If a <path> is broken into different segments, is the jump distance to the new coordinates set by the _M_ or _m_ commands calculated as part of the path's total length?\n    /*\\\n     * Element.getPointAtLength\n     [ method ]\n     **\n     * Returns coordinates of the point located at the given length on the given path (only works for `path` elements)\n     **\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    elproto.getPointAtLength = function (length) {\n        return getPointAtLength(this.attr(\"d\"), length);\n    };\n    // SIERRA Element.getSubpath(): Similar to the problem for Element.getPointAtLength(). Unclear how this would work for a segmented path. Overall, the concept of _subpath_ and what I'm calling a _segment_ (series of non-_M_ or _Z_ commands) is unclear.\n    /*\\\n     * Element.getSubpath\n     [ method ]\n     **\n     * Returns subpath of a given element from given start and end lengths (only works for `path` elements)\n     **\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    elproto.getSubpath = function (from, to) {\n        return Snap.path.getSubpath(this.attr(\"d\"), from, to);\n    };\n    Snap._.box = box;\n    /*\\\n     * Snap.path.findDotsAtSegment\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds dot coordinates on the given cubic beziér curve at the given t\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     - t (number) position on the curve (0..1)\n     = (object) point information in format:\n     o {\n     o     x: (number) x coordinate of the point,\n     o     y: (number) y coordinate of the point,\n     o     m: {\n     o         x: (number) x coordinate of the left anchor,\n     o         y: (number) y coordinate of the left anchor\n     o     },\n     o     n: {\n     o         x: (number) x coordinate of the right anchor,\n     o         y: (number) y coordinate of the right anchor\n     o     },\n     o     start: {\n     o         x: (number) x coordinate of the start of the curve,\n     o         y: (number) y coordinate of the start of the curve\n     o     },\n     o     end: {\n     o         x: (number) x coordinate of the end of the curve,\n     o         y: (number) y coordinate of the end of the curve\n     o     },\n     o     alpha: (number) angle of the curve derivative at the point\n     o }\n    \\*/\n    Snap.path.findDotsAtSegment = findDotsAtSegment;\n    /*\\\n     * Snap.path.bezierBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given cubic beziér curve\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     * or\n     - bez (array) array of six points for beziér curve\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.bezierBBox = bezierBBox;\n    /*\\\n     * Snap.path.isPointInsideBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside bounding box\n     - bbox (string) bounding box\n     - x (string) x coordinate of the point\n     - y (string) y coordinate of the point\n     = (boolean) `true` if point is inside\n    \\*/\n    Snap.path.isPointInsideBBox = isPointInsideBBox;\n    Snap.closest = function (x, y, X, Y) {\n        var r = 100,\n            b = box(x - r / 2, y - r / 2, r, r),\n            inside = [],\n            getter = X[0].hasOwnProperty(\"x\") ? function (i) {\n                return {\n                    x: X[i].x,\n                    y: X[i].y\n                };\n            } : function (i) {\n                return {\n                    x: X[i],\n                    y: Y[i]\n                };\n            },\n            found = 0;\n        while (r <= 1e6 && !found) {\n            for (var i = 0, ii = X.length; i < ii; i++) {\n                var xy = getter(i);\n                if (isPointInsideBBox(b, xy.x, xy.y)) {\n                    found++;\n                    inside.push(xy);\n                    break;\n                }\n            }\n            if (!found) {\n                r *= 2;\n                b = box(x - r / 2, y - r / 2, r, r)\n            }\n        }\n        if (r == 1e6) {\n            return;\n        }\n        var len = Infinity,\n            res;\n        for (i = 0, ii = inside.length; i < ii; i++) {\n            var l = Snap.len(x, y, inside[i].x, inside[i].y);\n            if (len > l) {\n                len = l;\n                inside[i].len = l;\n                res = inside[i];\n            }\n        }\n        return res;\n    };\n    /*\\\n     * Snap.path.isBBoxIntersect\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if two bounding boxes intersect\n     - bbox1 (string) first bounding box\n     - bbox2 (string) second bounding box\n     = (boolean) `true` if bounding boxes intersect\n    \\*/\n    Snap.path.isBBoxIntersect = isBBoxIntersect;\n    /*\\\n     * Snap.path.intersection\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds intersections of two paths\n     - path1 (string) path string\n     - path2 (string) path string\n     = (array) dots of intersection\n     o [\n     o     {\n     o         x: (number) x coordinate of the point,\n     o         y: (number) y coordinate of the point,\n     o         t1: (number) t value for segment of path1,\n     o         t2: (number) t value for segment of path2,\n     o         segment1: (number) order number for segment of path1,\n     o         segment2: (number) order number for segment of path2,\n     o         bez1: (array) eight coordinates representing beziér curve for the segment of path1,\n     o         bez2: (array) eight coordinates representing beziér curve for the segment of path2\n     o     }\n     o ]\n    \\*/\n    Snap.path.intersection = pathIntersection;\n    Snap.path.intersectionNumber = pathIntersectionNumber;\n    /*\\\n     * Snap.path.isPointInside\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside a given closed path.\n     *\n     * Note: fill mode doesn’t affect the result of this method.\n     - path (string) path string\n     - x (number) x of the point\n     - y (number) y of the point\n     = (boolean) `true` if point is inside the path\n    \\*/\n    Snap.path.isPointInside = isPointInsidePath;\n    /*\\\n     * Snap.path.getBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given path\n     - path (string) path string\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.getBBox = pathBBox;\n    Snap.path.get = getPath;\n    /*\\\n     * Snap.path.toRelative\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into relative values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toRelative = pathToRelative;\n    /*\\\n     * Snap.path.toAbsolute\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into absolute values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toAbsolute = pathToAbsolute;\n    /*\\\n     * Snap.path.toCubic\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path to a new path where all segments are cubic beziér curves\n     - pathString (string|array) path string or array of segments\n     = (array) array of segments\n    \\*/\n    Snap.path.toCubic = path2curve;\n    /*\\\n     * Snap.path.map\n     [ method ]\n     **\n     * Transform the path string with the given matrix\n     - path (string) path string\n     - matrix (object) see @Matrix\n     = (string) transformed path string\n    \\*/\n    Snap.path.map = mapPath;\n    Snap.path.toString = toString;\n    Snap.path.clone = pathClone;\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var mmax = Math.max,\n        mmin = Math.min;\n\n    // Set\n    var Set = function (items) {\n        this.items = [];\n\tthis.bindings = {};\n        this.length = 0;\n        this.type = \"set\";\n        if (items) {\n            for (var i = 0, ii = items.length; i < ii; i++) {\n                if (items[i]) {\n                    this[this.items.length] = this.items[this.items.length] = items[i];\n                    this.length++;\n                }\n            }\n        }\n    },\n    setproto = Set.prototype;\n    /*\\\n     * Set.push\n     [ method ]\n     **\n     * Adds each argument to the current set\n     = (object) original element\n    \\*/\n    setproto.push = function () {\n        var item,\n            len;\n        for (var i = 0, ii = arguments.length; i < ii; i++) {\n            item = arguments[i];\n            if (item) {\n                len = this.items.length;\n                this[len] = this.items[len] = item;\n                this.length++;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.pop\n     [ method ]\n     **\n     * Removes last element and returns it\n     = (object) element\n    \\*/\n    setproto.pop = function () {\n        this.length && delete this[this.length--];\n        return this.items.pop();\n    };\n    /*\\\n     * Set.forEach\n     [ method ]\n     **\n     * Executes given function for each element in the set\n     *\n     * If the function returns `false`, the loop stops running.\n     **\n     - callback (function) function to run\n     - thisArg (object) context object for the callback\n     = (object) Set object\n    \\*/\n    setproto.forEach = function (callback, thisArg) {\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            if (callback.call(thisArg, this.items[i], i) === false) {\n                return this;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.animate\n     [ method ]\n     **\n     * Animates each element in set in sync.\n     *\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     * or\n     - animation (array) array of animation parameter for each element in set in format `[attrs, duration, easing, callback]`\n     > Usage\n     | // animate all elements in set to radius 10\n     | set.animate({r: 10}, 500, mina.easein);\n     | // or\n     | // animate first element to radius 10, but second to radius 20 and in different time\n     | set.animate([{r: 10}, 500, mina.easein], [{r: 20}, 1500, mina.easein]);\n     = (Element) the current element\n    \\*/\n    setproto.animate = function (attrs, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        if (attrs instanceof Snap._.Animation) {\n            callback = attrs.callback;\n            easing = attrs.easing;\n            ms = easing.dur;\n            attrs = attrs.attr;\n        }\n        var args = arguments;\n        if (Snap.is(attrs, \"array\") && Snap.is(args[args.length - 1], \"array\")) {\n            var each = true;\n        }\n        var begin,\n            handler = function () {\n                if (begin) {\n                    this.b = begin;\n                } else {\n                    begin = this.b;\n                }\n            },\n            cb = 0,\n            set = this,\n            callbacker = callback && function () {\n                if (++cb == set.length) {\n                    callback.call(this);\n                }\n            };\n        return this.forEach(function (el, i) {\n            eve.once(\"snap.animcreated.\" + el.id, handler);\n            if (each) {\n                args[i] && el.animate.apply(el, args[i]);\n            } else {\n                el.animate(attrs, ms, easing, callbacker);\n            }\n        });\n    };\n    /*\\\n     * Set.remove\n     [ method ]\n     **\n     * Removes all children of the set.\n     *\n     = (object) Set object\n    \\*/\n    setproto.remove = function () {\n        while (this.length) {\n            this.pop().remove();\n        }\n        return this;\n    };\n    /*\\\n     * Set.bind\n     [ method ]\n     **\n     * Specifies how to handle a specific attribute when applied\n     * to a set.\n     *\n     **\n     - attr (string) attribute name\n     - callback (function) function to run\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     - eattr (string) attribute on the element to bind the attribute to\n     = (object) Set object\n    \\*/\n    setproto.bind = function (attr, a, b) {\n        var data = {};\n        if (typeof a == \"function\") {\n            this.bindings[attr] = a;\n        } else {\n            var aname = b || attr;\n            this.bindings[attr] = function (v) {\n                data[aname] = v;\n                a.attr(data);\n            };\n        }\n        return this;\n    };\n    /*\\\n     * Set.attr\n     [ method ]\n     **\n     * Equivalent of @Element.attr.\n     = (object) Set object\n    \\*/\n    setproto.attr = function (value) {\n        var unbound = {};\n        for (var k in value) {\n            if (this.bindings[k]) {\n                this.bindings[k](value[k]);\n            } else {\n                unbound[k] = value[k];\n            }\n        }\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            this.items[i].attr(unbound);\n        }\n        return this;\n    };\n    /*\\\n     * Set.clear\n     [ method ]\n     **\n     * Removes all elements from the set\n    \\*/\n    setproto.clear = function () {\n        while (this.length) {\n            this.pop();\n        }\n    };\n    /*\\\n     * Set.splice\n     [ method ]\n     **\n     * Removes range of elements from the set\n     **\n     - index (number) position of the deletion\n     - count (number) number of element to remove\n     - insertion… (object) #optional elements to insert\n     = (object) set elements that were deleted\n    \\*/\n    setproto.splice = function (index, count, insertion) {\n        index = index < 0 ? mmax(this.length + index, 0) : index;\n        count = mmax(0, mmin(this.length - index, count));\n        var tail = [],\n            todel = [],\n            args = [],\n            i;\n        for (i = 2; i < arguments.length; i++) {\n            args.push(arguments[i]);\n        }\n        for (i = 0; i < count; i++) {\n            todel.push(this[index + i]);\n        }\n        for (; i < this.length - index; i++) {\n            tail.push(this[index + i]);\n        }\n        var arglen = args.length;\n        for (i = 0; i < arglen + tail.length; i++) {\n            this.items[index + i] = this[index + i] = i < arglen ? args[i] : tail[i - arglen];\n        }\n        i = this.items.length = this.length -= count - arglen;\n        while (this[i]) {\n            delete this[i++];\n        }\n        return new Set(todel);\n    };\n    /*\\\n     * Set.exclude\n     [ method ]\n     **\n     * Removes given element from the set\n     **\n     - element (object) element to remove\n     = (boolean) `true` if object was found and removed from the set\n    \\*/\n    setproto.exclude = function (el) {\n        for (var i = 0, ii = this.length; i < ii; i++) if (this[i] == el) {\n            this.splice(i, 1);\n            return true;\n        }\n        return false;\n    };\n    /*\\\n     * Set.insertAfter\n     [ method ]\n     **\n     * Inserts set elements after given element.\n     **\n     - element (object) set will be inserted after this element\n     = (object) Set object\n    \\*/\n    setproto.insertAfter = function (el) {\n        var i = this.items.length;\n        while (i--) {\n            this.items[i].insertAfter(el);\n        }\n        return this;\n    };\n    /*\\\n     * Set.getBBox\n     [ method ]\n     **\n     * Union of all bboxes of the set. See @Element.getBBox.\n     = (object) bounding box descriptor. See @Element.getBBox.\n    \\*/\n    setproto.getBBox = function () {\n        var x = [],\n            y = [],\n            x2 = [],\n            y2 = [];\n        for (var i = this.items.length; i--;) if (!this.items[i].removed) {\n            var box = this.items[i].getBBox();\n            x.push(box.x);\n            y.push(box.y);\n            x2.push(box.x + box.width);\n            y2.push(box.y + box.height);\n        }\n        x = mmin.apply(0, x);\n        y = mmin.apply(0, y);\n        x2 = mmax.apply(0, x2);\n        y2 = mmax.apply(0, y2);\n        return {\n            x: x,\n            y: y,\n            x2: x2,\n            y2: y2,\n            width: x2 - x,\n            height: y2 - y,\n            cx: x + (x2 - x) / 2,\n            cy: y + (y2 - y) / 2\n        };\n    };\n    /*\\\n     * Set.insertAfter\n     [ method ]\n     **\n     * Creates a clone of the set.\n     **\n     = (object) New Set object\n    \\*/\n    setproto.clone = function (s) {\n        s = new Set;\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            s.push(this.items[i].clone());\n        }\n        return s;\n    };\n    setproto.toString = function () {\n        return \"Snap\\u2018s set\";\n    };\n    setproto.type = \"set\";\n    // export\n    /*\\\n     * Snap.Set\n     [ property ]\n     **\n     * Set constructor.\n    \\*/\n    Snap.Set = Set;\n    /*\\\n     * Snap.set\n     [ method ]\n     **\n     * Creates a set and fills it with list of arguments.\n     **\n     = (object) New Set object\n     | var r = paper.rect(0, 0, 10, 10),\n     |     s1 = Snap.set(), // empty set\n     |     s2 = Snap.set(r, paper.circle(100, 100, 20)); // prefilled set\n    \\*/\n    Snap.set = function () {\n        var set = new Set;\n        if (arguments.length) {\n            set.push.apply(set, Array.prototype.slice.call(arguments, 0));\n        }\n        return set;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var names = {},\n        reUnit = /[%a-z]+$/i,\n        Str = String;\n    names.stroke = names.fill = \"colour\";\n    function getEmpty(item) {\n        var l = item[0];\n        switch (l.toLowerCase()) {\n            case \"t\": return [l, 0, 0];\n            case \"m\": return [l, 1, 0, 0, 1, 0, 0];\n            case \"r\": if (item.length == 4) {\n                return [l, 0, item[2], item[3]];\n            } else {\n                return [l, 0];\n            }\n            case \"s\": if (item.length == 5) {\n                return [l, 1, 1, item[3], item[4]];\n            } else if (item.length == 3) {\n                return [l, 1, 1];\n            } else {\n                return [l, 1];\n            }\n        }\n    }\n    function equaliseTransform(t1, t2, getBBox) {\n        t1 = t1 || new Snap.Matrix;\n        t2 = t2 || new Snap.Matrix;\n        t1 = Snap.parseTransformString(t1.toTransformString()) || [];\n        t2 = Snap.parseTransformString(t2.toTransformString()) || [];\n        var maxlength = Math.max(t1.length, t2.length),\n            from = [],\n            to = [],\n            i = 0, j, jj,\n            tt1, tt2;\n        for (; i < maxlength; i++) {\n            tt1 = t1[i] || getEmpty(t2[i]);\n            tt2 = t2[i] || getEmpty(tt1);\n            if (tt1[0] != tt2[0] ||\n                tt1[0].toLowerCase() == \"r\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3]) ||\n                tt1[0].toLowerCase() == \"s\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4])\n                ) {\n                    t1 = Snap._.transform2matrix(t1, getBBox());\n                    t2 = Snap._.transform2matrix(t2, getBBox());\n                    from = [[\"m\", t1.a, t1.b, t1.c, t1.d, t1.e, t1.f]];\n                    to = [[\"m\", t2.a, t2.b, t2.c, t2.d, t2.e, t2.f]];\n                    break;\n            }\n            from[i] = [];\n            to[i] = [];\n            for (j = 0, jj = Math.max(tt1.length, tt2.length); j < jj; j++) {\n                j in tt1 && (from[i][j] = tt1[j]);\n                j in tt2 && (to[i][j] = tt2[j]);\n            }\n        }\n        return {\n            from: path2array(from),\n            to: path2array(to),\n            f: getPath(from)\n        };\n    }\n    function getNumber(val) {\n        return val;\n    }\n    function getUnit(unit) {\n        return function (val) {\n            return +val.toFixed(3) + unit;\n        };\n    }\n    function getViewBox(val) {\n        return val.join(\" \");\n    }\n    function getColour(clr) {\n        return Snap.rgb(clr[0], clr[1], clr[2], clr[3]);\n    }\n    function getPath(path) {\n        var k = 0, i, ii, j, jj, out, a, b = [];\n        for (i = 0, ii = path.length; i < ii; i++) {\n            out = \"[\";\n            a = ['\"' + path[i][0] + '\"'];\n            for (j = 1, jj = path[i].length; j < jj; j++) {\n                a[j] = \"val[\" + k++ + \"]\";\n            }\n            out += a + \"]\";\n            b[i] = out;\n        }\n        return Function(\"val\", \"return Snap.path.toString.call([\" + b + \"])\");\n    }\n    function path2array(path) {\n        var out = [];\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            for (var j = 1, jj = path[i].length; j < jj; j++) {\n                out.push(path[i][j]);\n            }\n        }\n        return out;\n    }\n    function isNumeric(obj) {\n        return isFinite(obj);\n    }\n    function arrayEqual(arr1, arr2) {\n        if (!Snap.is(arr1, \"array\") || !Snap.is(arr2, \"array\")) {\n            return false;\n        }\n        return arr1.toString() == arr2.toString();\n    }\n    Element.prototype.equal = function (name, b) {\n        return eve(\"snap.util.equal\", this, name, b).firstDefined();\n    };\n    eve.on(\"snap.util.equal\", function (name, b) {\n        var A, B, a = Str(this.attr(name) || \"\"),\n            el = this;\n        if (names[name] == \"colour\") {\n            A = Snap.color(a);\n            B = Snap.color(b);\n            return {\n                from: [A.r, A.g, A.b, A.opacity],\n                to: [B.r, B.g, B.b, B.opacity],\n                f: getColour\n            };\n        }\n        if (name == \"viewBox\") {\n            A = this.attr(name).vb.split(\" \").map(Number);\n            B = b.split(\" \").map(Number);\n            return {\n                from: A,\n                to: B,\n                f: getViewBox\n            };\n        }\n        if (name == \"transform\" || name == \"gradientTransform\" || name == \"patternTransform\") {\n            if (typeof b == \"string\") {\n                b = Str(b).replace(/\\.{3}|\\u2026/g, a);\n            }\n            a = this.matrix;\n            if (!Snap._.rgTransform.test(b)) {\n                b = Snap._.transform2matrix(Snap._.svgTransform2string(b), this.getBBox());\n            } else {\n                b = Snap._.transform2matrix(b, this.getBBox());\n            }\n            return equaliseTransform(a, b, function () {\n                return el.getBBox(1);\n            });\n        }\n        if (name == \"d\" || name == \"path\") {\n            A = Snap.path.toCubic(a, b);\n            return {\n                from: path2array(A[0]),\n                to: path2array(A[1]),\n                f: getPath(A[0])\n            };\n        }\n        if (name == \"points\") {\n            A = Str(a).split(Snap._.separator);\n            B = Str(b).split(Snap._.separator);\n            return {\n                from: A,\n                to: B,\n                f: function (val) { return val; }\n            };\n        }\n        if (isNumeric(a) && isNumeric(b)) {\n            return {\n                from: parseFloat(a),\n                to: parseFloat(b),\n                f: getNumber\n            };\n        }\n        var aUnit = a.match(reUnit),\n            bUnit = Str(b).match(reUnit);\n        if (aUnit && arrayEqual(aUnit, bUnit)) {\n            return {\n                from: parseFloat(a),\n                to: parseFloat(b),\n                f: getUnit(aUnit)\n            };\n        } else {\n            return {\n                from: this.asPX(name),\n                to: this.asPX(name, b),\n                f: getNumber\n            };\n        }\n    });\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n    has = \"hasOwnProperty\",\n    supportsTouch = \"createTouch\" in glob.doc,\n    events = [\n        \"click\", \"dblclick\", \"mousedown\", \"mousemove\", \"mouseout\",\n        \"mouseover\", \"mouseup\", \"touchstart\", \"touchmove\", \"touchend\",\n        \"touchcancel\"\n    ],\n    touchMap = {\n        mousedown: \"touchstart\",\n        mousemove: \"touchmove\",\n        mouseup: \"touchend\"\n    },\n    getScroll = function (xy, el) {\n        var name = xy == \"y\" ? \"scrollTop\" : \"scrollLeft\",\n            doc = el && el.node ? el.node.ownerDocument : glob.doc;\n        return doc[name in doc.documentElement ? \"documentElement\" : \"body\"][name];\n    },\n    preventDefault = function () {\n        this.returnValue = false;\n    },\n    preventTouch = function () {\n        return this.originalEvent.preventDefault();\n    },\n    stopPropagation = function () {\n        this.cancelBubble = true;\n    },\n    stopTouch = function () {\n        return this.originalEvent.stopPropagation();\n    },\n    addEvent = function (obj, type, fn, element) {\n        var realName = supportsTouch && touchMap[type] ? touchMap[type] : type,\n            f = function (e) {\n                var scrollY = getScroll(\"y\", element),\n                    scrollX = getScroll(\"x\", element);\n                if (supportsTouch && touchMap[has](type)) {\n                    for (var i = 0, ii = e.targetTouches && e.targetTouches.length; i < ii; i++) {\n                        if (e.targetTouches[i].target == obj || obj.contains(e.targetTouches[i].target)) {\n                            var olde = e;\n                            e = e.targetTouches[i];\n                            e.originalEvent = olde;\n                            e.preventDefault = preventTouch;\n                            e.stopPropagation = stopTouch;\n                            break;\n                        }\n                    }\n                }\n                var x = e.clientX + scrollX,\n                    y = e.clientY + scrollY;\n                return fn.call(element, e, x, y);\n            };\n\n        if (type !== realName) {\n            obj.addEventListener(type, f, false);\n        }\n\n        obj.addEventListener(realName, f, false);\n\n        return function () {\n            if (type !== realName) {\n                obj.removeEventListener(type, f, false);\n            }\n\n            obj.removeEventListener(realName, f, false);\n            return true;\n        };\n    },\n    drag = [],\n    dragMove = function (e) {\n        var x = e.clientX,\n            y = e.clientY,\n            scrollY = getScroll(\"y\"),\n            scrollX = getScroll(\"x\"),\n            dragi,\n            j = drag.length;\n        while (j--) {\n            dragi = drag[j];\n            if (supportsTouch) {\n                var i = e.touches && e.touches.length,\n                    touch;\n                while (i--) {\n                    touch = e.touches[i];\n                    if (touch.identifier == dragi.el._drag.id || dragi.el.node.contains(touch.target)) {\n                        x = touch.clientX;\n                        y = touch.clientY;\n                        (e.originalEvent ? e.originalEvent : e).preventDefault();\n                        break;\n                    }\n                }\n            } else {\n                e.preventDefault();\n            }\n            var node = dragi.el.node,\n                o,\n                next = node.nextSibling,\n                parent = node.parentNode,\n                display = node.style.display;\n            // glob.win.opera && parent.removeChild(node);\n            // node.style.display = \"none\";\n            // o = dragi.el.paper.getElementByPoint(x, y);\n            // node.style.display = display;\n            // glob.win.opera && (next ? parent.insertBefore(node, next) : parent.appendChild(node));\n            // o && eve(\"snap.drag.over.\" + dragi.el.id, dragi.el, o);\n            x += scrollX;\n            y += scrollY;\n            eve(\"snap.drag.move.\" + dragi.el.id, dragi.move_scope || dragi.el, x - dragi.el._drag.x, y - dragi.el._drag.y, x, y, e);\n        }\n    },\n    dragUp = function (e) {\n        Snap.unmousemove(dragMove).unmouseup(dragUp);\n        var i = drag.length,\n            dragi;\n        while (i--) {\n            dragi = drag[i];\n            dragi.el._drag = {};\n            eve(\"snap.drag.end.\" + dragi.el.id, dragi.end_scope || dragi.start_scope || dragi.move_scope || dragi.el, e);\n            eve.off(\"snap.drag.*.\" + dragi.el.id);\n        }\n        drag = [];\n    };\n    /*\\\n     * Element.click\n     [ method ]\n     **\n     * Adds a click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unclick\n     [ method ]\n     **\n     * Removes a click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.dblclick\n     [ method ]\n     **\n     * Adds a double click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.undblclick\n     [ method ]\n     **\n     * Removes a double click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mousedown\n     [ method ]\n     **\n     * Adds a mousedown event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousedown\n     [ method ]\n     **\n     * Removes a mousedown event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mousemove\n     [ method ]\n     **\n     * Adds a mousemove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousemove\n     [ method ]\n     **\n     * Removes a mousemove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseout\n     [ method ]\n     **\n     * Adds a mouseout event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseout\n     [ method ]\n     **\n     * Removes a mouseout event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseover\n     [ method ]\n     **\n     * Adds a mouseover event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseover\n     [ method ]\n     **\n     * Removes a mouseover event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseup\n     [ method ]\n     **\n     * Adds a mouseup event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseup\n     [ method ]\n     **\n     * Removes a mouseup event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchstart\n     [ method ]\n     **\n     * Adds a touchstart event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchstart\n     [ method ]\n     **\n     * Removes a touchstart event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchmove\n     [ method ]\n     **\n     * Adds a touchmove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchmove\n     [ method ]\n     **\n     * Removes a touchmove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchend\n     [ method ]\n     **\n     * Adds a touchend event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchend\n     [ method ]\n     **\n     * Removes a touchend event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchcancel\n     [ method ]\n     **\n     * Adds a touchcancel event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchcancel\n     [ method ]\n     **\n     * Removes a touchcancel event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    for (var i = events.length; i--;) {\n        (function (eventName) {\n            Snap[eventName] = elproto[eventName] = function (fn, scope) {\n                if (Snap.is(fn, \"function\")) {\n                    this.events = this.events || [];\n                    this.events.push({\n                        name: eventName,\n                        f: fn,\n                        unbind: addEvent(this.node || document, eventName, fn, scope || this)\n                    });\n                } else {\n                    for (var i = 0, ii = this.events.length; i < ii; i++) if (this.events[i].name == eventName) {\n                        try {\n                            this.events[i].f.call(this);\n                        } catch (e) {}\n                    }\n                }\n                return this;\n            };\n            Snap[\"un\" + eventName] =\n            elproto[\"un\" + eventName] = function (fn) {\n                var events = this.events || [],\n                    l = events.length;\n                while (l--) if (events[l].name == eventName &&\n                               (events[l].f == fn || !fn)) {\n                    events[l].unbind();\n                    events.splice(l, 1);\n                    !events.length && delete this.events;\n                    return this;\n                }\n                return this;\n            };\n        })(events[i]);\n    }\n    /*\\\n     * Element.hover\n     [ method ]\n     **\n     * Adds hover event handlers to the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     - icontext (object) #optional context for hover in handler\n     - ocontext (object) #optional context for hover out handler\n     = (object) @Element\n    \\*/\n    elproto.hover = function (f_in, f_out, scope_in, scope_out) {\n        return this.mouseover(f_in, scope_in).mouseout(f_out, scope_out || scope_in);\n    };\n    /*\\\n     * Element.unhover\n     [ method ]\n     **\n     * Removes hover event handlers from the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     = (object) @Element\n    \\*/\n    elproto.unhover = function (f_in, f_out) {\n        return this.unmouseover(f_in).unmouseout(f_out);\n    };\n    var draggable = [];\n    // SIERRA unclear what _context_ refers to for starting, ending, moving the drag gesture.\n    // SIERRA Element.drag(): _x position of the mouse_: Where are the x/y values offset from?\n    // SIERRA Element.drag(): much of this member's doc appears to be duplicated for some reason.\n    // SIERRA Unclear about this sentence: _Additionally following drag events will be triggered: drag.start.<id> on start, drag.end.<id> on end and drag.move.<id> on every move._ Is there a global _drag_ object to which you can assign handlers keyed by an element's ID?\n    /*\\\n     * Element.drag\n     [ method ]\n     **\n     * Adds event handlers for an element's drag gesture\n     **\n     - onmove (function) handler for moving\n     - onstart (function) handler for drag start\n     - onend (function) handler for drag end\n     - mcontext (object) #optional context for moving handler\n     - scontext (object) #optional context for drag start handler\n     - econtext (object) #optional context for drag end handler\n     * Additionaly following `drag` events are triggered: `drag.start.<id>` on start, \n     * `drag.end.<id>` on end and `drag.move.<id>` on every move. When element is dragged over another element \n     * `drag.over.<id>` fires as well.\n     *\n     * Start event and start handler are called in specified context or in context of the element with following parameters:\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * Move event and move handler are called in specified context or in context of the element with following parameters:\n     o dx (number) shift by x from the start point\n     o dy (number) shift by y from the start point\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * End event and end handler are called in specified context or in context of the element with following parameters:\n     o event (object) DOM event object\n     = (object) @Element\n    \\*/\n    elproto.drag = function (onmove, onstart, onend, move_scope, start_scope, end_scope) {\n        var el = this;\n        if (!arguments.length) {\n            var origTransform;\n            return el.drag(function (dx, dy) {\n                this.attr({\n                    transform: origTransform + (origTransform ? \"T\" : \"t\") + [dx, dy]\n                });\n            }, function () {\n                origTransform = this.transform().local;\n            });\n        }\n        function start(e, x, y) {\n            (e.originalEvent || e).preventDefault();\n            el._drag.x = x;\n            el._drag.y = y;\n            el._drag.id = e.identifier;\n            !drag.length && Snap.mousemove(dragMove).mouseup(dragUp);\n            drag.push({el: el, move_scope: move_scope, start_scope: start_scope, end_scope: end_scope});\n            onstart && eve.on(\"snap.drag.start.\" + el.id, onstart);\n            onmove && eve.on(\"snap.drag.move.\" + el.id, onmove);\n            onend && eve.on(\"snap.drag.end.\" + el.id, onend);\n            eve(\"snap.drag.start.\" + el.id, start_scope || move_scope || el, x, y, e);\n        }\n        function init(e, x, y) {\n            eve(\"snap.draginit.\" + el.id, el, e, x, y);\n        }\n        eve.on(\"snap.draginit.\" + el.id, start);\n        el._drag = {};\n        draggable.push({el: el, start: start, init: init});\n        el.mousedown(init);\n        return el;\n    };\n    /*\n     * Element.onDragOver\n     [ method ]\n     **\n     * Shortcut to assign event handler for `drag.over.<id>` event, where `id` is the element's `id` (see @Element.id)\n     - f (function) handler for event, first argument would be the element you are dragging over\n    \\*/\n    // elproto.onDragOver = function (f) {\n    //     f ? eve.on(\"snap.drag.over.\" + this.id, f) : eve.unbind(\"snap.drag.over.\" + this.id);\n    // };\n    /*\\\n     * Element.undrag\n     [ method ]\n     **\n     * Removes all drag event handlers from the given element\n    \\*/\n    elproto.undrag = function () {\n        var i = draggable.length;\n        while (i--) if (draggable[i].el == this) {\n            this.unmousedown(draggable[i].init);\n            draggable.splice(i, 1);\n            eve.unbind(\"snap.drag.*.\" + this.id);\n            eve.unbind(\"snap.draginit.\" + this.id);\n        }\n        !draggable.length && Snap.unmousemove(dragMove).unmouseup(dragUp);\n        return this;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        pproto = Paper.prototype,\n        rgurl = /^\\s*url\\((.+)\\)/,\n        Str = String,\n        $ = Snap._.$;\n    Snap.filter = {};\n    /*\\\n     * Paper.filter\n     [ method ]\n     **\n     * Creates a `<filter>` element\n     **\n     - filstr (string) SVG fragment of filter provided as a string\n     = (object) @Element\n     * Note: It is recommended to use filters embedded into the page inside an empty SVG element.\n     > Usage\n     | var f = paper.filter('<feGaussianBlur stdDeviation=\"2\"/>'),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    pproto.filter = function (filstr) {\n        var paper = this;\n        if (paper.type != \"svg\") {\n            paper = paper.paper;\n        }\n        var f = Snap.parse(Str(filstr)),\n            id = Snap._.id(),\n            width = paper.node.offsetWidth,\n            height = paper.node.offsetHeight,\n            filter = $(\"filter\");\n        $(filter, {\n            id: id,\n            filterUnits: \"userSpaceOnUse\"\n        });\n        filter.appendChild(f.node);\n        paper.defs.appendChild(filter);\n        return new Element(filter);\n    };\n\n    eve.on(\"snap.util.getattr.filter\", function () {\n        eve.stop();\n        var p = $(this.node, \"filter\");\n        if (p) {\n            var match = Str(p).match(rgurl);\n            return match && Snap.select(match[1]);\n        }\n    });\n    eve.on(\"snap.util.attr.filter\", function (value) {\n        if (value instanceof Element && value.type == \"filter\") {\n            eve.stop();\n            var id = value.node.id;\n            if (!id) {\n                $(value.node, {id: value.id});\n                id = value.id;\n            }\n            $(this.node, {\n                filter: Snap.url(id)\n            });\n        }\n        if (!value || value == \"none\") {\n            eve.stop();\n            this.node.removeAttribute(\"filter\");\n        }\n    });\n    /*\\\n     * Snap.filter.blur\n     [ method ]\n     **\n     * Returns an SVG markup string for the blur filter\n     **\n     - x (number) amount of horizontal blur, in pixels\n     - y (number) #optional amount of vertical blur, in pixels\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.blur(5, 10)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.blur = function (x, y) {\n        if (x == null) {\n            x = 2;\n        }\n        var def = y == null ? x : [x, y];\n        return Snap.format('\\<feGaussianBlur stdDeviation=\"{def}\"/>', {\n            def: def\n        });\n    };\n    Snap.filter.blur.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.shadow\n     [ method ]\n     **\n     * Returns an SVG markup string for the shadow filter\n     **\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - blur (number) #optional amount of blur\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * which makes blur default to `4`. Or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - opacity (number) #optional `0..1` opacity of the shadow\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.shadow(0, 2, .3)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.shadow = function (dx, dy, blur, color, opacity) {\n        if (opacity == null) {\n            if (color == null) {\n                opacity = blur;\n                blur = 4;\n                color = \"#000\";\n            } else {\n                opacity = color;\n                color = blur;\n                blur = 4;\n            }\n        }\n        if (blur == null) {\n            blur = 4;\n        }\n        if (opacity == null) {\n            opacity = 1;\n        }\n        if (dx == null) {\n            dx = 0;\n            dy = 2;\n        }\n        if (dy == null) {\n            dy = dx;\n        }\n        color = Snap.color(color);\n        return Snap.format('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"{blur}\"/><feOffset dx=\"{dx}\" dy=\"{dy}\" result=\"offsetblur\"/><feFlood flood-color=\"{color}\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"{opacity}\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>', {\n            color: color,\n            dx: dx,\n            dy: dy,\n            blur: blur,\n            opacity: opacity\n        });\n    };\n    Snap.filter.shadow.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.grayscale\n     [ method ]\n     **\n     * Returns an SVG markup string for the grayscale filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.grayscale = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {b} {h} 0 0 0 0 0 1 0\"/>', {\n            a: 0.2126 + 0.7874 * (1 - amount),\n            b: 0.7152 - 0.7152 * (1 - amount),\n            c: 0.0722 - 0.0722 * (1 - amount),\n            d: 0.2126 - 0.2126 * (1 - amount),\n            e: 0.7152 + 0.2848 * (1 - amount),\n            f: 0.0722 - 0.0722 * (1 - amount),\n            g: 0.2126 - 0.2126 * (1 - amount),\n            h: 0.0722 + 0.9278 * (1 - amount)\n        });\n    };\n    Snap.filter.grayscale.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.sepia\n     [ method ]\n     **\n     * Returns an SVG markup string for the sepia filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.sepia = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {h} {i} 0 0 0 0 0 1 0\"/>', {\n            a: 0.393 + 0.607 * (1 - amount),\n            b: 0.769 - 0.769 * (1 - amount),\n            c: 0.189 - 0.189 * (1 - amount),\n            d: 0.349 - 0.349 * (1 - amount),\n            e: 0.686 + 0.314 * (1 - amount),\n            f: 0.168 - 0.168 * (1 - amount),\n            g: 0.272 - 0.272 * (1 - amount),\n            h: 0.534 - 0.534 * (1 - amount),\n            i: 0.131 + 0.869 * (1 - amount)\n        });\n    };\n    Snap.filter.sepia.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.saturate\n     [ method ]\n     **\n     * Returns an SVG markup string for the saturate filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.saturate = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"saturate\" values=\"{amount}\"/>', {\n            amount: 1 - amount\n        });\n    };\n    Snap.filter.saturate.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.hueRotate\n     [ method ]\n     **\n     * Returns an SVG markup string for the hue-rotate filter\n     **\n     - angle (number) angle of rotation\n     = (string) filter representation\n    \\*/\n    Snap.filter.hueRotate = function (angle) {\n        angle = angle || 0;\n        return Snap.format('<feColorMatrix type=\"hueRotate\" values=\"{angle}\"/>', {\n            angle: angle\n        });\n    };\n    Snap.filter.hueRotate.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.invert\n     [ method ]\n     **\n     * Returns an SVG markup string for the invert filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.invert = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n//        <feColorMatrix type=\"matrix\" values=\"-1 0 0 0 1  0 -1 0 0 1  0 0 -1 0 1  0 0 0 1 0\" color-interpolation-filters=\"sRGB\"/>\n        return Snap.format('<feComponentTransfer><feFuncR type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncG type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncB type=\"table\" tableValues=\"{amount} {amount2}\"/></feComponentTransfer>', {\n            amount: amount,\n            amount2: 1 - amount\n        });\n    };\n    Snap.filter.invert.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.brightness\n     [ method ]\n     **\n     * Returns an SVG markup string for the brightness filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.brightness = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\"/><feFuncG type=\"linear\" slope=\"{amount}\"/><feFuncB type=\"linear\" slope=\"{amount}\"/></feComponentTransfer>', {\n            amount: amount\n        });\n    };\n    Snap.filter.brightness.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.contrast\n     [ method ]\n     **\n     * Returns an SVG markup string for the contrast filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.contrast = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncG type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncB type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/></feComponentTransfer>', {\n            amount: amount,\n            amount2: .5 - amount / 2\n        });\n    };\n    Snap.filter.contrast.toString = function () {\n        return this();\n    };\n});\n\n// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var box = Snap._.box,\n        is = Snap.is,\n        firstLetter = /^[^a-z]*([tbmlrc])/i,\n        toString = function () {\n            return \"T\" + this.dx + \",\" + this.dy;\n        };\n    /*\\\n     * Element.getAlign\n     [ method ]\n     **\n     * Returns shift needed to align the element relatively to given element.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object|string) Object in format `{dx: , dy: }` also has a string representation as a transformation string\n     > Usage\n     | el.transform(el.getAlign(el2, \"top\"));\n     * or\n     | var dy = el.getAlign(el2, \"top\").dy;\n    \\*/\n    Element.prototype.getAlign = function (el, way) {\n        if (way == null && is(el, \"string\")) {\n            way = el;\n            el = null;\n        }\n        el = el || this.paper;\n        var bx = el.getBBox ? el.getBBox() : box(el),\n            bb = this.getBBox(),\n            out = {};\n        way = way && way.match(firstLetter);\n        way = way ? way[1].toLowerCase() : \"c\";\n        switch (way) {\n            case \"t\":\n                out.dx = 0;\n                out.dy = bx.y - bb.y;\n            break;\n            case \"b\":\n                out.dx = 0;\n                out.dy = bx.y2 - bb.y2;\n            break;\n            case \"m\":\n                out.dx = 0;\n                out.dy = bx.cy - bb.cy;\n            break;\n            case \"l\":\n                out.dx = bx.x - bb.x;\n                out.dy = 0;\n            break;\n            case \"r\":\n                out.dx = bx.x2 - bb.x2;\n                out.dy = 0;\n            break;\n            default:\n                out.dx = bx.cx - bb.cx;\n                out.dy = 0;\n            break;\n        }\n        out.toString = toString;\n        return out;\n    };\n    /*\\\n     * Element.align\n     [ method ]\n     **\n     * Aligns the element relatively to given one via transformation.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object) this element\n     > Usage\n     | el.align(el2, \"top\");\n     * or\n     | el.align(\"middle\");\n    \\*/\n    Element.prototype.align = function (el, way) {\n        return this.transform(\"...\" + this.getAlign(el, way));\n    };\n});\n\n// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    // Colours are from https://www.materialui.co\n    var red         = \"#ffebee#ffcdd2#ef9a9a#e57373#ef5350#f44336#e53935#d32f2f#c62828#b71c1c#ff8a80#ff5252#ff1744#d50000\",\n        pink        = \"#FCE4EC#F8BBD0#F48FB1#F06292#EC407A#E91E63#D81B60#C2185B#AD1457#880E4F#FF80AB#FF4081#F50057#C51162\",\n        purple      = \"#F3E5F5#E1BEE7#CE93D8#BA68C8#AB47BC#9C27B0#8E24AA#7B1FA2#6A1B9A#4A148C#EA80FC#E040FB#D500F9#AA00FF\",\n        deeppurple  = \"#EDE7F6#D1C4E9#B39DDB#9575CD#7E57C2#673AB7#5E35B1#512DA8#4527A0#311B92#B388FF#7C4DFF#651FFF#6200EA\",\n        indigo      = \"#E8EAF6#C5CAE9#9FA8DA#7986CB#5C6BC0#3F51B5#3949AB#303F9F#283593#1A237E#8C9EFF#536DFE#3D5AFE#304FFE\",\n        blue        = \"#E3F2FD#BBDEFB#90CAF9#64B5F6#64B5F6#2196F3#1E88E5#1976D2#1565C0#0D47A1#82B1FF#448AFF#2979FF#2962FF\",\n        lightblue   = \"#E1F5FE#B3E5FC#81D4FA#4FC3F7#29B6F6#03A9F4#039BE5#0288D1#0277BD#01579B#80D8FF#40C4FF#00B0FF#0091EA\",\n        cyan        = \"#E0F7FA#B2EBF2#80DEEA#4DD0E1#26C6DA#00BCD4#00ACC1#0097A7#00838F#006064#84FFFF#18FFFF#00E5FF#00B8D4\",\n        teal        = \"#E0F2F1#B2DFDB#80CBC4#4DB6AC#26A69A#009688#00897B#00796B#00695C#004D40#A7FFEB#64FFDA#1DE9B6#00BFA5\",\n        green       = \"#E8F5E9#C8E6C9#A5D6A7#81C784#66BB6A#4CAF50#43A047#388E3C#2E7D32#1B5E20#B9F6CA#69F0AE#00E676#00C853\",\n        lightgreen  = \"#F1F8E9#DCEDC8#C5E1A5#AED581#9CCC65#8BC34A#7CB342#689F38#558B2F#33691E#CCFF90#B2FF59#76FF03#64DD17\",\n        lime        = \"#F9FBE7#F0F4C3#E6EE9C#DCE775#D4E157#CDDC39#C0CA33#AFB42B#9E9D24#827717#F4FF81#EEFF41#C6FF00#AEEA00\",\n        yellow      = \"#FFFDE7#FFF9C4#FFF59D#FFF176#FFEE58#FFEB3B#FDD835#FBC02D#F9A825#F57F17#FFFF8D#FFFF00#FFEA00#FFD600\",\n        amber       = \"#FFF8E1#FFECB3#FFE082#FFD54F#FFCA28#FFC107#FFB300#FFA000#FF8F00#FF6F00#FFE57F#FFD740#FFC400#FFAB00\",\n        orange      = \"#FFF3E0#FFE0B2#FFCC80#FFB74D#FFA726#FF9800#FB8C00#F57C00#EF6C00#E65100#FFD180#FFAB40#FF9100#FF6D00\",\n        deeporange  = \"#FBE9E7#FFCCBC#FFAB91#FF8A65#FF7043#FF5722#F4511E#E64A19#D84315#BF360C#FF9E80#FF6E40#FF3D00#DD2C00\",\n        brown       = \"#EFEBE9#D7CCC8#BCAAA4#A1887F#8D6E63#795548#6D4C41#5D4037#4E342E#3E2723\",\n        grey        = \"#FAFAFA#F5F5F5#EEEEEE#E0E0E0#BDBDBD#9E9E9E#757575#616161#424242#212121\",\n        bluegrey    = \"#ECEFF1#CFD8DC#B0BEC5#90A4AE#78909C#607D8B#546E7A#455A64#37474F#263238\";\n    /*\\\n     * Snap.mui\n     [ property ]\n     **\n     * Contain Material UI colours.\n     | Snap().rect(0, 0, 10, 10).attr({fill: Snap.mui.deeppurple, stroke: Snap.mui.amber[600]});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.mui = {};\n    /*\\\n     * Snap.flat\n     [ property ]\n     **\n     * Contain Flat UI colours.\n     | Snap().rect(0, 0, 10, 10).attr({fill: Snap.flat.carrot, stroke: Snap.flat.wetasphalt});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.flat = {};\n    function saveColor(colors) {\n        colors = colors.split(/(?=#)/);\n        var color = new String(colors[5]);\n        color[50] = colors[0];\n        color[100] = colors[1];\n        color[200] = colors[2];\n        color[300] = colors[3];\n        color[400] = colors[4];\n        color[500] = colors[5];\n        color[600] = colors[6];\n        color[700] = colors[7];\n        color[800] = colors[8];\n        color[900] = colors[9];\n        if (colors[10]) {\n            color.A100 = colors[10];\n            color.A200 = colors[11];\n            color.A400 = colors[12];\n            color.A700 = colors[13];\n        }\n        return color;\n    }\n    Snap.mui.red = saveColor(red);\n    Snap.mui.pink = saveColor(pink);\n    Snap.mui.purple = saveColor(purple);\n    Snap.mui.deeppurple = saveColor(deeppurple);\n    Snap.mui.indigo = saveColor(indigo);\n    Snap.mui.blue = saveColor(blue);\n    Snap.mui.lightblue = saveColor(lightblue);\n    Snap.mui.cyan = saveColor(cyan);\n    Snap.mui.teal = saveColor(teal);\n    Snap.mui.green = saveColor(green);\n    Snap.mui.lightgreen = saveColor(lightgreen);\n    Snap.mui.lime = saveColor(lime);\n    Snap.mui.yellow = saveColor(yellow);\n    Snap.mui.amber = saveColor(amber);\n    Snap.mui.orange = saveColor(orange);\n    Snap.mui.deeporange = saveColor(deeporange);\n    Snap.mui.brown = saveColor(brown);\n    Snap.mui.grey = saveColor(grey);\n    Snap.mui.bluegrey = saveColor(bluegrey);\n    Snap.flat.turquoise = \"#1abc9c\";\n    Snap.flat.greensea = \"#16a085\";\n    Snap.flat.sunflower = \"#f1c40f\";\n    Snap.flat.orange = \"#f39c12\";\n    Snap.flat.emerland = \"#2ecc71\";\n    Snap.flat.nephritis = \"#27ae60\";\n    Snap.flat.carrot = \"#e67e22\";\n    Snap.flat.pumpkin = \"#d35400\";\n    Snap.flat.peterriver = \"#3498db\";\n    Snap.flat.belizehole = \"#2980b9\";\n    Snap.flat.alizarin = \"#e74c3c\";\n    Snap.flat.pomegranate = \"#c0392b\";\n    Snap.flat.amethyst = \"#9b59b6\";\n    Snap.flat.wisteria = \"#8e44ad\";\n    Snap.flat.clouds = \"#ecf0f1\";\n    Snap.flat.silver = \"#bdc3c7\";\n    Snap.flat.wetasphalt = \"#34495e\";\n    Snap.flat.midnightblue = \"#2c3e50\";\n    Snap.flat.concrete = \"#95a5a6\";\n    Snap.flat.asbestos = \"#7f8c8d\";\n    /*\\\n     * Snap.importMUIColors\n     [ method ]\n     **\n     * Imports Material UI colours into global object.\n     | Snap.importMUIColors();\n     | Snap().rect(0, 0, 10, 10).attr({fill: deeppurple, stroke: amber[600]});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.importMUIColors = function () {\n        for (var color in Snap.mui) {\n            if (Snap.mui.hasOwnProperty(color)) {\n                window[color] = Snap.mui[color];\n            }\n        }\n    };\n});\n\nreturn Snap;\n}));\n}.call(window));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/snapsvg/dist/snap.svg.js\n// module id = 0\n// module chunks = 0","/*globals document, window,  */\n\nimport \"snapsvg\";\nimport \"snap.svg.zpd\";\n\nimport defaultSettings from \"./default-settings.js\";\nimport defaultTestBikes from \"./default-input-bikes.js\";\nimport BikeGeometry from \"./parse-geometry.js\";\nimport BikeDrawing from \"./draw-bike-snapsvg.js\";\n\n\nexport default drawBikeComparison;\n\nfunction drawBikeComparison(bike_geometries, settings) {\n    \"use strict\";\n\n    var drawSettings = defaultSettings;\n    // TODO: Extend drawSettings with settings\n\n    // TodO: Possibly refactor inputsGeometries to be a separate object outside of drawSettings.\n    \n    drawSettings['inputsGeometries'] = bike_geometries || defaultTestBikes;\n\n    var bikecanvas = \"#visual_bike\",\n        bikeGeometries = [],\n        bikeDrawings = [],\n        paper = Snap.select(bikecanvas),\n        bounds = {\n            x_min: 0,\n            x_max: 0,\n            y_min: 0,\n            y_max: 0,\n        },\n        start_zoom,\n        bbox;\n    paper.clear();\n\n    function drawNames(bikeGeometries, paper, start_x, start_y) {\n        var start_x = start_x || 0,\n            start_y = start_y || 0,\n            height = 20,\n            x = start_x,\n            y = start_y - 2 * height,\n            names = [];\n\n        for (var i = 0; i < bikeGeometries.length; i ++) {\n            names.push(paper.text(x, y, bikeGeometries[i].inputMeasurements.title ).attr({'fill': drawSettings['colours'][i % drawSettings['colours'].length]}))\n            y -= height;\n        }\n\n    }\n\n    for (let i = 0; i < drawSettings['inputsGeometries'].length; i++) {\n        var rawGeometryData = drawSettings['inputsGeometries'][i];\n        var bike = new BikeGeometry(rawGeometryData, drawSettings);\n        bikeGeometries.push(bike);\n    };\n\n\n    for (let i = 0; i < bikeGeometries.length; i++) {\n        var drawing = new BikeDrawing(bikeGeometries[i], paper, drawSettings['colours'][i % drawSettings['colours'].length], 0, 0, drawSettings);\n        bikeDrawings.push(drawing);\n    };\n\n    for (let i = 0; i < bikeDrawings.length; i++) {\n        bikeDrawings[i].draw();\n    };\n\n    for (let i = 0; i < bikeGeometries.length; i++) {\n        bounds.y_min = Math.min(bounds.y_min, bikeGeometries[i].resolvedPoint.min_y);\n        bounds.x_min = Math.min(bounds.x_min, bikeGeometries[i].resolvedPoint.min_x);\n        bounds.x_max = Math.max(bounds.x_max, bikeGeometries[i].resolvedPoint.max_x);\n        bounds.y_max = Math.max(bounds.y_max, bikeGeometries[i].resolvedPoint.max_y);\n    };\n\n    drawNames(bikeGeometries, paper, bounds.x_min, bounds.y_min);\n\n    // Use snap.svg's zpd plugin.\n    // TODO: These could probably be moved to a separate snapsvg specific module.\n\n    // Calculate initial zoom values\n    bounds.dx = bounds.x_max - bounds.x_min;\n    bounds.dy = bounds.y_max - bounds.y_min;\n    start_zoom = Math.min($(bikecanvas).height()/bounds.dy, $(bikecanvas).width()/bounds.dx);\n\n    //bbox = paper.getBBox();\n\n    var loading_animation_bounce_factor = 0.95;\n\n    // TODO: Calculate initial offsets. 350 is a 'it works' placeholder.\n    var initial_x_offset = 350 * loading_animation_bounce_factor,\n        initial_y_offset = 350 * loading_animation_bounce_factor;\n\n    paper.zpd({\n        load: {\n                  a: start_zoom,        // Conversion Factor 'zoom'\n                  b: 0,\n                  c: 0,\n                  d: start_zoom,        // Conversion Factor 'zoom'\n                  e: initial_x_offset,               // Offset X\n                  f: initial_y_offset,               // Offset Y\n              }\n    }, function (err, paper) {\n        if (err){\n            console.log(\"SnapSVG error: '\"+ err +\"'\");\n            console.log(paper);\n        }\n    });\n\n    paper.zoomTo(start_zoom * loading_animation_bounce_factor, 1350, mina.elastic);\n\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/visual-bike.js\n// module id = 2\n// module chunks = 0","/*** IMPORTS FROM imports-loader ***/\nvar Snap = require(\"snapsvg\");\n\n/* globals Snap, document, navigator */\n\n/**\n *  snapsvg-zpd.js: A zoom/pan/drag plugin for Snap.svg\n * ==================================================\n *\n *  Usage\n * =======\n * var paper = Snap();\n * var bigCircle = paper.circle(150, 150, 100);\n * paper.zpd();\n *\n * // or settings and callback\n * paper.zpd({ zoom: false }), function (err, paper) { });\n *\n * // or callback\n * paper.zpd(function (err, paper) { });\n *\n * // destroy\n * paper.zpd('destroy');\n *\n * // save\n * paper.zpd('save');\n *\n * // load\n * // paper.zpd({ load: SVGMatrix {} });\n *\n * // origin\n * paper.zpd('origin');\n *\n * // zoomTo\n * paper.zoomTo(1);\n *\n * // panTo\n * paper.panTo(0, 0); // original location\n * paper.panTo('+10', 0); // move right\n *\n * // rotate\n * paper.rotate(15); // rotate 15 deg\n *\n *  Notice\n * ========\n * This usually use on present view only. Not for Storing, modifying the paper.\n *\n * Reason:\n * Usually <pan> <zoom> => <svg transform=\"matrix(a,b,c,d,e,f)\"></svg>\n *\n * But if you need to store the <drag> location, (for storing)\n * we have to use <circle cx=\"x\" cy=\"y\"></circle> not <circle tranform=\"matrix(a,b,c,d,e,f)\"></circle>\n *\n *  License\n * =========\n * This code is licensed under the following BSD license:\n *\n * Copyright 2014 Huei Tan <huei90@gmail.com> (Snap.svg integration). All rights reserved.\n * Copyright 2009-2010 Andrea Leofreddi <a.leofreddi@itcharm.com> (original author). All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification, are\n * permitted provided that the following conditions are met:\n *\n *    1. Redistributions of source code must retain the above copyright notice, this list of\n *       conditions and the following disclaimer.\n *\n *    2. Redistributions in binary form must reproduce the above copyright notice, this list\n *       of conditions and the following disclaimer in the documentation and/or other materials\n *       provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY Andrea Leofreddi ``AS IS'' AND ANY EXPRESS OR IMPLIED\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL Andrea Leofreddi OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation are those of the\n * authors and should not be interpreted as representing official policies, either expressed\n * or implied, of Andrea Leofreddi.\n */\n\nSVGElement.prototype.getTransformToElement = SVGElement.prototype.getTransformToElement || function(elem) {\n\treturn elem.getScreenCTM().inverse().multiply(this.getScreenCTM());\n};\n\n\n(function (Snap) {\n    Snap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n\n        /**\n         * Global variable for snap.svg.zpd plugin\n         */\n        var snapsvgzpd = {\n            uniqueIdPrefix: 'snapsvg-zpd-',     // prefix for the unique ids created for zpd\n            dataStore: {},                      // \"global\" storage for all our zpd elements\n            enable: true                        // By default, snapsvgzpd should enable, zpd('toggle') to toggle enable or disable\n        };\n\n        /**\n         * Global variable to store root of the svg element\n         */\n        var rootSvgObject;\n\n        /**\n         * remove node parent but keep children\n         */\n        var _removeNodeKeepChildren = function removeNodeKeepChildren(node) {\n            if (!node.parentNode) {\n                return;\n            }\n            while (node.firstChild) {\n                node.parentNode.insertBefore(node.firstChild, node);\n            }\n            node.parentNode.removeChild(node);\n        };\n\n        /**\n         * Detect is +1 -1 or 1\n         * increase decrease or just number\n         */\n        var _increaseDecreaseOrNumber = function increaseDecreaseOrNumber(defaultValue, input) {\n            if (input === undefined) {\n                return parseInt(defaultValue);\n            } else if (input[0] == '+') {\n                return defaultValue + parseInt(input.split('+')[1]);\n            } else if (input[0] == '-') {\n                return defaultValue - parseInt(input.split('-')[1]);\n            } else {\n                return parseInt(input);\n            }\n        };\n\n        /**\n         * Sets the current transform matrix of an element.\n         */\n        var _setCTM = function setCTM(element, matrix, threshold) {\n            if (threshold && typeof threshold === 'object') { // array [0.5,2]\n                var oldMatrix = Snap(element).transform().globalMatrix;\n\n                if (matrix.a < oldMatrix.a && matrix.a < threshold[0]) {\n                    return;\n                } else if (matrix.a > oldMatrix.a && matrix.a > threshold[1]) {\n                    return;\n                }\n\n                if (matrix.d < oldMatrix.d && matrix.d < threshold[0]) {\n                    return;\n                } else if (matrix.d > oldMatrix.d && matrix.d > threshold[1]) {\n                    return;\n                }\n            }\n            var s = \"matrix(\" + matrix.a + \",\" + matrix.b + \",\" + matrix.c + \",\" + matrix.d + \",\" + matrix.e + \",\" + matrix.f + \")\";\n            element.setAttribute(\"transform\", s);\n        };\n\n        /**\n         * Dumps a matrix to a string (useful for debug).\n         */\n        var _dumpMatrix = function dumpMatrix(matrix) {\n            var s = \"[ \" + matrix.a + \", \" + matrix.c + \", \" + matrix.e + \"\\n  \" + matrix.b + \", \" + matrix.d + \", \" + matrix.f + \"\\n  0, 0, 1 ]\";\n            return s;\n        };\n\n        /**\n         * Instance an SVGPoint object with given event coordinates.\n         */\n         var _findPos = function findPos(obj) {\n           var curleft = curtop = 0;\n           if (obj.offsetParent) {\n               do {\n                   curleft += obj.offsetLeft;\n                   curtop += obj.offsetTop;\n               } while(obj = obj.offsetParent);\n           }\n           return [curleft,curtop];\n        };\n        var _getEventPoint = function getEventPoint(event, svgNode) {\n\n            var p = svgNode.node.createSVGPoint(),\n            svgPos = _findPos(svgNode.node);\n\n            p.x = event.clientX - svgPos[0];\n            p.y = event.clientY - svgPos[1];\n\n            return p;\n        };\n\n        /**\n         * Get an svg transformation matrix as string representation\n         */\n        var _getSvgMatrixAsString = function _getMatrixAsString (matrix) {\n\n            return 'matrix(' + matrix.a + ',' + matrix.b + ',' + matrix.c + ',' + matrix.d + ',' + matrix.e + ',' + matrix.f + ')';\n        };\n\n        /**\n         * add a new <g> element to the paper\n         * add paper nodes into <g> element (Snapsvg Element)\n         * and give the nodes an unique id like 'snapsvg-zpd-12345'\n         * and let this <g> Element to global snapsvgzpd.dataStore['snapsvg-zpd-12345']\n         * and\n         * <svg>\n         *     <def>something</def>\n         *     <circle cx=\"10\" cy=\"10\" r=\"100\"></circle>\n         * </svg>\n         *\n         * transform to =>\n         *\n         * <svg>\n         *     <g id=\"snapsvg-zpd-12345\">\n         *         <def>something</def>\n         *         <circle cx=\"10\" cy=\"10\" r=\"100\"></circle>\n         *     </g>\n         * </svg>\n         */\n        var _initZpdElement = function initAndGetZpdElement (svgObject, options) {\n\n            // get root of svg object\n            rootSvgObject = svgObject.node;\n\n            // get all child nodes in our svg element\n            var rootChildNodes = svgObject.node.childNodes;\n\n            // create a new graphics element in our svg element\n            var gElement = svgObject.g();\n            var gNode = gElement.node;\n\n            // add our unique id to the element\n            gNode.id = snapsvgzpd.uniqueIdPrefix + svgObject.id;\n\n            // check if a matrix has been supplied to initialize the drawing\n            if (options.load && typeof options.load === 'object') {\n\n                var matrix = options.load;\n\n                // create a matrix string from our supplied matrix\n                var matrixString = \"matrix(\" + matrix.a + \",\" + matrix.b + \",\" + matrix.c + \",\" + matrix.d + \",\" + matrix.e + \",\" + matrix.f + \")\";\n\n                // load <g> transform matrix\n                gElement.transform(matrixString);\n\n            } else {\n                // initial set <g transform=\"matrix(1,0,0,1,0,0)\">\n                gElement.transform('matrix');\n            }\n\n            // initialize our index counter for child nodes\n            var index = 0;\n\n            // get the number of child nodes in our root node\n            // substract -1 to exclude our <g> element\n            var noOfChildNodes = rootChildNodes.length - 1;\n\n            // go through all child elements\n            // (except the last one, which is our <g> element)\n            while (index < noOfChildNodes) {\n                gNode.appendChild(rootChildNodes[0]);\n                index += 1;\n            }\n\n            // define some data to be used in the function internally\n            var data = {\n                svg: svgObject,\n                root: svgObject.node,        // get paper svg\n                state: 'none',\n                stateTarget: null,\n                stateOrigin: null,\n                stateTf: null\n            };\n\n            // create an element with all required properties\n            var item = {\n                \"element\": gElement,\n                \"data\": data,\n                \"options\": options,\n            };\n\n            // create some mouse event handlers for our item\n            // store them globally for optional removal later on\n            item.handlerFunctions = _getHandlerFunctions(item);\n\n            // return our element\n            return item;\n        };\n\n        /**\n         * create some handler functions for our mouse actions\n         * we will take advantace of closures to preserve some data\n         */\n        var _getHandlerFunctions = function getHandlerFunctions(zpdElement) {\n\n            var handleMouseUp = function handleMouseUp (event) {\n\n                if (event.preventDefault) {\n                    event.preventDefault();\n                }\n\n                if (!snapsvgzpd.enable) return;\n\n                event.returnValue = false;\n\n                if (zpdElement.data.state == 'pan' || zpdElement.data.state == 'drag') {\n\n                    // quit pan mode\n                    zpdElement.data.state = '';\n\n                }\n\n            };\n\n            var handleMouseDown = function handleMouseDown (event) {\n\n                if (event.preventDefault) {\n                    event.preventDefault();\n                }\n\n                if (!snapsvgzpd.enable) return;\n\n                event.returnValue = false;\n\n                var g = zpdElement.element.node;\n\n                if (\n                    event.target.tagName == \"svg\" || !zpdElement.options.drag // Pan anyway when drag is disabled and the user clicked on an element\n                ) {\n                    // Pan mode\n                    zpdElement.data.state = 'pan';\n\n                    zpdElement.data.stateTf = g.getCTM().inverse();\n\n                    zpdElement.data.stateOrigin = _getEventPoint(event, zpdElement.data.svg).matrixTransform(zpdElement.data.stateTf);\n\n                } else {\n\n                    // Drag mode\n                    zpdElement.data.state = 'drag';\n\n                    zpdElement.data.stateTarget = event.target;\n\n                    zpdElement.data.stateTf = g.getCTM().inverse();\n\n                    zpdElement.data.stateOrigin = _getEventPoint(event, zpdElement.data.svg).matrixTransform(zpdElement.data.stateTf);\n\n                }\n            };\n\n            var handleMouseMove = function handleMouseMove (event) {\n\n                if (event.preventDefault) {\n                    event.preventDefault();\n                }\n\n                if (!snapsvgzpd.enable) return;\n\n                event.returnValue = false;\n\n                var g = zpdElement.element.node;\n\n                if (zpdElement.data.state == 'pan' && zpdElement.options.pan) {\n\n                    // Pan mode\n                    var p = _getEventPoint(event, zpdElement.data.svg).matrixTransform(zpdElement.data.stateTf);\n\n                    _setCTM(g, zpdElement.data.stateTf.inverse().translate(p.x - zpdElement.data.stateOrigin.x, p.y - zpdElement.data.stateOrigin.y), zpdElement.options.zoomThreshold);\n\n                } else if (zpdElement.data.state == 'drag' && zpdElement.options.drag) {\n\n                    // Drag mode\n                    var dragPoint = _getEventPoint(event, zpdElement.data.svg).matrixTransform(g.getCTM().inverse());\n\n                    _setCTM(zpdElement.data.stateTarget,\n                            zpdElement.data.root.createSVGMatrix()\n                            .translate(dragPoint.x - zpdElement.data.stateOrigin.x, dragPoint.y - zpdElement.data.stateOrigin.y)\n                            .multiply(g.getCTM().inverse())\n                            .multiply(zpdElement.data.stateTarget.getCTM()),\n                            zpdElement.options.zoomThreshold);\n\n                    zpdElement.data.stateOrigin = dragPoint;\n                }\n            };\n\n            var handleMouseWheel = function handleMouseWheel (event) {\n\n                if (!zpdElement.options.zoom) {\n                    return;\n                }\n\n                if (event.preventDefault) {\n                    event.preventDefault();\n                }\n\n                if (!snapsvgzpd.enable) return;\n\n                event.returnValue = false;\n\n                var delta = 0;\n\n                if (event.wheelDelta) {\n                    delta = event.wheelDelta / 360;  // Chrome/Safari\n                }\n                else {\n                    delta = event.detail / -9;       // Mozilla\n                }\n\n                var z = Math.pow(1 + zpdElement.options.zoomScale, delta);\n\n                var g = zpdElement.element.node;\n\n                var p = _getEventPoint(event, zpdElement.data.svg);\n\n                p = p.matrixTransform(g.getCTM().inverse());\n\n                // Compute new scale matrix in current mouse position\n                var k = zpdElement.data.root.createSVGMatrix().translate(p.x, p.y).scale(z).translate(-p.x, -p.y);\n\n                _setCTM(g, g.getCTM().multiply(k), zpdElement.options.zoomThreshold);\n\n                if (typeof(stateTf) == 'undefined') {\n                    zpdElement.data.stateTf = g.getCTM().inverse();\n                }\n\n                zpdElement.data.stateTf = zpdElement.data.stateTf.multiply(k.inverse());\n            };\n\n            return {\n                \"mouseUp\": handleMouseUp,\n                \"mouseDown\": handleMouseDown,\n                \"mouseMove\": handleMouseMove,\n                \"mouseWheel\": handleMouseWheel\n            };\n        };\n\n\n        /**\n         * Register handlers\n         * desktop and mobile (?)\n         */\n        var _setupHandlers = function setupHandlers(svgElement, handlerFunctions) {\n\n            // mobile\n            // (?)\n\n            // desktop\n            if ('onmouseup' in document.documentElement) {\n\n                // IE < 9 would need to use the event onmouseup, but they do not support svg anyway..\n                svgElement.addEventListener('mouseup', handlerFunctions.mouseUp, false);\n                svgElement.addEventListener('mousedown', handlerFunctions.mouseDown, false);\n                svgElement.addEventListener('mousemove', handlerFunctions.mouseMove, false);\n\n                if (navigator.userAgent.toLowerCase().indexOf('webkit') >= 0 ||\n                    navigator.userAgent.toLowerCase().indexOf('trident') >= 0) {\n                    svgElement.addEventListener('mousewheel', handlerFunctions.mouseWheel, false); // Chrome/Safari\n                }\n                else {\n                    svgElement.addEventListener('DOMMouseScroll', handlerFunctions.mouseWheel, false); // Others\n                }\n\n            }\n        };\n\n        /**\n         * remove event handlers\n         */\n        var _tearDownHandlers = function tearDownHandlers(svgElement, handlerFunctions) {\n\n            svgElement.removeEventListener('mouseup', handlerFunctions.mouseUp, false);\n            svgElement.removeEventListener('mousedown', handlerFunctions.mouseDown, false);\n            svgElement.removeEventListener('mousemove', handlerFunctions.mouseMove, false);\n\n            if (navigator.userAgent.toLowerCase().indexOf('webkit') >= 0 ||\n                navigator.userAgent.toLowerCase().indexOf('trident') >= 0) {\n                svgElement.removeEventListener('mousewheel', handlerFunctions.mouseWheel, false);\n            }\n            else {\n                svgElement.removeEventListener('DOMMouseScroll', handlerFunctions.mouseWheel, false);\n            }\n        };\n\n        /* our global zpd function */\n        var zpd = function (options, callbackFunc) {\n\n            // get a reference to the current element\n            var self = this;\n\n            // define some custom options\n            var zpdOptions = {\n                pan: true,          // enable or disable panning (default enabled)\n                zoom: true,         // enable or disable zooming (default enabled)\n                drag: false,        // enable or disable dragging (default disabled)\n                zoomScale: 0.2,     // define zoom sensitivity\n                zoomThreshold: null // define zoom threshold\n            };\n\n            // the situation event of zpd, may be init, reinit, destroy, save, origin, toggle\n            var situation,\n                situationState = {\n                    init: 'init',\n                    reinit: 'reinit',\n                    destroy: 'destroy',\n                    save: 'save',\n                    origin: 'origin',\n                    callback: 'callback',\n                    toggle: 'toggle'\n                };\n\n            var zpdElement = null;\n\n            // it is also possible to only specify a callback function without any options\n            if (typeof options === 'function') {\n                callbackFunc = options;\n                situation = situationState.callback;\n            }\n\n            // check if element was already initialized\n            if (snapsvgzpd.dataStore.hasOwnProperty(self.id)) {\n\n                // return existing element\n                zpdElement =  snapsvgzpd.dataStore[self.id];\n\n                // adapt the stored options, with the options passed in\n                if (typeof options === 'object') {\n                    for (var prop in options) {\n                        zpdElement.options[prop] = options[prop];\n                    }\n                    situation = situationState.reinit;\n                } else if (typeof options === 'string') {\n                    situation = options;\n                }\n            }\n            else {\n\n                // adapt the default options\n                if (typeof options === 'object') {\n                    for (var prop2 in options) {\n                        zpdOptions[prop2] = options[prop2];\n                    }\n                    situation = situationState.init;\n                } else if (typeof options === 'string') {\n                    situation = options;\n                }\n\n                // initialize a new element and save it to our global storage\n                zpdElement = _initZpdElement(self, zpdOptions);\n\n                // setup the handlers for our svg-canvas\n                _setupHandlers(self.node, zpdElement.handlerFunctions);\n\n                snapsvgzpd.dataStore[self.id] = zpdElement;\n            }\n\n            switch (situation) {\n\n                case situationState.init:\n                case situationState.reinit:\n                case situationState.callback:\n\n                    // callback\n                    if (callbackFunc) {\n                        callbackFunc(null, zpdElement);\n                    }\n\n                    return;\n\n                case situationState.destroy:\n\n                    // remove event handlers\n                    _tearDownHandlers(self.node, zpdElement.handlerFunctions);\n\n                    // remove our custom <g> element\n                    _removeNodeKeepChildren(self.node.firstChild);\n\n                    // remove the object from our internal storage\n                    delete snapsvgzpd.dataStore[self.id];\n\n                    // callback\n                    if (callbackFunc) {\n                        callbackFunc(null, zpdElement);\n                    }\n\n                    return; // exit all\n\n                case situationState.save:\n\n                    var g = document.getElementById(snapsvgzpd.uniqueIdPrefix + self.id);\n\n                    var returnValue = g.getCTM();\n\n                    // callback\n                    if (callbackFunc) {\n                        callbackFunc(null, returnValue);\n                    }\n\n                    return returnValue;\n\n                case situationState.origin:\n\n                    // back to origin location\n                    self.zoomTo(1, 1000);\n\n                    // callback\n                    if (callbackFunc) {\n                        callbackFunc(null, zpdElement);\n                    }\n\n                    return;\n\n                case situationState.toggle:\n\n                    // toggle enabled\n                    snapsvgzpd.enable = !snapsvgzpd.enable;\n\n                    // callback\n                    if (callbackFunc) {\n                        callbackFunc(null, snapsvgzpd.enable);\n                    }\n\n                    return;\n            }\n        };\n\n\n\n        /**\n         * zoom element to a certain zoom factor\n         */\n        var zoomTo = function (zoom, interval, ease, callbackFunction) {\n\n            if (zoom < 0 || typeof zoom !== 'number') {\n                console.error('zoomTo(arg) should be a number and greater than 0');\n                return;\n            }\n\n            if (typeof interval !== 'number') {\n                interval = 3000;\n            }\n\n            var self = this;\n\n            // check if we have this element in our zpd data storage\n            if (snapsvgzpd.dataStore.hasOwnProperty(self.id)) {\n\n                // get a reference to the element\n                var zpdElement = snapsvgzpd.dataStore[self.id].element;\n\n                var currentTransformMatrix = zpdElement.node.getTransformToElement(rootSvgObject);\n                var currentZoom = currentTransformMatrix.a;\n                var originX = currentTransformMatrix.e;\n                var originY = currentTransformMatrix.f;\n\n                var boundingBox = zpdElement.getBBox();\n                var deltaX = parseFloat(boundingBox.width) / 2.0;\n                var deltaY = parseFloat(boundingBox.height) / 2.0;\n\n                Snap.animate(currentZoom, zoom, function (value) {\n\n                    // calculate difference of zooming value to initial zoom\n                    var deltaZoom = value / currentZoom;\n\n                    if (value !== currentZoom) {\n\n                        // calculate new translation\n                        currentTransformMatrix.e = originX - ((deltaX * deltaZoom - deltaX));\n                        currentTransformMatrix.f = originY - ((deltaY * deltaZoom - deltaY));\n\n                        // add new scaling\n                        currentTransformMatrix.a = value;\n                        currentTransformMatrix.d = value;\n\n                        // apply transformation to our element\n                        zpdElement.node.setAttribute('transform', _getSvgMatrixAsString(currentTransformMatrix));\n                    }\n\n                }, interval, ease, callbackFunction);\n            }\n        };\n\n\n        /**\n         * move the element to a certain position\n         */\n        var panTo = function (x, y, interval, ease, cb) {\n\n            // get a reference to the current element\n            var self = this;\n\n            // check if we have this element in our zpd data storage\n            if (snapsvgzpd.dataStore.hasOwnProperty(self.id)) {\n\n                var zpdElement = snapsvgzpd.dataStore[self.id].element;\n\n                var gMatrix = zpdElement.node.getCTM(),\n                    matrixX = _increaseDecreaseOrNumber(gMatrix.e, x),\n                    matrixY = _increaseDecreaseOrNumber(gMatrix.f, y),\n                    matrixString = \"matrix(\" + gMatrix.a + \",\" + gMatrix.b + \",\" + gMatrix.c + \",\" + gMatrix.d + \",\" + matrixX + \",\" + matrixY + \")\";\n\n                // dataStore[me.id].transform(matrixString); // load <g> transform matrix\n                zpdElement.animate({ transform: matrixString }, interval || 10, ease || null, function () {\n                    if (cb) {\n                        cb(null, zpdElement);\n                    }\n                });\n\n            }\n        };\n\n        /**\n         * rotate the element to a certain rotation\n         */\n        var rotate = function (a, x, y, interval, ease, cb) {\n            // get a reference to the current element\n            var self = this;\n\n            // check if we have this element in our zpd data storage\n            if (snapsvgzpd.dataStore.hasOwnProperty(self.id)) {\n\n                var zpdElement = snapsvgzpd.dataStore[self.id].element;\n\n                var gMatrix = zpdElement.node.getCTM(),\n                    matrixString = \"matrix(\" + gMatrix.a + \",\" + gMatrix.b + \",\" + gMatrix.c + \",\" + gMatrix.d + \",\" + gMatrix.e + \",\" + gMatrix.f + \")\";\n\n                if (!x || typeof x !== 'number') {\n                    x = self.node.offsetWidth / 2;\n                }\n                if (!y || typeof y !== 'number') {\n                    y = self.node.offsetHeight / 2;\n                }\n\n                // dataStore[me.id].transform(matrixString); // load <g> transform matrix\n                zpdElement.animate({ transform: new Snap.Matrix(gMatrix).rotate(a, x, y) }, interval || 10, ease || null, function () {\n                    if (cb) {\n                        cb(null, zpdElement);\n                    }\n                });\n\n            }\n        };\n\n        Paper.prototype.zpd = zpd;\n        Paper.prototype.zoomTo = zoomTo;\n        Paper.prototype.panTo = panTo;\n        Paper.prototype.rotate = rotate;\n\n        /** More Features to add (click event) help me if you can **/\n        // Element.prototype.panToCenter = panToCenter; // arg (ease, interval, cb)\n\n\n        /** UI for zpdr **/\n\n    });\n\n})(Snap);\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/snap.svg.zpd/snap.svg.zpd.js\n// module id = 3\n// module chunks = 0","export default {\n    'scale_factor': 1,\n    'colours': [\n        '#008744',\n        '#0057e7',\n        '#d62d20',\n        '#ffa700'\n    ]\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/default-settings.js\n// module id = 4\n// module chunks = 0","export default [\n   {\n       'name': 'Giant Defy 2015 L',\n       'reach': 390,\n       'stack': 604,\n       'top_tube': 575,\n       'seat_tube_length': 525,\n       'head_angle': 72.5,\n       'seat_angle': 73,\n       'head_tube': 205,\n       'chainstay': 420,\n       'wheelbase': 1022,\n       'standover': 813,\n       'bb_drop': 50,  // positive bb drop is earthwards\n       'rake': 48,\n       'trail': 61,\n       'wheel_size': 622, // 622 is 700c\n       'tire_width': 20,\n       'head_tube_top_cap': 10,\n       'head_tube_spacer': 15,\n       'stem_height': 20,\n       'stem_angle': -6,\n       'stem_length': 110,\n       'crank': 175,\n   },\n   {\n       'name': 'Specialized Allez Sprint',\n       'reach': 395,\n       'stack': 554,\n       'top_tube': 554,\n       'seat_tube_length': 520,\n       'head_angle': 73.5,\n       'seat_angle': 74,\n       'head_tube': 150,\n       'chainstay': 405,\n       'wheelbase': 984,\n       'standover': 589,\n       'bb_drop': 69,  // positive bb drop is earthwards\n       'bb_height': 272,  // positive bb drop is earthwards\n       'rake': 44,\n       'trail': 55,\n       'stem_length': 100,\n       'crank': 172,\n\n       'fork_length': 368,\n       'seatpost_length': 330,\n\n       'wheel_size': 622, // 622 is 700c\n       'tire_width': 20,\n       'head_tube_top_cap': 10,\n       'head_tube_spacer': 15,\n       'stem_height': 20,\n       'stem_angle': -6,\n\n   },\n   {\n       'name': 'Weird Bike',\n       'reach': 295,\n       'stack': 594,\n       'top_tube': 554,\n       'seat_tube_length': 520,\n       'head_angle': 73.5,\n       'seat_angle': 75,\n       'head_tube': 150,\n       'chainstay': 405,\n       'wheelbase': 984,\n       'standover': 589,\n       'bb_drop': 30,  // positive bb drop is earthwards\n       'rake': 44,\n       'trail': 55,\n       'stem_length': 100,\n       'crank': 172,\n\n       'fork_length': 368,\n       'seatpost_length': 330,\n\n       'wheel_size': 622, // 622 is 700c\n       'tire_width': 20,\n       'head_tube_top_cap': 10,\n       'head_tube_spacer': 15,\n       'stem_height': 20,\n       'stem_angle': -6,\n\n   }\n];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/default-input-bikes.js\n// module id = 5\n// module chunks = 0","\nexport default BikeGeometry;\n\nfunction BikeGeometry(initMeasurements, settings) {\n\n\n\n        this.inputMeasurements = {\n            // Define some default values / core assumptions.\n            // Values are in mm.\n            'wheel_size': 622, // 622 is 700c\n            'tire_width': 20,\n            'head_tube_top_cap': 10,\n            'head_tube_spacer': 15,\n            'stem_height': 20,\n            'stem_angle': -6,\n        };\n\n        // Update defaults with inputs\n        for (var attrname in initMeasurements) {\n            this.inputMeasurements[attrname] = initMeasurements[attrname];\n        }\n\n\n        // This 'r' = resolved values -  resolved immediately when the Bike is instantiated.\n        // TODO: (Possibly?) create calculate() and inti() functions?\n\n        this.resolvedPoint = {};\n\n        // Define origin - Bottom Bracket center x, y.\n        this.resolvedPoint.bb_cx = 0;\n        this.resolvedPoint.bb_cy = 0;\n\n\n        // Start with Stack and Reach\n        // Define front cockpit point, then work back along the virtual top tube line.\n        //\n        if (this.inputMeasurements.hasOwnProperty('stack') && this.inputMeasurements.hasOwnProperty('reach')){\n\n            this.resolvedPoint.stack_reach_x = this.resolvedPoint.bb_cx + this.inputMeasurements.reach / settings['scale_factor'];\n            this.resolvedPoint.stack_reach_y = this.resolvedPoint.bb_cy - this.inputMeasurements.stack / settings['scale_factor'];\n\n            this.resolvedPoint.virtual_top_tube_rear_x = this.resolvedPoint.bb_cx - this.inputMeasurements.stack / settings['scale_factor'] / Snap.tan(this.inputMeasurements.seat_angle);\n            this.resolvedPoint.virtual_top_tube_rear_y = this.resolvedPoint.stack_reach_y;\n        } else if (this.inputMeasurements.hasOwnProperty('seat_angle') && this.inputMeasurements.hasOwnProperty('seat_tube_length') && this.inputMeasurements.hasOwnProperty('top_tube')) {\n\n\n          // TODO: Develop method for bikes where stack and reach are unknown.\n\n\n        }\n\n        // Calculate the seat tube, and seat stays.\n\n        this.resolvedPoint.seat_tube_top_x = this.resolvedPoint.bb_cx - Snap.cos(this.inputMeasurements.seat_angle) * this.inputMeasurements.seat_tube_length / settings['scale_factor'];\n        this.resolvedPoint.seat_tube_top_y = this.resolvedPoint.bb_cy - Snap.sin(this.inputMeasurements.seat_angle) * this.inputMeasurements.seat_tube_length / settings['scale_factor'];\n\n        this.resolvedPoint.seat_stays_top_x = this.resolvedPoint.bb_cx - Snap.cos(this.inputMeasurements.seat_angle) * this.inputMeasurements.seat_tube_length * 0.90 / settings['scale_factor'];\n        this.resolvedPoint.seat_stays_top_y = this.resolvedPoint.bb_cy - Snap.sin(this.inputMeasurements.seat_angle) * this.inputMeasurements.seat_tube_length * 0.90 / settings['scale_factor'];\n\n\n        // Compute a virtual steer axis.\n        // This will run down through the head tube, and could eventually be used for Trail.\n\n        if (this.inputMeasurements.hasOwnProperty('bb_height')){\n            this.resolvedPoint.virtual_steer_axis_bottom_y = this.inputMeasurements.bb_height / settings['scale_factor'];\n            this.resolvedPoint.virtual_steer_axis_bottom_x = this.resolvedPoint.stack_reach_x +  (this.inputMeasurements.bb_height / settings['scale_factor'] - this.resolvedPoint.stack_reach_y) / Snap.tan(this.inputMeasurements.head_angle);\n        } else {\n            this.resolvedPoint.virtual_steer_axis_bottom_x = this.resolvedPoint.stack_reach_x +  (0 - this.resolvedPoint.stack_reach_y) / Snap.tan(this.inputMeasurements.head_angle);\n            this.resolvedPoint.virtual_steer_axis_bottom_y = 0;\n        }\n\n        // Compute the head tube ends\n        this.resolvedPoint.head_tube_bottom_x = this.resolvedPoint.stack_reach_x + Snap.cos(this.inputMeasurements.head_angle) * this.inputMeasurements.head_tube / settings['scale_factor'];\n        this.resolvedPoint.head_tube_bottom_y = this.resolvedPoint.stack_reach_y + Snap.sin(this.inputMeasurements.head_angle) * this.inputMeasurements.head_tube / settings['scale_factor'];\n\n        // Compute the top tube ends\n        this.resolvedPoint.top_tube_front_x = this.resolvedPoint.stack_reach_x + Snap.cos(this.inputMeasurements.head_angle) * this.inputMeasurements.head_tube * 0.05 / settings['scale_factor'];\n        this.resolvedPoint.top_tube_front_y = this.resolvedPoint.stack_reach_y + Snap.sin(this.inputMeasurements.head_angle) * this.inputMeasurements.head_tube * 0.05 / settings['scale_factor'];\n\n        // Compute the down tube front - the back is the bottom bracket\n        this.resolvedPoint.down_tube_front_x = this.resolvedPoint.stack_reach_x + Snap.cos(this.inputMeasurements.head_angle) * this.inputMeasurements.head_tube * 0.80 / settings['scale_factor'];\n        this.resolvedPoint.down_tube_front_y = this.resolvedPoint.stack_reach_y + Snap.sin(this.inputMeasurements.head_angle) * this.inputMeasurements.head_tube * 0.80 / settings['scale_factor'];\n\n        // Compute token headset\n\n        this.resolvedPoint.steerer_tube_top_x = this.resolvedPoint.stack_reach_x - Snap.cos(this.inputMeasurements.head_angle) * (this.inputMeasurements.head_tube_top_cap + this.inputMeasurements.head_tube_spacer + this.inputMeasurements.stem_height) / settings['scale_factor'];\n        this.resolvedPoint.steerer_tube_top_y = this.resolvedPoint.stack_reach_y - Snap.sin(this.inputMeasurements.head_angle) * (this.inputMeasurements.head_tube_top_cap + this.inputMeasurements.head_tube_spacer + this.inputMeasurements.stem_height) / settings['scale_factor'];\n\n        // Compute stem\n        this.resolvedPoint.stem_rear_x = this.resolvedPoint.stack_reach_x - Snap.cos(this.inputMeasurements.head_angle) * (this.inputMeasurements.head_tube_top_cap + this.inputMeasurements.head_tube_spacer + this.inputMeasurements.stem_height/2) / settings['scale_factor'];\n        this.resolvedPoint.stem_rear_y = this.resolvedPoint.stack_reach_y - Snap.sin(this.inputMeasurements.head_angle) * (this.inputMeasurements.head_tube_top_cap + this.inputMeasurements.head_tube_spacer + this.inputMeasurements.stem_height/2 ) / settings['scale_factor'];\n        this.resolvedPoint.stem_forward_x = this.resolvedPoint.stem_rear_x  + Snap.cos(90 - this.inputMeasurements.head_angle + this.inputMeasurements.stem_angle) * this.inputMeasurements.stem_length /settings['scale_factor'];\n        this.resolvedPoint.stem_forward_y = this.resolvedPoint.stem_rear_y - Snap.sin(90 - this.inputMeasurements.head_angle + this.inputMeasurements.stem_angle) * this.inputMeasurements.stem_length /settings['scale_factor'];\n\n        // Compute Cranks\n        if (this.inputMeasurements.hasOwnProperty('crank_length')){\n            this.resolvedPoint.crank_length = this.inputMeasurements.crank_length / settings['scale_factor'];\n            this.resolvedPoint.crank_forward_x = this.resolvedPoint.bb_cx + Snap.cos(6) * this.resolvedPoint.crank_length;\n            this.resolvedPoint.crank_forward_y = this.resolvedPoint.bb_cy + Snap.sin(6) * this.resolvedPoint.crank_length;\n        }\n\n        // Compute Wheel Radius\n        if (this.inputMeasurements.hasOwnProperty('wheel_size')){\n            this.resolvedPoint.wheel_r = (this.inputMeasurements.wheel_size/2 + this.inputMeasurements.tire_width) / settings['scale_factor'];\n        }\n\n        // Compute wheel height - either using bb_drop or bb_height - most manufs give one or other, sometimes both.\n        if (this.inputMeasurements.hasOwnProperty('bb_drop')){\n            this.resolvedPoint.backwheel_cy = this.resolvedPoint.bb_cy - this.inputMeasurements.bb_drop / settings['scale_factor'];\n            this.resolvedPoint.frontwheel_cy  = this.resolvedPoint.backwheel_cy;\n            this.resolvedPoint.backwheel_cx = this.resolvedPoint.bb_cx - Math.sqrt( Math.pow(this.inputMeasurements.chainstay, 2) - Math.pow(this.inputMeasurements.bb_drop, 2)) / settings['scale_factor'];\n            this.resolvedPoint.frontwheel_cx = this.resolvedPoint.backwheel_cx + this.inputMeasurements.wheelbase / settings['scale_factor'];\n        } else if (this.inputMeasurements.hasOwnProperty('bb_height') && this.resolvedPoint.hasOwnProperty('wheel_r')){\n            this.resolvedPoint.backwheel_cy = this.resolvedPoint.bb_cy + this.inputMeasurements.bb_height / settings['scale_factor'] - this.resolvedPoint.wheel_r  ;\n            this.resolvedPoint.backwheel_cx = this.resolvedPoint.bb_cx - Math.sqrt( Math.pow(this.inputMeasurements.chainstay/ settings['scale_factor'], 2) - Math.pow(Math.abs(this.resolvedPoint.wheel_r - this.inputMeasurements.bb_height / settings['scale_factor']), 2));\n            this.resolvedPoint.frontwheel_cy = this.resolvedPoint.backwheel_cy;\n            this.resolvedPoint.frontwheel_cx = this.resolvedPoint.backwheel_cx + this.inputMeasurements.wheelbase / settings['scale_factor'];\n\n        }\n\n        // bb_height - useful for figuring out where the ground is.\n\n        if (this.inputMeasurements.hasOwnProperty('bb_height')){\n            this.resolvedPoint.bb_height = this.inputMeasurements.bb_height / settings['scale_factor'];\n        } else {\n            this.resolvedPoint.bb_height = this.resolvedPoint.wheel_r - this.inputMeasurements.bb_drop / settings['scale_factor'];\n        }\n\n        // Compute seatpost top, if seatpost length available.\n        if (this.inputMeasurements.hasOwnProperty('seatpost_length')){\n            this.resolvedPoint.seatpost_top_x = this.resolvedPoint.bb_cx - Snap.cos(this.inputMeasurements.seat_angle) * (this.inputMeasurements.seatpost_length - this.inputMeasurements.seat_tube_length / settings['scale_factor']);\n            this.resolvedPoint.seatpost_top_y = this.resolvedPoint.bb_cy - Snap.sin(this.inputMeasurements.seat_angle) * (this.inputMeasurements.seatpost_length - this.inputMeasurements.seat_tube_length / settings['scale_factor']);\n        }\n\n        // Calculate {max, min} {x, y} as bounding box around bike.\n        this.resolvedPoint.max_y = this.resolvedPoint.bb_height;\n\n\n        if (this.resolvedPoint.hasOwnProperty('seatpost_top_y')){\n            this.resolvedPoint.min_y = Math.min(this.resolvedPoint.stem_rear_y, this.resolvedPoint.seatpost_top_y);\n        } else {\n            this.resolvedPoint.min_y = this.resolvedPoint.stem_rear_y;\n        }\n        this.resolvedPoint.min_x = this.resolvedPoint.backwheel_cx - this.resolvedPoint.wheel_r;\n        this.resolvedPoint.max_x = this.resolvedPoint.frontwheel_cx + this.resolvedPoint.wheel_r;\n\n    };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/parse-geometry.js\n// module id = 6\n// module chunks = 0","export default Drawing;\n\nfunction Drawing (bikeGeometry, paper, frameColour, x_offset, y_offset, settings) {\n\n\n    this.i = bikeGeometry.inputMeasurements;\n    this.r = bikeGeometry.resolvedPoint;\n\n    var frameColour = frameColour || \"#AAAAAA\",\n        x_offset = x_offset || 0,\n        y_offset = y_offset || 0,\n        frameSettings = {\n            stroke: frameColour,\n            strokeWidth: 4,\n            \"stroke-opacity\": 1\n        },\n        wheelSeetings = {\n            fill: \"transparent\",\n            \"stroke-opacity\": 0.8,\n            stroke: \"#aaa\",\n            strokeWidth: this.i.tire_width / settings['scale_factor']\n        };\n\n    // Array for storing drawing objects.\n    this.drawObjs = [];\n\n    this.draw = function(){\n\n        if (!this.r.hasOwnProperty('stack_reach_x')){\n            return;\n        }\n\n\n        this.drawObjs['virtual_steer_axis'] = paper.line(this.r['stack_reach_x'], this.r['stack_reach_y'], this.r['virtual_steer_axis_bottom_x'], this.r['virtual_steer_axis_bottom_y']);\n        this.drawObjs['virtual_steer_axis'].attr({\n            stroke: \"#bbb\",\n            strokeWidth: 1,\n            \"stroke-opacity\": 0.5\n        });\n\n        this.drawObjs['virtual_top_tube'] = paper.line(this.r['stack_reach_x'], this.r['stack_reach_y'], this.r['virtual_top_tube_rear_x'], this.r['virtual_top_tube_rear_y']);\n        this.drawObjs['virtual_top_tube'].attr({\n            stroke: \"#bbb\",\n            strokeWidth: 1,\n            \"stroke-opacity\": 0.5\n        });\n\n        this.drawObjs['rear_wheel'] = paper.circle(this.r['backwheel_cx'], this.r['backwheel_cy'], this.r['wheel_r']).attr(wheelSeetings);\n\n        if( this.r.hasOwnProperty('frontwheel_cx') && !isNaN(this.r['frontwheel_cx']) ){\n            this.drawObjs['front_wheel'] = paper.circle(this.r['frontwheel_cx'], this.r['frontwheel_cy'], this.r['wheel_r']).attr(wheelSeetings);\n        }\n\n        this.drawObjs['sr_circle'] = paper.circle(this.r['stack_reach_x'], this.r['stack_reach_y'], 5);\n        this.drawObjs['sr_circle'].attr({\n            fill: \"#2c3e50\",\n            stroke: \"#2c3e50\",\n            strokeWidth: 1\n        });\n\n        this.drawObjs['chainstays'] = paper.line(this.r['backwheel_cx'], this.r['backwheel_cy'], this.r['bb_cx'], this.r['bb_cy']);\n        this.drawObjs['chainstays'].attr(frameSettings);\n        this.drawObjs['chainstays'].attr({\n            strokeWidth: 2\n        });\n        this.drawObjs['seat_tube'] = paper.line(this.r['seat_tube_top_x'], this.r['seat_tube_top_y'], this.r['bb_cx'], this.r['bb_cy']);\n        this.drawObjs['seat_tube'].attr(frameSettings);\n\n\n        this.drawObjs['seatstays'] = paper.line(this.r['seat_stays_top_x'], this.r['seat_stays_top_y'], this.r['backwheel_cx'], this.r['backwheel_cy']);\n        this.drawObjs['seatstays'].attr(frameSettings);\n        this.drawObjs['seatstays'].attr({\n            strokeWidth: 2\n        });\n\n        this.drawObjs['top_tube'] = paper.line(this.r['top_tube_front_x'], this.r['top_tube_front_y'], this.r['seat_tube_top_x'], this.r['seat_tube_top_y']);\n        this.drawObjs['top_tube'].attr(frameSettings);\n\n\n        this.drawObjs['head_tube'] = paper.line(this.r['stack_reach_x'], this.r['stack_reach_y'], this.r['head_tube_bottom_x'], this.r['head_tube_bottom_y']);\n        this.drawObjs['head_tube'].attr(frameSettings);\n\n        this.drawObjs['steerer_tube'] = paper.line(this.r['head_tube_bottom_x'], this.r['head_tube_bottom_y'], this.r['steerer_tube_top_x'], this.r['steerer_tube_top_y']);\n        this.drawObjs['steerer_tube'].attr(frameSettings);\n\n        if( this.r.hasOwnProperty('frontwheel_cx') && !isNaN(this.r['frontwheel_cx']) ){\n            this.drawObjs['fork'] = paper.line(this.r['head_tube_bottom_x'], this.r['head_tube_bottom_y'], this.r['frontwheel_cx'], this.r['frontwheel_cy']).attr(frameSettings);\n        };\n\n        this.drawObjs['down_tube_straight'] = paper.line(this.r['bb_cx'], this.r['bb_cy'], this.r['down_tube_front_x'], this.r['down_tube_front_y']);\n        this.drawObjs['down_tube_round_end'] = paper.circle(this.r['head_tube_bottom_x'], this.r['head_tube_bottom_y'], 2);\n        this.drawObjs['down_tube_straight'].attr(frameSettings);\n        this.drawObjs['down_tube_round_end'].attr({\n            fill: frameColour,\n            strokeWidth: 4\n        });\n\n\n        if (this.r.hasOwnProperty('crank_length')){\n            this.drawObjs['crank'] = paper.line(\n                    this.r['bb_cx'], this.r['bb_cy'],\n                    this.r['crank_forward_x'], this.r['crank_forward_y']\n                ).attr({\n                stroke: \"#777\",\n                strokeWidth: 3\n            });\n        };\n    }\n\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/draw-bike-snapsvg.js\n// module id = 7\n// module chunks = 0","\nexport default {\n    'mid-travel-mtbs': [\n        {\n            \"seat_angle\": 73.599999999999994,\n            \"seatpost_diameter\": 30.899999999999999,\n            \"axle_to_crown\": 539150.0,\n            \"head_angle\": 66.5,\n            \"year\": 2017.0,\n            \"bb_type\": 92.0,\n            \"wheel_size\": 584,\n            \"title\": \"Yeti SB5 2017 M\",\n            \"slug\": 52017.0,\n            \"bb_height\": 338.0,\n            \"seat_tube_length\": 445.0,\n            \"axle_spacing\": 14812.0,\n            \"head_tube\": 127.0,\n            \"reach\": 424.0,\n            \"top_tube\": 603.0,\n            \"stack\": 610.0,\n            \"bike_slug\": \"yeti-sb5-2017\",\n            \"fork_rake\": 44.0,\n            \"wheelbase\": 1168.0,\n            \"front_centre\": 731.0,\n            \"standover\": 724.0,\n            \"chainstay\": 437.0\n        },\n        {\n            \"seat_angle\": 73.799999999999997,\n            \"seatpost_diameter\": 31.600000000000001,\n            \"head_angle\": 67.0,\n            \"year\": 2016.0,\n            \"bb_type\": \"Threaded\",\n            \"wheel_size\": 584,\n            \"seatpost_length\": 400.0,\n            \"stack\": 595.0,\n            \"bb_height\": 334.0,\n            \"seat_tube_length\": 420.0,\n            \"axle_spacing\": 14812.0,\n            \"head_tube\": 110.0,\n            \"bb_drop\": 20.0,\n            \"reach\": 425.0,\n            \"front_sus_travel\": 130.0,\n            \"top_tube\": 598.0,\n            \"slug\": 50102016.0,\n            \"bike_slug\": \"santa-cruz-5010-2016\",\n            \"rear_sus_travel\": 130.0,\n            \"title\": \"Santa Cruz 5010 2016 M\",\n            \"wheelbase\": 1141.0,\n            \"standover\": 717.0,\n            \"chainstay\": 426.0\n        },\n        {\n            \"seat_angle\": 74.0,\n            \"axle_to_crown\": 542.0,\n            \"head_angle\": 67.0,\n            \"year\": 2016.0,\n            \"bb_type\": 30.0,\n            \"wheel_size\": \"27.5\\\"x2.3\\\"\",\n            \"title\": \"Specialized Stumpjumper FSR 650b 2016 M\",\n            \"slug\": 6502016.0,\n            \"bb_height\": 335.0,\n            \"seat_tube_length\": 430.0,\n            \"type\": \"Mountain\",\n            \"head_tube\": 105.0,\n            \"bb_drop\": 18.0,\n            \"reach\": 414.0,\n            \"trail\": 104.0,\n            \"top_tube\": 585.0,\n            \"crank_length\": 175.0,\n            \"handlebar_width\": 750.0,\n            \"stack\": 599.0,\n            \"stem_length\": 60.0,\n            \"bike_slug\": \"specialized-stumpjumper-fsr-650b-2016-1\",\n            \"axle_spacing\": 14812.0,\n            \"seatpost_length\": 430.0,\n            \"fork_rake\": 46.0,\n            \"wheelbase\": 1126.0,\n            \"front_centre\": 706.0,\n            \"standover\": 748.0,\n            \"chainstay\": 420.0\n        }\n    ],\n    'endurance-road': [\n        {\n            \"bike_slug\": \"giant-defy-advanced-2016\",\n            \"title\": \"Giant Defy Advanced 2016 M (48.0)\",\n            \"chainstay\": 420.0,\n            \"seat_angle\": 73.5,\n            \"year\": 2016.0,\n            \"reach\": 377.0,\n            \"stack\": 567.0,\n            \"head_angle\": 72.5,\n            \"top_tube\": 545.0,\n            \"standover\": 777.0,\n            \"wheelbase\": 995.0,\n            \"slug\": 2016480.0,\n            \"head_tube\": 165.0\n        },\n        {\n            \"wheel_size\": 622,\n            \"bike_slug\": \"trek-domane-2016\",\n            \"title\": \"Trek Domane 2016 54cm\",\n            \"chainstay\": 420.0,\n            \"seat_angle\": 73.700000000000003,\n            \"year\": 2016.0,\n            \"reach\": 374.0,\n            \"fork_rake\": 53.0,\n            \"bb_drop\": 80.0,\n            \"stack\": 575.0,\n            \"head_angle\": 71.299999999999997,\n            \"trail\": 59.0,\n            \"top_tube\": 542.0,\n            \"seat_tube_length\": 500.0,\n            \"standover\": 754.0,\n            \"wheelbase\": 1010.0,\n            \"slug\": 201654.0,\n            \"head_tube\": 160.0\n        },\n        {\n            \"bike_slug\": \"specialized-roubaix-pro-2017\",\n            \"title\": \"Specialized Roubaix Pro 2017 54\",\n            \"chainstay\": 415.0,\n            \"seat_angle\": 74.0,\n            \"year\": 2017.0,\n            \"reach\": 380.0,\n            \"fork_rake\": 44.0,\n            \"bb_drop\": 76.0,\n            \"stack\": 570.0,\n            \"head_angle\": 72.75,\n            \"trail\": 61.0,\n            \"top_tube\": 545.0,\n            \"seat_tube_length\": 481.0,\n            \"standover\": 762.0,\n            \"wheelbase\": 987.0,\n            \"slug\": 201754.0,\n            \"head_tube\": 125.0,\n            \"front_centre\": 584.0\n        },\n        {\n            \"wheel_size\": 622,\n            \"bike_slug\": \"enigma-evoke-3al-2-5v-2016\",\n            \"title\": \"Enigma Evoke 3AL 2.5V 2016 55\",\n            \"chainstay\": 409.0,\n            \"seat_angle\": 73.0,\n            \"seat_tube_length\": 510.0,\n            \"seatpost_diameter\": 31.600000000000001,\n            \"fork_rake\": 45.0,\n            \"stack\": 570.0,\n            \"head_angle\": 72.5,\n            \"top_tube\": 550.0,\n            \"bb_height\": 265.0,\n            \"year\": 2016.0,\n            \"reach\": 375.0,\n            \"bb_type\": \"English threaded\",\n            \"slug\": 325201655.0,\n            \"head_tube\": 155.0\n        }\n    ],\n    'racy-road': [\n        {\n            \"wheel_size\": 622,\n            \"bike_slug\": \"cerv-lo-s5-2016\",\n            \"type\": \"Road\",\n            \"title\": \"Cerv\\u00e9lo S5 2016 54\",\n            \"chainstay\": 405.0,\n            \"seat_angle\": 73.0,\n            \"standover\": 741.0,\n            \"reach\": 384.0,\n            \"fork_rake\": 43.0,\n            \"bb_drop\": 68.0,\n            \"stack\": 542.0,\n            \"head_angle\": 73.099999999999994,\n            \"top_tube\": 550.0,\n            \"front_centre\": 577.0,\n            \"year\": 2016.0,\n            \"bb_type\": 30.0,\n            \"slug\": 5201654.0,\n            \"head_tube\": 135.0\n        },\n        {\n            \"bike_slug\": \"specialized-s-works-tarmac-2017\",\n            \"title\": \"Specialized S-Works Tarmac 2017 54\",\n            \"chainstay\": 405.0,\n            \"seat_angle\": 73.5,\n            \"year\": 2017.0,\n            \"reach\": 387.0,\n            \"fork_rake\": 45.0,\n            \"bb_drop\": 69.0,\n            \"axle_to_crown\": 368.0,\n            \"head_angle\": 73.0,\n            \"trail\": 57.0,\n            \"top_tube\": 548.0,\n            \"bb_height\": 272.5,\n            \"seat_tube_length\": 481.0,\n            \"standover\": 775.0,\n            \"stack\": 543.0,\n            \"wheelbase\": 978.0,\n            \"slug\": 201754.0,\n            \"head_tube\": 140.0,\n            \"front_centre\": 583.0\n        },\n        {\n            \"bike_slug\": \"giant-tcr-advanced-pro-2017\",\n            \"title\": \"Giant TCR Advanced Pro 2017 M (47.0)\",\n            \"chainstay\": 405.0,\n            \"seat_angle\": 73.0,\n            \"year\": 2017.0,\n            \"reach\": 383.0,\n            \"stack\": 545.0,\n            \"head_angle\": 73.0,\n            \"top_tube\": 550.0,\n            \"standover\": 765.0,\n            \"wheelbase\": 976.0,\n            \"slug\": 2017470.0,\n            \"head_tube\": 148.0\n        }\n    ],\n    'tri-tt-bikes': [\n        {\n            \"seat_angle\": 74.0,\n            \"axle_to_crown\": 368.0,\n            \"head_angle\": 72.5,\n            \"year\": 2016.0,\n            \"title\": \"BMC Timemachine TMR 01/02 2016 54\",\n            \"slug\": 102201654.0,\n            \"seat_tube_length\": 567.0,\n            \"head_tube\": 144.0,\n            \"standover\": 800.0,\n            \"reach\": 386.0,\n            \"trail\": 63.0,\n            \"top_tube\": 542.0,\n            \"crank_length\": 172.5,\n            \"handlebar_width\": 420.0,\n            \"stack\": 545.0,\n            \"stem_length\": 110.0,\n            \"bike_slug\": \"bmc-timemachine-tmr-01-02-2016\",\n            \"fork_rake\": 42.0,\n            \"wheelbase\": 979.0,\n            \"front_centre\": 584.0,\n            \"bb_drop\": 69.0,\n            \"chainstay\": 405.0\n        },\n        {\n            \"bike_slug\": \"giant-trinity-advanced-pro-2017\",\n            \"title\": \"Giant Trinity Advanced Pro 2017 M\",\n            \"chainstay\": 405.0,\n            \"seat_angle\": \"74.7 / 76.2 / 78\",\n            \"year\": 2017.0,\n            \"reach\": 417.0,\n            \"stack\": 539.0,\n            \"head_angle\": 73.0,\n            \"top_tube\": 602.0,\n            \"standover\": 790.0,\n            \"wheelbase\": 1003.0,\n            \"slug\": 2017.0,\n            \"head_tube\": 140.0,\n            \"bb_drop\": 65.0\n        },\n        {\n            \"bike_slug\": \"specialized-shiv-2017\",\n            \"title\": \"Specialized Shiv 2017 M\",\n            \"chainstay\": 395.0,\n            \"seat_angle\": 77.0,\n            \"year\": 2017.0,\n            \"reach\": 405.0,\n            \"fork_rake\": 45.0,\n            \"bb_drop\": 72.0,\n            \"axle_to_crown\": 367.0,\n            \"head_angle\": 72.0,\n            \"trail\": 60.0,\n            \"top_tube\": 530.0,\n            \"bb_height\": 258.0,\n            \"seat_tube_length\": 551.0,\n            \"standover\": 797.0,\n            \"stack\": 540.0,\n            \"wheelbase\": 993.0,\n            \"slug\": 2017.0,\n            \"head_tube\": 139.0,\n            \"front_centre\": 609.0\n        }\n    ],\n    'chameleon_evolution-2008-2017': [\n        {\n            \"wheel_size\": 559,\n            \"bike_slug\": \"santa-cruz-chameleon-2008-2012\",\n            \"type\": \"Mountain\",\n            \"title\": \"Santa Cruz Chameleon 2008-2012 Medium\",\n            \"chainstay\": 419.0,\n            \"seat_angle\": 72.0,\n            \"standover\": 729.0,\n            \"seatpost_diameter\": 30.899999999999999,\n            \"axle_to_crown\": 515.0,\n            \"head_angle\": 68.0,\n            \"top_tube\": 571.0,\n            \"bb_height\": 331.0,\n            \"seat_tube_length\": 406.0,\n            \"year\": 20082012.0,\n            \"axle_spacing\": 135.0,\n            \"bb_type\": 68.0,\n            \"slug\": 20082012.0,\n            \"head_tube\": 109.0,\n            \"wheelbase\": 1074.0\n        },\n        {\n            \"wheel_size\": 559,\n            \"bike_slug\": \"santa-cruz-chameleon-2013\",\n            \"title\": \"Santa Cruz Chameleon 2013 M\",\n            \"chainstay\": 419.0,\n            \"seat_angle\": 72.0,\n            \"year\": 2013.0,\n            \"reach\": 396.0,\n            \"stack\": 578.0,\n            \"head_angle\": 68.0,\n            \"top_tube\": 584.20000000000005,\n            \"bb_height\": 314.0,\n            \"seat_tube_length\": 431.80000000000001,\n            \"standover\": 739.39999999999998,\n            \"wheelbase\": 1087.2,\n            \"type\": \"Mountain\",\n            \"slug\": 2013.0,\n            \"head_tube\": 110.0\n        },\n        {\n            \"seat_angle\": 73.0,\n            \"seatpost_diameter\": 31.600000000000001,\n            \"axle_to_crown\": 530.0,\n            \"head_angle\": 67.5,\n            \"year\": 2017.0,\n            \"bb_type\": \"Threaded\",\n            \"wheel_size\": 584,\n            \"title\": \"Santa Cruz Chameleon 2017 M\",\n            \"stack\": 615.0,\n            \"bb_height\": 315.0,\n            \"seat_tube_length\": 420.0,\n            \"type\": \"Mountain\",\n            \"recommended_height_manuf\": 55510.0,\n            \"head_tube\": 100.0,\n            \"reach\": 440.0,\n            \"top_tube\": 621.0,\n            \"slug\": 2017.0,\n            \"bike_slug\": \"santa-cruz-chameleon-27-5-2017\",\n            \"axle_spacing\": 1481214212.0,\n            \"wheelbase\": 1140.0,\n            \"standover\": 705.0,\n            \"chainstay\": 415.0\n        }\n    ]\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/test-comparisons.js\n// module id = 8\n// module chunks = 0"],"sourceRoot":""}